===== Config file =====
[gcode_macro BED_MESH_CALIBRATE]
rename_existing = _BED_MESH_CALIBRATE
variable_led_enable = False
variable_status_macro = 'status_meshing'
variable_fuzz_enable = False
variable_fuzz_min = 0
variable_fuzz_max = 4
variable_probe_dock_enable = False
variable_attach_macro = 'Attach_Probe'
variable_detach_macro = 'Dock_Probe'
gcode = 
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}
	{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}
	{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (printer.configfile.settings.bed_mesh.probe_count[0]-2)  %}
	{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (printer.configfile.settings.bed_mesh.probe_count[1]-2)  %}
	{% set x_min = bed_mesh_min[0] %}
	{% set y_min = bed_mesh_min[1] %}
	{% set x_max = bed_mesh_max[0] %}
	{% set y_max = bed_mesh_max[1] %}
	
	{ action_respond_info("{} points, clamping to mesh [{!r} {!r}]".format(
	all_points | count,
	bed_mesh_min,
	bed_mesh_max,
	)) }
	
	{% if fuzz_enable == True %}
	{% if all_points %}
	{% set fuzz_range = range(fuzz_min * 100 | int, fuzz_max * 100 | int) %}
	{% set x_min = ( bed_mesh_min[0], ((all_points | map(attribute=0) | min - (fuzz_range | random / 100.0)) | default(bed_mesh_min[0])) ) | max %}
	{% set y_min = ( bed_mesh_min[1], ((all_points | map(attribute=1) | min - (fuzz_range | random / 100.0)) | default(bed_mesh_min[1])) ) | max %}
	{% set x_max = ( bed_mesh_max[0], ((all_points | map(attribute=0) | max + (fuzz_range | random / 100.0)) | default(bed_mesh_max[0])) ) | min %}
	{% set y_max = ( bed_mesh_max[1], ((all_points | map(attribute=1) | max + (fuzz_range | random / 100.0)) | default(bed_mesh_max[1])) ) | min %}
	{% endif %}
	{% else %}
	{% set x_min = [ bed_mesh_min[0], (all_points | map(attribute=0) | min | default(bed_mesh_min[0])) ] | max %}
	{% set y_min = [ bed_mesh_min[1], (all_points | map(attribute=1) | min | default(bed_mesh_min[1])) ] | max %}
	{% set x_max = [ bed_mesh_max[0], (all_points | map(attribute=0) | max | default(bed_mesh_max[0])) ] | min %}
	{% set y_max = [ bed_mesh_max[1], (all_points | map(attribute=1) | max | default(bed_mesh_max[1])) ] | min %}
	{% endif %}
	
	{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(
	(x_min, y_min),
	(x_max, y_max),
	)) }
	
	{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | int) + 2 %}
	{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | int) + 2 %}
	
	{% if (([points_x, points_y]|max) > 6) %}
	{% set algorithm = "bicubic" %}
	{% set min_points = 4 %}
	{% else %}
	{% set algorithm = "lagrange" %}
	{% set min_points = 3 %}
	{% endif %}
	{ action_respond_info( "Algorithm: {}".format(algorithm)) }
	
	{% set points_x = [points_x, min_points]|max  %}
	{% set points_y = [points_y, min_points]|max  %}
	{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }
	
	{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}
	{% set ref_index = (points_x * points_y / 2) | int %}
	{ action_respond_info( "Reference index: {}".format(ref_index) ) }
	{% else %}
	{% set ref_index = -1 %}
	{% endif %}
	
	{% if probe_dock_enable == True %}
	{attach_macro}
	{% endif %}
	
	{% if led_enable == True %}
	{status_macro}
	{% endif %}
	
	_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}
	
	{% if probe_dock_enable == True %}
	{detach_macro}
	{% endif %}

[gcode_macro ADAPTIVE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
variable_adaptive_enable = True
variable_z_height = 0.3
variable_tip_distance = 10
variable_purge_amount = 25
variable_flow_rate = 10
variable_x_default = 10
variable_y_default = 10
variable_size = 10
variable_distance_to_object_x = 15
variable_distance_to_object_y = 0
variable_travel_speed = 300
gcode = 
	{% if adaptive_enable == True %}
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set x_origin = (all_points | map(attribute=0) | min | default(x_default + distance_to_object_x + size)) - distance_to_object_x - size %}
	{% set y_origin = (all_points | map(attribute=1) | min | default(y_default + distance_to_object_y + size)) - distance_to_object_y - size %}
	{% set x_origin = ([x_origin, 0] | max) %}
	{% set y_origin = ([y_origin, 0] | max) %}
	{% else %}
	{% set x_origin = x_default | float %}
	{% set y_origin = y_default | float %}
	{% endif %}
	{% set purge_move_speed = 2.31 * size * flow_rate / (purge_amount * 2.405) %}
	{% set prepurge_speed = flow_rate / 2.405 %}
	{ action_respond_info( "x: " + x_origin|string + " y: " + y_origin|string + " purge_move_speed: " + purge_move_speed|string + " prepurge_speed: " + prepurge_speed|string ) }
	
	G92 E0
	G0 F{travel_speed*60}
	G90
	G0 X{x_origin} Y{y_origin+size/2}
	G0 Z{z_height}
	M83
	G1 E{tip_distance} F{prepurge_speed*60}
	G1 X{x_origin+size*0.289} Y{y_origin+size} E{purge_amount/4} F{purge_move_speed*60}
	G1 E-.5 F2100
	G0 Z{z_height*2}
	G0 X{x_origin+size*0.789} Y{y_origin+size}
	G0 Z{z_height}
	G1 E.5 F2100
	G1 X{x_origin+size*0.211} Y{y_origin} E{purge_amount/2} F{purge_move_speed*60}
	G1 E-.5 F2100
	G0 Z{z_height*2}
	G0 X{x_origin+size*0.711} Y{y_origin}
	G0 Z{z_height}
	G1 E.5 F2100
	G1 X{x_origin+size} Y{y_origin+size/2}  E{purge_amount/4} F{purge_move_speed*60}
	G1 E-.5 F2100
	G92 E0
	G0 Z{z_height*2}

[virtual_sdcard]
path = /home/pi/gcode_files

[pause_resume]

[gcode_macro PRINT_START]
variable_parameter_area_start = 0,0
variable_parameter_area_end = 0,0
gcode = 
	SET_FAN_SPEED FAN=chamber SPEED=.5
	SET_FAN_SPEED FAN=drivers SPEED=1
	{% set BED = params.BED|default(55)|int %}
	{% set EXTRUDER = params.EXTRUDER|default(205)|int %}
	G28 X Y
	
	M104 S170
	M140 S{BED}
	RESPOND PREFIX= MSG="Waiting for temperatures..."
	M117  Waiting for temperatures...
	M190 S{BED}
	RESPOND PREFIX= MSG="Waiting for thermal expansion..."
	M117 Waiting for thermal expansion...
	G4 P30000
	RESPOND PREFIX= MSG="Creating a mesh..."
	M117 Creating a mesh...
	G28
	QUAD_GANTRY_LEVEL
	BED_MESH_CALIBRATE
	
	M104 S{EXTRUDER}
	
	
	RESPOND PREFIX= MSG="Moving to prime position"
	M117 Moving to prime position
	G1 X25 Y-2 Z10 F5000.0
	{% if printer.extruder.temperature < params.EXTRUDER|float*0.98 %}
	M109 S{params.EXTRUDER|float*0.98}
	{% endif %}
	M104 S{EXTRUDER}
	G4 P30000
	ADAPTIVE_PURGE
	RESPOND PREFIX= MSG="Printing..."
	M117 Printing...
	M117

[gcode_macro PID_TUNE]
gcode = 
	G28
	G1 Z10 F7800
	M106 S64
	PID_CALIBRATE HEATER=extruder TARGET=245
	
	
	RESPOND PREFIX= MSG="Moving to prime position"
	M117 Moving to prime position
	G1 X25 Y-3 Z10 F5000.0
	{% if printer.extruder.temperature < params.EXTRUDER|float*0.98 %}
	M109 S{params.EXTRUDER|float*0.98}
	{% endif %}
	M104 S{EXTRUDER}
	
	RESPOND PREFIX= MSG="Priming the nozzle"
	M117 Priming the nozzle
	G92 E0
	G0 Z0.15
	G0 X55 Y-2 Z0.28 F1500.0
	G92 E0
	G1 X195 Y-2 Z0.28 F1500.0 E15
	G92 E0
	G10
	G1 Z2.0 F3000
	
	RESPOND PREFIX= MSG="Printing..."
	M117 Printing...
	M117

[display_status]

[gcode_macro END_PRINT]
gcode = 
	
	G91
	G1 E-2
	
	G90
	
	TURN_OFF_HEATERS
	
	G28 X Y

[gcode_macro PAUSE]
rename_existing = BASE_PAUSE
gcode = 
	
	SAVE_GCODE_STATE NAME=PAUSE_state
	BASE_PAUSE
	G91
	G1 E-{2} F2100
	G1 Z{10}
	G90
	G1 X{230} Y{230} F6000
	G91

[gcode_macro RESUME]
rename_existing = BASE_RESUME
gcode = 
	G91
	G1 E{s} F2100
	G90
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
	BASE_RESUME

[gcode_macro CANCEL_PRINT]
rename_existing = BASE_CANCEL_PRINT
gcode = 
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	SDCARD_RESET_FILE
	BASE_CANCEL_PRINT
	
	G91
	G1 Z10 F8000
	G90
	G1 X0 Y222 E-3 F8000
	DISABLE_MOTORS
	M106 S0
	M117 Print Canceled

[exclude_object]

[gcode_macro M486]
gcode = 
	
	
	
	
	
	
	
	
	
	
	
	{% if 'exclude_object' not in printer %}
	{action_raise_error("[exclude_object] is not enabled")}
	{% endif %}
	
	{% if 'T' in params %}
	EXCLUDE_OBJECT RESET=1
	
	{% for i in range(params.T | int) %}
	EXCLUDE_OBJECT_DEFINE NAME={i}
	{% endfor %}
	{% endif %}
	
	{% if 'C' in params %}
	EXCLUDE_OBJECT CURRENT=1
	{% endif %}
	
	{% if 'P' in params %}
	EXCLUDE_OBJECT NAME={params.P}
	{% endif %}
	
	{% if 'S' in params %}
	{% if params.S == '-1' %}
	{% if printer.exclude_object.current_object %}
	EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
	{% endif %}
	{% else %}
	EXCLUDE_OBJECT_START NAME={params.S}
	{% endif %}
	{% endif %}
	
	{% if 'U' in params %}
	EXCLUDE_OBJECT RESET=1 NAME={params.U}
	{% endif %}

[gcode_macro GET_TIMELAPSE_SETUP]
description = Print the Timelapse setup
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% set output_txt = ["Timelapse Setup:"] %}
	{% set _dummy = output_txt.append("enable: %s" % tl.enable) %}
	{% set _dummy = output_txt.append("park: %s" % tl.park.enable) %}
	{% if tl.park.enable %}
	{% set _dummy = output_txt.append("park position: %s time: %s s" % (tl.park.pos, tl.park.time)) %}
	{% set _dummy = output_txt.append("park cord x:%s y:%s dz:%s" % (tl.park.coord.x, tl.park.coord.y, tl.park.coord.dz)) %}
	{% set _dummy = output_txt.append("travel speed: %s mm/s" % tl.speed.travel) %}
	{% endif %}
	{% set _dummy = output_txt.append("fw_retract: %s" % tl.extruder.fw_retract) %}
	{% if not tl.extruder.fw_retract %}
	{% set _dummy = output_txt.append("retract: %s mm speed: %s mm/s" % (tl.extruder.retract, tl.speed.retract)) %}
	{% set _dummy = output_txt.append("extrude: %s mm speed: %s mm/s" % (tl.extruder.extrude, tl.speed.extrude)) %}
	{% endif %}
	{% set _dummy = output_txt.append("verbose: %s" % tl.verbose) %}
	{action_respond_info(output_txt|join("\n"))}

[gcode_macro _SET_TIMELAPSE_SETUP]
description = Set user parameters for timelapse
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	
	{% set min = printer.toolhead.axis_minimum %}
	{% set max = printer.toolhead.axis_maximum %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	{% set park = {'min'   : {'x': (min.x / 1.42)|round(3) if round_bed else min.x|round(3),
	'y': (min.y / 1.42)|round(3) if round_bed else min.y|round(3)},
	'max'   : {'x': (max.x / 1.42)|round(3) if round_bed else max.x|round(3),
	'y': (max.y / 1.42)|round(3) if round_bed else max.y|round(3)},
	'center': {'x': (max.x-(max.x-min.x)/2)|round(3),
	'y': (max.y-(max.y-min.y)/2)|round(3)}} %}
	
	{% if params.ENABLE %}
	{% if params.ENABLE|lower is in ['true', 'false'] %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=enable VALUE={True if params.ENABLE|lower == 'true' else False}
	{% else %}
	{action_raise_error("ENABLE=%s not supported. Allowed values are [True, False]" % params.ENABLE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.VERBOSE %}
	{% if params.VERBOSE|lower is in ['true', 'false'] %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=verbose VALUE={True if params.VERBOSE|lower == 'true' else False}
	{% else %}
	{action_raise_error("VERBOSE=%s not supported. Allowed values are [True, False]" % params.VERBOSE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_X %}
	{% if params.CUSTOM_POS_X|float >= min.x and params.CUSTOM_POS_X|float <= max.x %}
	{% set _dummy = tl.park.custom.update({'x':params.CUSTOM_POS_X|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_X=%s must be within [%s - %s]" % (params.CUSTOM_POS_X, min.x, max.x))}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_Y %}
	{% if params.CUSTOM_POS_Y|float >= min.y and params.CUSTOM_POS_Y|float <= max.y %}
	{% set _dummy = tl.park.custom.update({'y':params.CUSTOM_POS_Y|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_Y=%s must be within [%s - %s]" % (params.CUSTOM_POS_Y, min.y, max.y))}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_DZ %}
	{% if params.CUSTOM_POS_DZ|float >= min.z and params.CUSTOM_POS_DZ|float <= max.z %}
	{% set _dummy = tl.park.custom.update({'dz':params.CUSTOM_POS_DZ|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_DZ=%s must be within [%s - %s]" % (params.CUSTOM_POS_DZ, min.z, max.z))}
	{% endif %}
	{% endif %}
	{% if params.PARK_ENABLE %}
	{% if params.PARK_ENABLE|lower is in ['true', 'false'] %}
	{% set _dummy = tl.park.update({'enable':True if params.PARK_ENABLE|lower == 'true' else False}) %}
	{% else %}
	{action_raise_error("PARK_ENABLE=%s not supported. Allowed values are [True, False]" % params.PARK_ENABLE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.PARK_POS %}
	{% if params.PARK_POS|lower is in ['center','front_left','front_right','back_left','back_right','custom','x_only','y_only'] %}
	{% set dic = {'center'      : {'x': park.center.x   , 'y': park.center.y   , 'dz': 1                },
	'front_left'  : {'x': park.min.x      , 'y': park.min.y      , 'dz': 0                },
	'front_right' : {'x': park.max.x      , 'y': park.min.y      , 'dz': 0                },
	'back_left'   : {'x': park.min.x      , 'y': park.max.y      , 'dz': 0                },
	'back_right'  : {'x': park.max.x      , 'y': park.max.y      , 'dz': 0                },
	'custom'      : {'x': tl.park.custom.x, 'y': tl.park.custom.y, 'dz': tl.park.custom.dz},
	'x_only'      : {'x': tl.park.custom.x, 'y': 'none'          , 'dz': tl.park.custom.dz},
	'y_only'      : {'x': 'none'          , 'y': tl.park.custom.y, 'dz': tl.park.custom.dz}} %}
	{% set _dummy = tl.park.update({'pos':params.PARK_POS|lower}) %}
	{% set _dummy = tl.park.update({'coord':dic[tl.park.pos]}) %}
	{% else %}
	{action_raise_error("PARK_POS=%s not supported. Allowed values are [CENTER, FRONT_LEFT, FRONT_RIGHT, BACK_LEFT, BACK_RIGHT, CUSTOM, X_ONLY, Y_ONLY]"
	% params.PARK_POS|upper)}
	{% endif %}
	{% endif %}
	{% if params.PARK_TIME %}
	{% if params.PARK_TIME|float >= 0.0 %}
	{% set _dummy = tl.park.update({'time':params.PARK_TIME|float|round(3)}) %}
	{% else %}
	{action_raise_error("PARK_TIME=%s must be a positive number" % params.PARK_TIME)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=park VALUE="{tl.park}"
	{% if params.TRAVEL_SPEED %}
	{% if params.TRAVEL_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'travel':params.TRAVEL_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("TRAVEL_SPEED=%s must be larger than 0" % params.TRAVEL_SPEED)}
	{% endif %}
	{% endif %}
	{% if params.RETRACT_SPEED %}
	{% if params.RETRACT_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'retract':params.RETRACT_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("RETRACT_SPEED=%s must be larger than 0" % params.RETRACT_SPEED)}
	{% endif %}
	{% endif %}
	{% if params.EXTRUDE_SPEED %}
	{% if params.EXTRUDE_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'extrude':params.EXTRUDE_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("EXTRUDE_SPEED=%s must be larger than 0" % params.EXTRUDE_SPEED)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=speed VALUE="{tl.speed}"
	{% if params.EXTRUDE_DISTANCE %}
	{% if params.EXTRUDE_DISTANCE|float >= 0.0 %}
	{% set _dummy = tl.extruder.update({'extrude':params.EXTRUDE_DISTANCE|float|round(3)}) %}
	{% else %}
	{action_raise_error("EXTRUDE_DISTANCE=%s must be specified as positiv number" % params.EXTRUDE_DISTANCE)}
	{% endif %}
	{% endif %}
	{% if params.RETRACT_DISTANCE %}
	{% if params.RETRACT_DISTANCE|float >= 0.0 %}
	{% set _dummy = tl.extruder.update({'retract':params.RETRACT_DISTANCE|float|round(3)}) %}
	{% else %}
	{action_raise_error("RETRACT_DISTANCE=%s must be specified as positiv number" % params.RETRACT_DISTANCE)}
	{% endif %}
	{% endif %}
	{% if params.FW_RETRACT %}
	{% if params.FW_RETRACT|lower is in ['true', 'false'] %}
	{% if 'firmware_retraction' in printer.configfile.settings %}
	{% set _dummy = tl.extruder.update({'fw_retract': True if params.FW_RETRACT|lower == 'true' else False}) %}
	{% else %}
	{% set _dummy = tl.extruder.update({'fw_retract':False}) %}
	{% if params.FW_RETRACT|capitalize == 'True' %}
	{action_raise_error("[firmware_retraction] not defined in printer.cfg. Can not enable fw_retract")}
	{% endif %}
	{% endif %}
	{% else %}
	{action_raise_error("FW_RETRACT=%s not supported. Allowed values are [True, False]" % params.FW_RETRACT|capitalize)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=extruder VALUE="{tl.extruder}"
	{% if printer.configfile.settings['gcode_macro pause'] is defined %}
	{% set _dummy = tl.macro.update({'pause': printer.configfile.settings['gcode_macro pause'].rename_existing}) %}
	{% endif %}
	{% if printer.configfile.settings['gcode_macro resume'] is defined %}
	{% set _dummy = tl.macro.update({'resume': printer.configfile.settings['gcode_macro resume'].rename_existing}) %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=macro VALUE="{tl.macro}"

[gcode_macro TIMELAPSE_TAKE_FRAME]
description = Take Timelapse shoot
variable_enable = False
variable_takingframe = False
variable_park = {'enable': False,
	'pos'   : 'center',
	'time'  : 0.1,
	'custom': {'x': 0, 'y': 0, 'dz': 0},
	'coord' : {'x': 0, 'y': 0, 'dz': 0}}
variable_extruder = {'fw_retract': False,
	'retract': 1.0,
	'extrude': 1.0}
variable_speed = {'travel': 100,
	'retract': 15,
	'extrude': 15}
variable_verbose = True
variable_restore = {'absolute': {'coordinates': True, 'extrude': True}, 'speed': 1500, 'e':0, 'factor': {'speed': 1.0, 'extrude': 1.0}}
variable_macro = {'pause': 'PAUSE', 'resume': 'RESUME'}
variable_is_paused = False
gcode = 
	{% set hyperlapse = True if params.HYPERLAPSE and params.HYPERLAPSE|lower =='true' else False %}
	{% if enable %}
	{% if (hyperlapse and printer['gcode_macro HYPERLAPSE'].run) or
	(not hyperlapse and not printer['gcode_macro HYPERLAPSE'].run) %}
	{% if park.enable %}
	{% set pos = {'x': 'X' + park.coord.x|string if park.pos != 'y_only' else '',
	'y': 'Y' + park.coord.y|string if park.pos != 'x_only' else '',
	'z': 'Z'+ [printer.gcode_move.gcode_position.z + park.coord.dz, printer.toolhead.axis_maximum.z]|min|string} %}
	{% set restore = {'absolute': {'coordinates': printer.gcode_move.absolute_coordinates,
	'extrude'    : printer.gcode_move.absolute_extrude},
	'speed'   : printer.gcode_move.speed,
	'e'       : printer.gcode_move.gcode_position.e,
	'factor'  : {'speed'  : printer.gcode_move.speed_factor,
	'extrude': printer.gcode_move.extrude_factor}} %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=restore VALUE="{restore}"
	{% if not printer[printer.toolhead.extruder].can_extrude %}
	{% if verbose %}{action_respond_info("Timelapse: Warning, minimum extruder temperature not reached!")}{% endif %}
	{% else %}
	{% if extruder.fw_retract %}
	G10
	{% else %}
	M83
	G0 E-{extruder.retract} F{speed.retract * 60}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=is_paused VALUE=True
	{macro.pause}
	SET_GCODE_OFFSET X=0 Y=0
	G90
	{% if "xyz" not in printer.toolhead.homed_axes %}
	{% if verbose %}{action_respond_info("Timelapse: Warning, axis not homed yet!")}{% endif %}
	{% else %}
	G0 {pos.x} {pos.y} {pos.z} F{speed.travel * 60}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=takingframe VALUE=True
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_TAKE_FRAME DURATION=0.5
	M400
	{% endif %}
	_TIMELAPSE_NEW_FRAME HYPERLAPSE={hyperlapse}
	{% endif %}
	{% else %}
	{% if verbose %}{action_respond_info("Timelapse: disabled, take frame ignored")}{% endif %}
	{% endif %}

[gcode_macro _TIMELAPSE_NEW_FRAME]
description = action call for timelapse shoot. must be a seperate macro
gcode = 
	{action_call_remote_method("timelapse_newframe",
	macropark=printer['gcode_macro TIMELAPSE_TAKE_FRAME'].park,
	hyperlapse=params.HYPERLAPSE)}

[delayed_gcode _WAIT_TIMELAPSE_TAKE_FRAME]
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% set factor = {'speed': printer.gcode_move.speed_factor, 'extrude': printer.gcode_move.extrude_factor} %}
	{% if tl.takingframe %}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_TAKE_FRAME DURATION=0.5
	{% else %}
	{tl.macro.resume} VELOCITY={tl.speed.travel}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=is_paused VALUE=False
	{% if not printer[printer.toolhead.extruder].can_extrude %}
	{action_respond_info("Timelapse: Warning minimum extruder temperature not reached!")}
	{% else %}
	{% if tl.extruder.fw_retract %}
	G11
	{% else %}
	G0 E{tl.extruder.extrude} F{tl.speed.extrude * 60}
	G0 F{tl.restore.speed}
	{% if tl.restore.absolute.extrude %}
	M82
	G92 E{tl.restore.e}
	{% endif %}
	{% endif %}
	{% endif %}
	{% if tl.restore.factor.speed   != factor.speed   %} M220 S{(factor.speed*100)|round(0)}   {% endif %}
	{% if tl.restore.factor.extrude != factor.extrude %} M221 S{(factor.extrude*100)|round(0)} {% endif %}
	{% if not tl.restore.absolute.coordinates %} G91 {% endif %}
	{% endif %}

[gcode_macro HYPERLAPSE]
description = Start/Stop a hyperlapse recording
variable_cycle = 0
variable_run = False
gcode = 
	{% set cycle = params.CYCLE|default(30)|int %}
	{% if params.ACTION and params.ACTION|lower == 'start' %}
	{action_respond_info("Hyperlapse: frames started (Cycle %d sec)" % cycle)}
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=run VALUE=True
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=cycle VALUE={cycle}
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION={cycle}
	TIMELAPSE_TAKE_FRAME HYPERLAPSE=True
	{% elif params.ACTION and params.ACTION|lower == 'stop' %}
	{% if run %}{action_respond_info("Hyperlapse: frames stopped")}{% endif %}
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=run VALUE=False
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION=0
	{% else %}
	{action_raise_error("Hyperlapse: No valid input parameter
	Use:
	- HYPERLAPSE ACTION=START [CYCLE=time]
	- HYPERLAPSE ACTION=STOP")}
	{% endif %}

[delayed_gcode _HYPERLAPSE_LOOP]
gcode = 
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION={printer["gcode_macro HYPERLAPSE"].cycle}
	TIMELAPSE_TAKE_FRAME HYPERLAPSE=True

[gcode_macro TIMELAPSE_RENDER]
description = Render Timelapse video and wait for the result
variable_render = False
variable_run_identifier = 0
gcode = 
	{action_respond_info("Timelapse: Rendering started")}
	{action_call_remote_method("timelapse_render", byrendermacro="True")}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_RENDER VARIABLE=render VALUE=True
	{printer.configfile.settings['gcode_macro pause'].rename_existing}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_RENDER DURATION=0.5

[delayed_gcode _WAIT_TIMELAPSE_RENDER]
gcode = 
	{% set ri = printer['gcode_macro TIMELAPSE_RENDER'].run_identifier % 4 %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_RENDER VARIABLE=run_identifier VALUE={ri + 1}
	{% if printer['gcode_macro TIMELAPSE_RENDER'].render %}
	M117 Rendering {['-','\\','|','/'][ri]}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_RENDER DURATION=0.5
	{% else %}
	{action_respond_info("Timelapse: Rendering finished")}
	M117
	{printer.configfile.settings['gcode_macro resume'].rename_existing}
	{% endif %}

[gcode_macro TEST_STREAM_DELAY]
description = Helper macro to find stream and park delay
gcode = 
	{% set min = printer.toolhead.axis_minimum %}
	{% set max = printer.toolhead.axis_maximum %}
	{% set act = printer.toolhead.position %}
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% if act.z > 5.0 %}
	G0 X{min.x + 5.0} F{tl.speed.travel|int * 60}
	G0 X{(max.x-min.x)/2}
	G4 P{tl.park.time|float * 1000}
	_TIMELAPSE_NEW_FRAME HYPERLAPSE=FALSE
	G0 X{max.x - 5.0}
	{% else %}
	{action_raise_error("Toolhead z %.3f to low. Please place head above z = 5.0" % act.z)}
	{% endif %}

[force_move]
enable_force_move = True

[mcu head0]
canbus_uuid = 20195bac64c4

[temperature_sensor CANBOARD]
sensor_type = temperature_mcu
sensor_mcu = head0

[idle_timeout]
timeout = 100000

[mcu]
serial = /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00

[adc_scaled vref_scaled]
vref_pin = PB5
vssa_pin = PB4

[temperature_sensor pi_cpu]
sensor_type = temperature_host
gcode_id = P

[printer]
kinematics = corexy
max_velocity = 600
max_accel = 15000
max_accel_to_decel = 10000
square_corner_velocity = 10
max_z_velocity = 50
max_z_accel = 180

[stepper_x]
step_pin = PC25
dir_pin = !PB29
enable_pin = !PC28
rotation_distance = 40
microsteps = 32
endstop_pin = ^!head0:PB12
position_endstop = 303
position_max = 303
position_min = 0
homing_speed = 100

[tmc2209 stepper_x]
uart_pin = PA1
tx_pin = PA0
select_pins = PD0
uart_address = 1
run_current = 1
sense_resistor = 0.056

[stepper_y]
step_pin = PC24
dir_pin = !PB28
enable_pin = !PC28
rotation_distance = 40
microsteps = 32
endstop_pin = ^PC4
position_endstop = 308
position_max = 308
position_min = -3
homing_speed = 100
homing_retract_dist = 30

[tmc2209 stepper_y]
uart_pin = PA1
tx_pin = PA0
select_pins = PD0
uart_address = 2
run_current = 1
sense_resistor = 0.056

[stepper_z3]
step_pin = PC26
dir_pin = PB3
enable_pin = !PC28
rotation_distance = 8
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PA1
tx_pin = PA0
select_pins = PD0
uart_address = 0
run_current = 1.1
sense_resistor = 0.056
driver_tbl = 2
driver_hend = 3
driver_hstrt = 4
driver_toff = 4

[stepper_z]
step_pin = PC19
dir_pin = !PD20
enable_pin = !PC28
rotation_distance = 8
microsteps = 32
endstop_pin = probe:z_virtual_endstop
position_max = 390
position_min = -15
homing_speed = 20

[tmc2209 stepper_z]
uart_pin = PA1
tx_pin = PA0
uart_address = 3
select_pins = PD0
run_current = 1.1
sense_resistor = 0.056
driver_tbl = 2
driver_hend = 3
driver_hstrt = 4
driver_toff = 4

[stepper_z1]
step_pin = PC16
dir_pin = PD21
enable_pin = !PC28
rotation_distance = 8
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PA1
tx_pin = PA0
uart_address = 0
select_pins = !PD0
run_current = 1.1
sense_resistor = 0.056
driver_tbl = 2
driver_hend = 3
driver_hstrt = 4
driver_toff = 4

[stepper_z2]
step_pin = PC30
dir_pin = !PB0
enable_pin = !PC28
rotation_distance = 8
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PA1
tx_pin = PA0
uart_address = 1
select_pins = !PD0
run_current = 1.1
sense_resistor = 0.056
driver_tbl = 2
driver_hend = 3
driver_hstrt = 4
driver_toff = 4

[extruder]
step_pin = head0:PB3
dir_pin = head0:PB4
enable_pin = !head0:PB5
heater_pin = head0:PA6
microsteps = 16
full_steps_per_rotation = 200
rotation_distance = 22.67895
gear_ratio = 50:8
nozzle_diameter = 0.500
filament_diameter = 1.750
sensor_type = ATC Semitec 104GT-2
sensor_pin = head0:PA0
pullup_resistor = 2200
min_extrude_temp = 170
max_extrude_cross_section = 5
min_temp = -100
max_temp = 325
control = pid
pid_kp = 24.502
pid_ki = 1.027
pid_kd = 146.095

[tmc2209 extruder]
uart_pin = head0:PA9
interpolate = True
run_current = .3
sense_resistor = 0.110
driver_tbl = 2
driver_hend = 3
driver_hstrt = 5
driver_toff = 6

[heater_bed]
heater_pin = PB17
sensor_type = EPCOS 100K B57560G104F
sensor_pin = vref_scaled:PC2
pullup_resistor = 2200
min_temp = -100
max_temp = 130
max_power = 0.8
control = pid
pid_kp = 20.846
pid_ki = 1.241
pid_kd = 87.555

[fan]
pin = PC10
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend]
pin = head0:PA7
heater = extruder
heater_temp = 45
fan_speed = 1

[controller_fan drivers]
pin = PA11
heater = extruder,heater_bed
fan_speed = 1

[fan_generic chamber]
pin = PB11

[bltouch]
sensor_pin = PC31
control_pin = PB1
stow_on_each_sample = false
probe_with_touch_mode = True
x_offset = 21.765
y_offset = 0
speed = 7
lift_speed = 20
samples = 2
samples_result = average
sample_retract_dist = 5.0
samples_tolerance = 0.01
samples_tolerance_retries = 3
z_offset = 1.265

[safe_z_home]
home_xy_position = 150,150
speed = 350
z_hop = 6
z_hop_speed = 15

[quad_gantry_level]
gantry_corners = 
	-68,-16
	368,355
points = 
	50,50
	50,250
	250,250
	250,50
speed = 350
horizontal_move_z = 10
retries = 8
retry_tolerance = 0.015
max_adjust = 16

[bed_mesh]
mesh_min = 25,25
mesh_max = 275,275
probe_count = 7,7
algorithm = bicubic
speed = 350

[output_pin led]
pin = PB13
shutdown_value = 0
value = 1

[filament_switch_sensor fsensor]
pause_on_runout = True
runout_gcode = 
	M118 Filament Runout Detected
	M600
insert_gcode = 
	M118 Filament Load Detected
	LOAD_FILAMENT
event_delay = 3.0
pause_delay = 0.5
switch_pin = PB30

[gcode_macro LOAD_FILAMENT]
gcode = 
	M117 Loading Filament...
	G92 E0.0
	G91
	G1 E40 F400
	G1 E30 F400
	G1 E60 F200
	G90
	G92 E0.0
	M400
	M117 Load Complete
	UPDATE_DELAYED_GCODE ID=clear_display DURATION=5

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	G90
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	G28
	
	{% if printer.configfile.settings.quad_gantry_level %}
	{% if printer.quad_gantry_level.applied == False %}
	QUAD_GANTRY_LEVEL
	G28 Z
	{% endif %}
	{% endif %}
	G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F{30 * 60}
	G4 P1000
	GET_POSITION
	
	
	G0 X{x_min} Y{y_min} Z{bound + 10} F{speed * 60}
	
	{% for i in range(iterations) %}
	
	G0 X{x_min} Y{y_min} F{speed * 60}
	G0 X{x_max} Y{y_max} F{speed * 60}
	G0 X{x_min} Y{y_min} F{speed * 60}
	G0 X{x_max} Y{y_min} F{speed * 60}
	G0 X{x_min} Y{y_max} F{speed * 60}
	G0 X{x_max} Y{y_min} F{speed * 60}
	
	
	G0 X{x_min} Y{y_min} F{speed * 60}
	G0 X{x_min} Y{y_max} F{speed * 60}
	G0 X{x_max} Y{y_max} F{speed * 60}
	G0 X{x_max} Y{y_min} F{speed * 60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
	
	
	G28 X Y
	
	G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F{30 * 60}
	G4 P1000
	GET_POSITION
	
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 83.8
shaper_type_y = mzv
shaper_freq_y = 75.0

[bed_mesh default]
version = 1
points = 
	1.182277, 1.034152, 1.155402, 1.162277, 1.141027, 1.093527
	1.229777, 1.204777, 1.190402, 1.179777, 1.174777, 1.147902
	1.217277, 1.220402, 1.201027, 1.206027, 1.180402, 1.282277
	1.222277, 1.189777, 1.182277, 1.167277, 1.164152, 1.143527
	1.146027, 1.152277, 1.134777, 1.151027, 1.206652, 1.117277
	1.100402, 1.102277, 1.112902, 1.132277, 1.133527, 1.107277
x_count = 6
y_count = 6
mesh_x_pps = 2
mesh_y_pps = 2
algo = lagrange
tension = 0.2
min_x = 40.715
max_x = 259.265
min_y = 38.99
max_y = 261.19
=======================
Loaded MCU 'head0' 107 commands (v0.11.0-109-g738ddaf3 / gcc: (15:7-2018-q2-6) 7.3.1 20180622 (release) [ARM/embedded-7-branch revision 261907] binutils: (2.31.1-11+rpi1+11) 2.31.1)
MCU 'head0' config: ADC_MAX=4095 BUS_PINS_i2c1=PB6,PB7 BUS_PINS_i2c1a=PB8,PB9 BUS_PINS_i2c2=PB10,PB11 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi3=PB4,PB5,PB3 CANBUS_FREQUENCY=500000 CLOCK_FREQ=72000000 MCU=stm32f103xe PWM_MAX=255 RECEIVE_WINDOW=192 RESERVE_PINS_CAN=PB8,PB9 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
Configured MCU 'head0' (1024 moves)
Loaded MCU 'mcu' 92 commands (v0.10.0-214-g98af5dff / gcc: (15:7-2018-q2-6) 7.3.1 20180622 (release) [ARM/embedded-7-branch revision 261907] binutils: (2.31.1-11+rpi1+11) 2.31.1)
MCU 'mcu' config: ADC_MAX=4095 CLOCK_FREQ=180000000 MCU=samd51p20a RESERVE_PINS_USB=PA24,PA25 RESERVE_PINS_crystal=PB22,PB23 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
Configured MCU 'mcu' (1024 moves)
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/klipper_config/printer.cfg', '-l', '/home/pi/klipper_logs/klippy.log', '-a', '/tmp/klippy_uds']
Git version: 'v0.11.0-114-g0a645e49-dirty'
CPU: 4 core ARMv7 Processor rev 4 (v7l)
Python: '3.7.3 (default, Jan 22 2021, 20:04:44) \n[GCC 8.3.0]'
webhooks client 1964964016: {'program': 'Moonraker', 'version': 'v0.7.1-885-g4550664'}
=============== Log rollover at Mon Apr 24 22:48:28 2023 ===============
Stats 42.0: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000003 mcu_task_stddev=0.000004 bytes_write=3556 bytes_read=7459 bytes_retransmit=9 bytes_invalid=0 send_seq=297 receive_seq=297 retransmit_seq=2 srtt=0.001 rttvar=0.001 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998718 head0: mcu_awake=0.009 mcu_task_avg=0.000012 mcu_task_stddev=0.000021 bytes_write=1249 bytes_read=5231 bytes_retransmit=0 bytes_invalid=0 send_seq=142 receive_seq=142 retransmit_seq=0 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001177 adj=72009231  CANBOARD: temp=23.1 pi_cpu: temp=39.7 heater_bed: target=0 temp=19.0 pwm=0.000 sysload=2.68 cputime=5.486 memavail=669640 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 43.0: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000003 mcu_task_stddev=0.000004 bytes_write=3562 bytes_read=7600 bytes_retransmit=9 bytes_invalid=0 send_seq=298 receive_seq=298 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998648 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1255 bytes_read=5381 bytes_retransmit=0 bytes_invalid=0 send_seq=143 receive_seq=143 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001199 adj=72007724  CANBOARD: temp=23.1 pi_cpu: temp=39.2 heater_bed: target=0 temp=18.8 pwm=0.000 sysload=2.68 cputime=5.514 memavail=666888 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 44.0: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000003 mcu_task_stddev=0.000004 bytes_write=3574 bytes_read=7791 bytes_retransmit=9 bytes_invalid=0 send_seq=300 receive_seq=300 retransmit_seq=2 srtt=0.001 rttvar=0.001 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998431 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1261 bytes_read=5487 bytes_retransmit=0 bytes_invalid=0 send_seq=144 receive_seq=144 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001205 adj=72006392  CANBOARD: temp=23.2 pi_cpu: temp=39.7 heater_bed: target=0 temp=19.0 pwm=0.000 sysload=2.68 cputime=5.538 memavail=665572 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 45.0: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000003 mcu_task_stddev=0.000004 bytes_write=3580 bytes_read=7936 bytes_retransmit=9 bytes_invalid=0 send_seq=301 receive_seq=301 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998393 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1267 bytes_read=5593 bytes_retransmit=0 bytes_invalid=0 send_seq=145 receive_seq=145 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001302 adj=72006449  CANBOARD: temp=23.2 pi_cpu: temp=39.7 heater_bed: target=0 temp=19.1 pwm=0.000 sysload=2.68 cputime=5.562 memavail=652564 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 46.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000002 bytes_write=3586 bytes_read=8095 bytes_retransmit=9 bytes_invalid=0 send_seq=302 receive_seq=302 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998395 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1273 bytes_read=5729 bytes_retransmit=0 bytes_invalid=0 send_seq=146 receive_seq=146 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001342 adj=72005714  CANBOARD: temp=23.2 pi_cpu: temp=39.7 heater_bed: target=0 temp=18.8 pwm=0.000 sysload=2.87 cputime=5.598 memavail=650536 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 47.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000002 bytes_write=3592 bytes_read=8283 bytes_retransmit=9 bytes_invalid=0 send_seq=303 receive_seq=303 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998315 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1279 bytes_read=5835 bytes_retransmit=0 bytes_invalid=0 send_seq=147 receive_seq=147 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001348 adj=72004923  CANBOARD: temp=23.4 pi_cpu: temp=40.8 heater_bed: target=0 temp=19.1 pwm=0.000 sysload=2.87 cputime=5.618 memavail=644312 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 48.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000002 bytes_write=3598 bytes_read=8428 bytes_retransmit=9 bytes_invalid=0 send_seq=304 receive_seq=304 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998272 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1285 bytes_read=5955 bytes_retransmit=0 bytes_invalid=0 send_seq=148 receive_seq=148 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001381 adj=72004365  CANBOARD: temp=23.4 pi_cpu: temp=40.8 heater_bed: target=0 temp=18.9 pwm=0.000 sysload=2.87 cputime=5.639 memavail=650856 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 49.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000002 bytes_write=3604 bytes_read=8573 bytes_retransmit=9 bytes_invalid=0 send_seq=305 receive_seq=305 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998257 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1291 bytes_read=6091 bytes_retransmit=0 bytes_invalid=0 send_seq=149 receive_seq=149 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001378 adj=72004004  CANBOARD: temp=23.4 pi_cpu: temp=39.7 heater_bed: target=0 temp=19.1 pwm=0.000 sysload=2.87 cputime=5.661 memavail=651424 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 50.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000002 bytes_write=3610 bytes_read=8761 bytes_retransmit=9 bytes_invalid=0 send_seq=306 receive_seq=306 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998228 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1297 bytes_read=6197 bytes_retransmit=0 bytes_invalid=0 send_seq=150 receive_seq=150 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001416 adj=72003536  CANBOARD: temp=23.4 pi_cpu: temp=39.7 heater_bed: target=0 temp=18.9 pwm=0.000 sysload=2.87 cputime=5.684 memavail=651416 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 51.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000003 bytes_write=3616 bytes_read=8920 bytes_retransmit=9 bytes_invalid=0 send_seq=307 receive_seq=307 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998221 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1303 bytes_read=6303 bytes_retransmit=0 bytes_invalid=0 send_seq=151 receive_seq=151 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001427 adj=72003410  CANBOARD: temp=23.4 pi_cpu: temp=39.2 heater_bed: target=0 temp=19.2 pwm=0.000 sysload=2.80 cputime=5.703 memavail=651428 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 52.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000003 bytes_write=3622 bytes_read=9065 bytes_retransmit=9 bytes_invalid=0 send_seq=308 receive_seq=308 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998214 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1309 bytes_read=6439 bytes_retransmit=0 bytes_invalid=0 send_seq=152 receive_seq=152 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001449 adj=72003158  CANBOARD: temp=23.5 pi_cpu: temp=39.2 heater_bed: target=0 temp=19.2 pwm=0.000 sysload=2.80 cputime=5.724 memavail=651524 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 53.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000003 bytes_write=3628 bytes_read=9253 bytes_retransmit=9 bytes_invalid=0 send_seq=309 receive_seq=309 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998215 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1315 bytes_read=6559 bytes_retransmit=0 bytes_invalid=0 send_seq=153 receive_seq=153 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001449 adj=72003032  CANBOARD: temp=23.6 pi_cpu: temp=38.6 heater_bed: target=0 temp=19.0 pwm=0.000 sysload=2.80 cputime=5.745 memavail=651428 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 54.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000003 bytes_write=3634 bytes_read=9398 bytes_retransmit=9 bytes_invalid=0 send_seq=310 receive_seq=310 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998203 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1321 bytes_read=6665 bytes_retransmit=0 bytes_invalid=0 send_seq=154 receive_seq=154 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001458 adj=72002817  CANBOARD: temp=23.6 pi_cpu: temp=38.6 heater_bed: target=0 temp=19.0 pwm=0.000 sysload=2.80 cputime=5.764 memavail=651436 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 55.0: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000003 bytes_write=3640 bytes_read=9543 bytes_retransmit=9 bytes_invalid=0 send_seq=311 receive_seq=311 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998187 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1327 bytes_read=6801 bytes_retransmit=0 bytes_invalid=0 send_seq=155 receive_seq=155 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001458 adj=72002731  CANBOARD: temp=23.6 pi_cpu: temp=38.6 heater_bed: target=0 temp=19.4 pwm=0.000 sysload=2.80 cputime=5.785 memavail=650924 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Timeout with MCU 'head0' (eventtime=1079.686376)
Transition to shutdown state: Lost communication with MCU 'head0'
Dumping gcode input 0 blocks
Dumping 20 requests for client 1964964016
Received 495.764556: b'{"id": 1748377904, "method": "objects/query", "params": {"objects": {"webhooks": null, "print_stats": null, "virtual_sdcard": null, "display_status": null, "heaters": null, "toolhead": null, "extruder": null, "gcode_move": null, "heater_bed": null, "temperature_sensor CANBOARD": null, "temperature_sensor pi_cpu": null}}}'
Received 525.799013: b'{"id": 1748349552, "method": "objects/query", "params": {"objects": {"webhooks": null, "print_stats": null, "virtual_sdcard": null, "display_status": null, "heaters": null, "toolhead": null, "extruder": null, "gcode_move": null, "heater_bed": null, "temperature_sensor CANBOARD": null, "temperature_sensor pi_cpu": null}}}'
Received 555.832235: b'{"id": 1748442032, "method": "objects/query", "params": {"objects": {"webhooks": null, "print_stats": null, "virtual_sdcard": null, "display_status": null, "heaters": null, "toolhead": null, "extruder": null, "gcode_move": null, "heater_bed": null, "temperature_sensor CANBOARD": null, "temperature_sensor pi_cpu": null}}}'
Received 585.865752: b'{"id": 1978004880, "method": "objects/query", "params": {"objects": {"webhooks": null, "print_stats": null, "virtual_sdcard": null, "display_status": null, "heaters": null, "toolhead": null, "extruder": null, "gcode_move": null, "heater_bed": null, "temperature_sensor CANBOARD": null, "temperature_sensor pi_cpu": null}}}'
Received 615.899936: b'{"id": 1978004304, "method": "objects/query", "params": {"objects": {"webhooks": null, "print_stats": null, "virtual_sdcard": null, "display_status": null, "heaters": null, "toolhead": null, "extruder": null, "gcode_move": null, "heater_bed": null, "temperature_sensor CANBOARD": null, "temperature_sensor pi_cpu": null}}}'
Received 645.933120: b'{"id": 1978007344, "method": "objects/query", "params": {"objects": {"webhooks": null, "print_stats": null, "virtual_sdcard": null, "display_status": null, "heaters": null, "toolhead": null, "extruder": null, "gcode_move": null, "heater_bed": null, "temperature_sensor CANBOARD": null, "temperature_sensor pi_cpu": null}}}'
Received 675.969374: b'{"id": 1978004368, "method": "objects/query", "params": {"objects": {"webhooks": null, "print_stats": null, "virtual_sdcard": null, "display_status": null, "heaters": null, "toolhead": null, "extruder": null, "gcode_move": null, "heater_bed": null, "temperature_sensor CANBOARD": null, "temperature_sensor pi_cpu": null}}}'
Received 706.008329: b'{"id": 1978004208, "method": "objects/query", "params": {"objects": {"webhooks": null, "print_stats": null, "virtual_sdcard": null, "display_status": null, "heaters": null, "toolhead": null, "extruder": null, "gcode_move": null, "heater_bed": null, "temperature_sensor CANBOARD": null, "temperature_sensor pi_cpu": null}}}'
Received 736.041808: b'{"id": 1978006768, "method": "objects/query", "params": {"objects": {"webhooks": null, "print_stats": null, "virtual_sdcard": null, "display_status": null, "heaters": null, "toolhead": null, "extruder": null, "gcode_move": null, "heater_bed": null, "temperature_sensor CANBOARD": null, "temperature_sensor pi_cpu": null}}}'
Received 766.076481: b'{"id": 1978003600, "method": "objects/query", "params": {"objects": {"webhooks": null, "print_stats": null, "virtual_sdcard": null, "display_status": null, "heaters": null, "toolhead": null, "extruder": null, "gcode_move": null, "heater_bed": null, "temperature_sensor CANBOARD": null, "temperature_sensor pi_cpu": null}}}'
Received 796.110110: b'{"id": 1978007024, "method": "objects/query", "params": {"objects": {"webhooks": null, "print_stats": null, "virtual_sdcard": null, "display_status": null, "heaters": null, "toolhead": null, "extruder": null, "gcode_move": null, "heater_bed": null, "temperature_sensor CANBOARD": null, "temperature_sensor pi_cpu": null}}}'
Received 826.144521: b'{"id": 1978005104, "method": "objects/query", "params": {"objects": {"webhooks": null, "print_stats": null, "virtual_sdcard": null, "display_status": null, "heaters": null, "toolhead": null, "extruder": null, "gcode_move": null, "heater_bed": null, "temperature_sensor CANBOARD": null, "temperature_sensor pi_cpu": null}}}'
Received 856.177359: b'{"id": 1978006096, "method": "objects/query", "params": {"objects": {"webhooks": null, "print_stats": null, "virtual_sdcard": null, "display_status": null, "heaters": null, "toolhead": null, "extruder": null, "gcode_move": null, "heater_bed": null, "temperature_sensor CANBOARD": null, "temperature_sensor pi_cpu": null}}}'
Received 886.210408: b'{"id": 1978003760, "method": "objects/query", "params": {"objects": {"webhooks": null, "print_stats": null, "virtual_sdcard": null, "display_status": null, "heaters": null, "toolhead": null, "extruder": null, "gcode_move": null, "heater_bed": null, "temperature_sensor CANBOARD": null, "temperature_sensor pi_cpu": null}}}'
Received 916.243604: b'{"id": 1978004464, "method": "objects/query", "params": {"objects": {"webhooks": null, "print_stats": null, "virtual_sdcard": null, "display_status": null, "heaters": null, "toolhead": null, "extruder": null, "gcode_move": null, "heater_bed": null, "temperature_sensor CANBOARD": null, "temperature_sensor pi_cpu": null}}}'
Received 946.278253: b'{"id": 1978005840, "method": "objects/query", "params": {"objects": {"webhooks": null, "print_stats": null, "virtual_sdcard": null, "display_status": null, "heaters": null, "toolhead": null, "extruder": null, "gcode_move": null, "heater_bed": null, "temperature_sensor CANBOARD": null, "temperature_sensor pi_cpu": null}}}'
Received 976.310796: b'{"id": 1978003952, "method": "objects/query", "params": {"objects": {"webhooks": null, "print_stats": null, "virtual_sdcard": null, "display_status": null, "heaters": null, "toolhead": null, "extruder": null, "gcode_move": null, "heater_bed": null, "temperature_sensor CANBOARD": null, "temperature_sensor pi_cpu": null}}}'
Received 1006.342964: b'{"id": 1978003760, "method": "objects/query", "params": {"objects": {"webhooks": null, "print_stats": null, "virtual_sdcard": null, "display_status": null, "heaters": null, "toolhead": null, "extruder": null, "gcode_move": null, "heater_bed": null, "temperature_sensor CANBOARD": null, "temperature_sensor pi_cpu": null}}}'
Received 1036.376131: b'{"id": 1978004752, "method": "objects/query", "params": {"objects": {"webhooks": null, "print_stats": null, "virtual_sdcard": null, "display_status": null, "heaters": null, "toolhead": null, "extruder": null, "gcode_move": null, "heater_bed": null, "temperature_sensor CANBOARD": null, "temperature_sensor pi_cpu": null}}}'
Received 1066.408580: b'{"id": 1978007440, "method": "objects/query", "params": {"objects": {"webhooks": null, "print_stats": null, "virtual_sdcard": null, "display_status": null, "heaters": null, "toolhead": null, "extruder": null, "gcode_move": null, "heater_bed": null, "temperature_sensor CANBOARD": null, "temperature_sensor pi_cpu": null}}}'
gcode state: absolute_coord=True absolute_extrude=True base_position=[0.0, 0.0, 0.0, 0.0] last_position=[0.0, 0.0, 0.0, 0.0] homing_position=[0.0, 0.0, 0.0, 0.0] speed_factor=0.016666666666666666 extrude_factor=1.0 speed=25.0
Reactor garbage collection: (585.86649837, 0.0, 0.0)
MCU 'mcu' shutdown: Command request
clocksync state: mcu_freq=180000000 last_clock=195009389945 clock_est=(1050.232 189869711390 179998486.143) min_half_rtt=0.000136 min_rtt_time=976.389 time_avg=1050.232(843.395) clock_avg=189869711390.150(151809844919.461) pred_variance=3838017.564
Dumping serial stats: bytes_write=9886 bytes_read=175199 bytes_retransmit=9 bytes_invalid=0 send_seq=1352 receive_seq=1352 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0
Dumping send queue 100 messages
Sent 0 982.295532 982.295532 6: seq: 14, get_clock
Sent 1 983.280160 983.280160 6: seq: 15, get_clock
Sent 2 984.264829 984.264829 6: seq: 16, get_clock
Sent 3 985.249304 985.249304 6: seq: 17, get_clock
Sent 4 986.234235 986.234235 6: seq: 18, get_clock
Sent 5 987.219015 987.219015 6: seq: 19, get_clock
Sent 6 988.203770 988.203770 6: seq: 1a, get_clock
Sent 7 989.188529 989.188529 6: seq: 1b, get_clock
Sent 8 990.173048 990.173048 6: seq: 1c, get_clock
Sent 9 991.157401 991.157401 6: seq: 1d, get_clock
Sent 10 992.142135 992.142135 6: seq: 1e, get_clock
Sent 11 993.126368 993.126368 6: seq: 1f, get_clock
Sent 12 994.111106 994.111106 6: seq: 10, get_clock
Sent 13 995.096130 995.096130 6: seq: 11, get_clock
Sent 14 996.080561 996.080561 6: seq: 12, get_clock
Sent 15 997.064949 997.064949 6: seq: 13, get_clock
Sent 16 998.049459 998.049459 6: seq: 14, get_clock
Sent 17 999.033787 999.033787 6: seq: 15, get_clock
Sent 18 1000.018784 1000.018784 6: seq: 16, get_clock
Sent 19 1001.002984 1001.002984 6: seq: 17, get_clock
Sent 20 1001.987270 1001.987270 6: seq: 18, get_clock
Sent 21 1002.972136 1002.972136 6: seq: 19, get_clock
Sent 22 1003.956402 1003.956402 6: seq: 1a, get_clock
Sent 23 1004.940892 1004.940892 6: seq: 1b, get_clock
Sent 24 1005.925424 1005.925424 6: seq: 1c, get_clock
Sent 25 1006.909995 1006.909995 6: seq: 1d, get_clock
Sent 26 1007.894261 1007.894261 6: seq: 1e, get_clock
Sent 27 1008.878874 1008.878874 6: seq: 1f, get_clock
Sent 28 1009.863141 1009.863141 6: seq: 10, get_clock
Sent 29 1010.847340 1010.847340 6: seq: 11, get_clock
Sent 30 1011.831805 1011.831805 6: seq: 12, get_clock
Sent 31 1012.816368 1012.816368 6: seq: 13, get_clock
Sent 32 1013.800751 1013.800751 6: seq: 14, get_clock
Sent 33 1014.785020 1014.785020 6: seq: 15, get_clock
Sent 34 1015.769624 1015.769624 6: seq: 16, get_clock
Sent 35 1016.754520 1016.754520 6: seq: 17, get_clock
Sent 36 1017.739284 1017.739284 6: seq: 18, get_clock
Sent 37 1018.724050 1018.724050 6: seq: 19, get_clock
Sent 38 1019.709016 1019.709016 6: seq: 1a, get_clock
Sent 39 1020.693242 1020.693242 6: seq: 1b, get_clock
Sent 40 1021.678102 1021.678102 6: seq: 1c, get_clock
Sent 41 1022.662439 1022.662439 6: seq: 1d, get_clock
Sent 42 1023.646981 1023.646981 6: seq: 1e, get_clock
Sent 43 1024.631871 1024.631871 6: seq: 1f, get_clock
Sent 44 1025.615943 1025.615943 6: seq: 10, get_clock
Sent 45 1026.600143 1026.600143 6: seq: 11, get_clock
Sent 46 1027.585086 1027.585086 6: seq: 12, get_clock
Sent 47 1028.569938 1028.569938 6: seq: 13, get_clock
Sent 48 1029.554484 1029.554484 6: seq: 14, get_clock
Sent 49 1030.538968 1030.538968 6: seq: 15, get_clock
Sent 50 1031.523604 1031.523604 6: seq: 16, get_clock
Sent 51 1032.508407 1032.508407 6: seq: 17, get_clock
Sent 52 1033.493024 1033.493024 6: seq: 18, get_clock
Sent 53 1034.477906 1034.477906 6: seq: 19, get_clock
Sent 54 1035.462193 1035.462193 6: seq: 1a, get_clock
Sent 55 1036.446718 1036.446718 6: seq: 1b, get_clock
Sent 56 1037.431262 1037.431262 6: seq: 1c, get_clock
Sent 57 1038.416132 1038.416132 6: seq: 1d, get_clock
Sent 58 1039.400410 1039.400410 6: seq: 1e, get_clock
Sent 59 1040.385010 1040.385010 6: seq: 1f, get_clock
Sent 60 1041.369755 1041.369755 6: seq: 10, get_clock
Sent 61 1042.354211 1042.354211 6: seq: 11, get_clock
Sent 62 1043.338929 1043.338929 6: seq: 12, get_clock
Sent 63 1044.323700 1044.323700 6: seq: 13, get_clock
Sent 64 1045.308359 1045.308359 6: seq: 14, get_clock
Sent 65 1046.292481 1046.292481 6: seq: 15, get_clock
Sent 66 1047.276839 1047.276839 6: seq: 16, get_clock
Sent 67 1048.260866 1048.260866 6: seq: 17, get_clock
Sent 68 1049.245924 1049.245924 6: seq: 18, get_clock
Sent 69 1050.230791 1050.230791 6: seq: 19, get_clock
Sent 70 1051.215827 1051.215827 6: seq: 1a, get_clock
Sent 71 1052.200405 1052.200405 6: seq: 1b, get_clock
Sent 72 1053.185170 1053.185170 6: seq: 1c, get_clock
Sent 73 1054.169382 1054.169382 6: seq: 1d, get_clock
Sent 74 1055.154419 1055.154419 6: seq: 1e, get_clock
Sent 75 1056.138771 1056.138771 6: seq: 1f, get_clock
Sent 76 1057.123640 1057.123640 6: seq: 10, get_clock
Sent 77 1058.108338 1058.108338 6: seq: 11, get_clock
Sent 78 1059.092961 1059.092961 6: seq: 12, get_clock
Sent 79 1060.078448 1060.078448 6: seq: 13, get_clock
Sent 80 1061.063324 1061.063324 6: seq: 14, get_clock
Sent 81 1062.048372 1062.048372 6: seq: 15, get_clock
Sent 82 1063.032780 1063.032780 6: seq: 16, get_clock
Sent 83 1064.016934 1064.016934 6: seq: 17, get_clock
Sent 84 1065.001526 1065.001526 6: seq: 18, get_clock
Sent 85 1065.986531 1065.986531 6: seq: 19, get_clock
Sent 86 1066.970785 1066.970785 6: seq: 1a, get_clock
Sent 87 1067.954954 1067.954954 6: seq: 1b, get_clock
Sent 88 1068.939609 1068.939609 6: seq: 1c, get_clock
Sent 89 1069.924442 1069.924442 6: seq: 1d, get_clock
Sent 90 1070.908845 1070.908845 6: seq: 1e, get_clock
Sent 91 1071.893576 1071.893576 6: seq: 1f, get_clock
Sent 92 1072.878199 1072.878199 6: seq: 10, get_clock
Sent 93 1073.862504 1073.862504 6: seq: 11, get_clock
Sent 94 1074.847291 1074.847291 6: seq: 12, get_clock
Sent 95 1075.831694 1075.831694 6: seq: 13, get_clock
Sent 96 1076.816156 1076.816156 6: seq: 14, get_clock
Sent 97 1077.801104 1077.801104 6: seq: 15, get_clock
Sent 98 1078.786002 1078.786002 6: seq: 16, get_clock
Sent 99 1079.690926 1079.690926 6: seq: 17, emergency_stop
Dumping receive queue 100 messages
Receive: 0 1070.848912 1069.924442 13: seq: 1e, analog_in_state oid=14 next_clock=359671680 value=74
Receive: 1 1070.859005 1069.924442 15: seq: 1e, analog_in_state oid=15 next_clock=361471680 value=32071
Receive: 2 1070.909251 1070.908845 11: seq: 1f, clock clock=317984717
Receive: 3 1071.139377 1070.908845 15: seq: 1f, analog_in_state oid=13 next_clock=411871680 value=32622
Receive: 4 1071.148223 1070.908845 13: seq: 1f, analog_in_state oid=14 next_clock=413671680 value=69
Receive: 5 1071.158345 1070.908845 15: seq: 1f, analog_in_state oid=15 next_clock=415471680 value=32067
Receive: 6 1071.438507 1070.908845 15: seq: 1f, analog_in_state oid=13 next_clock=465871680 value=32626
Receive: 7 1071.448596 1070.908845 13: seq: 1f, analog_in_state oid=14 next_clock=467671680 value=71
Receive: 8 1071.458717 1070.908845 15: seq: 1f, analog_in_state oid=15 next_clock=469471680 value=32066
Receive: 9 1071.738882 1070.908845 15: seq: 1f, analog_in_state oid=13 next_clock=519871680 value=32624
Receive: 10 1071.748973 1070.908845 13: seq: 1f, analog_in_state oid=14 next_clock=521671680 value=72
Receive: 11 1071.759089 1070.908845 15: seq: 1f, analog_in_state oid=15 next_clock=523471680 value=32069
Receive: 12 1071.894277 1071.893576 11: seq: 10, clock clock=495235159
Receive: 13 1072.039384 1071.893576 15: seq: 10, analog_in_state oid=13 next_clock=573871680 value=32625
Receive: 14 1072.048219 1071.893576 13: seq: 10, analog_in_state oid=14 next_clock=575671680 value=69
Receive: 15 1072.058340 1071.893576 15: seq: 10, analog_in_state oid=15 next_clock=577471680 value=32062
Receive: 16 1072.338574 1071.893576 15: seq: 10, analog_in_state oid=13 next_clock=627871680 value=32629
Receive: 17 1072.348669 1071.893576 13: seq: 10, analog_in_state oid=14 next_clock=629671680 value=73
Receive: 18 1072.358754 1071.893576 15: seq: 10, analog_in_state oid=15 next_clock=631471680 value=32067
Receive: 19 1072.638884 1071.893576 15: seq: 10, analog_in_state oid=13 next_clock=681871680 value=32621
Receive: 20 1072.648970 1071.893576 13: seq: 10, analog_in_state oid=14 next_clock=683671680 value=76
Receive: 21 1072.659097 1071.893576 15: seq: 10, analog_in_state oid=15 next_clock=685471680 value=32067
Receive: 22 1072.879263 1072.878199 11: seq: 11, clock clock=672464625
Receive: 23 1072.939380 1072.878199 15: seq: 11, analog_in_state oid=13 next_clock=735871680 value=32619
Receive: 24 1072.949467 1072.878199 13: seq: 11, analog_in_state oid=14 next_clock=737671680 value=72
Receive: 25 1072.958341 1072.878199 15: seq: 11, analog_in_state oid=15 next_clock=739471680 value=32072
Receive: 26 1073.238604 1072.878199 15: seq: 11, analog_in_state oid=13 next_clock=789871680 value=32624
Receive: 27 1073.248642 1072.878199 13: seq: 11, analog_in_state oid=14 next_clock=791671680 value=69
Receive: 28 1073.258741 1072.878199 15: seq: 11, analog_in_state oid=15 next_clock=793471680 value=32064
Receive: 29 1073.538891 1072.878199 15: seq: 11, analog_in_state oid=13 next_clock=843871680 value=32625
Receive: 30 1073.548969 1072.878199 13: seq: 11, analog_in_state oid=14 next_clock=845671680 value=69
Receive: 31 1073.559089 1072.878199 15: seq: 11, analog_in_state oid=15 next_clock=847471680 value=32063
Receive: 32 1073.841611 1072.878199 15: seq: 11, analog_in_state oid=13 next_clock=897871680 value=32623
Receive: 33 1073.849465 1072.878199 13: seq: 11, analog_in_state oid=14 next_clock=899671680 value=69
Receive: 34 1073.859516 1072.878199 15: seq: 11, analog_in_state oid=15 next_clock=901471680 value=32068
Receive: 35 1073.863343 1073.862504 11: seq: 12, clock clock=849636619
Receive: 36 1074.138515 1073.862504 15: seq: 12, analog_in_state oid=13 next_clock=951871680 value=32618
Receive: 37 1074.148600 1073.862504 13: seq: 12, analog_in_state oid=14 next_clock=953671680 value=73
Receive: 38 1074.158720 1073.862504 15: seq: 12, analog_in_state oid=15 next_clock=955471680 value=32066
Receive: 39 1074.438890 1073.862504 15: seq: 12, analog_in_state oid=13 next_clock=1005871680 value=32619
Receive: 40 1074.448974 1073.862504 13: seq: 12, analog_in_state oid=14 next_clock=1007671680 value=72
Receive: 41 1074.459095 1073.862504 15: seq: 12, analog_in_state oid=15 next_clock=1009471680 value=32070
Receive: 42 1074.739264 1073.862504 15: seq: 12, analog_in_state oid=13 next_clock=1059871680 value=32622
Receive: 43 1074.749352 1073.862504 13: seq: 12, analog_in_state oid=14 next_clock=1061671680 value=71
Receive: 44 1074.759468 1073.862504 15: seq: 12, analog_in_state oid=15 next_clock=1063471680 value=32071
Receive: 45 1074.848444 1074.847291 11: seq: 13, clock clock=1026898429
Receive: 46 1075.001035 1074.847291 14: seq: 13, stats count=224 sum=98460 sumsq=347357
Receive: 47 1075.038656 1074.847291 15: seq: 13, analog_in_state oid=13 next_clock=1113871680 value=32623
Receive: 48 1075.048779 1074.847291 13: seq: 13, analog_in_state oid=14 next_clock=1115671680 value=68
Receive: 49 1075.058884 1074.847291 15: seq: 13, analog_in_state oid=15 next_clock=1117471680 value=32067
Receive: 50 1075.339020 1074.847291 15: seq: 13, analog_in_state oid=13 next_clock=1167871680 value=32622
Receive: 51 1075.349160 1074.847291 13: seq: 13, analog_in_state oid=14 next_clock=1169671680 value=69
Receive: 52 1075.359261 1074.847291 15: seq: 13, analog_in_state oid=15 next_clock=1171471680 value=32066
Receive: 53 1075.639373 1074.847291 15: seq: 13, analog_in_state oid=13 next_clock=1221871680 value=32620
Receive: 54 1075.649499 1074.847291 13: seq: 13, analog_in_state oid=14 next_clock=1223671680 value=69
Receive: 55 1075.658357 1074.847291 15: seq: 13, analog_in_state oid=15 next_clock=1225471680 value=32067
Receive: 56 1075.832248 1075.831694 11: seq: 14, clock clock=1204086199
Receive: 57 1075.938708 1075.831694 15: seq: 14, analog_in_state oid=13 next_clock=1275871680 value=32624
Receive: 58 1075.948746 1075.831694 13: seq: 14, analog_in_state oid=14 next_clock=1277671680 value=70
Receive: 59 1075.958846 1075.831694 15: seq: 14, analog_in_state oid=15 next_clock=1279471680 value=32069
Receive: 60 1076.239022 1075.831694 15: seq: 14, analog_in_state oid=13 next_clock=1329871680 value=32625
Receive: 61 1076.249121 1075.831694 13: seq: 14, analog_in_state oid=14 next_clock=1331671680 value=68
Receive: 62 1076.259222 1075.831694 15: seq: 14, analog_in_state oid=15 next_clock=1333471680 value=32069
Receive: 63 1076.539453 1075.831694 15: seq: 14, analog_in_state oid=13 next_clock=1383871680 value=32623
Receive: 64 1076.549497 1075.831694 13: seq: 14, analog_in_state oid=14 next_clock=1385671680 value=69
Receive: 65 1076.558374 1075.831694 15: seq: 14, analog_in_state oid=15 next_clock=1387471680 value=32067
Receive: 66 1076.817256 1076.816156 11: seq: 15, clock clock=1381290673
Receive: 67 1076.838630 1076.816156 15: seq: 15, analog_in_state oid=13 next_clock=1437871680 value=32621
Receive: 68 1076.848860 1076.816156 13: seq: 15, analog_in_state oid=14 next_clock=1439671680 value=68
Receive: 69 1076.858915 1076.816156 15: seq: 15, analog_in_state oid=15 next_clock=1441471680 value=32069
Receive: 70 1077.138996 1076.816156 15: seq: 15, analog_in_state oid=13 next_clock=1491871680 value=32621
Receive: 71 1077.149116 1076.816156 13: seq: 15, analog_in_state oid=14 next_clock=1493671680 value=69
Receive: 72 1077.159227 1076.816156 15: seq: 15, analog_in_state oid=15 next_clock=1495471680 value=32064
Receive: 73 1077.439370 1076.816156 15: seq: 15, analog_in_state oid=13 next_clock=1545871680 value=32622
Receive: 74 1077.449466 1076.816156 13: seq: 15, analog_in_state oid=14 next_clock=1547671680 value=71
Receive: 75 1077.458336 1076.816156 15: seq: 15, analog_in_state oid=15 next_clock=1549471680 value=32068
Receive: 76 1077.738501 1076.816156 15: seq: 15, analog_in_state oid=13 next_clock=1599871680 value=32625
Receive: 77 1077.748618 1076.816156 13: seq: 15, analog_in_state oid=14 next_clock=1601671680 value=70
Receive: 78 1077.758720 1076.816156 15: seq: 15, analog_in_state oid=15 next_clock=1603471680 value=32065
Receive: 79 1077.802623 1077.801104 11: seq: 16, clock clock=1558579933
Receive: 80 1078.039032 1077.801104 15: seq: 16, analog_in_state oid=13 next_clock=1653871680 value=32622
Receive: 81 1078.049128 1077.801104 13: seq: 16, analog_in_state oid=14 next_clock=1655671680 value=72
Receive: 82 1078.059219 1077.801104 15: seq: 16, analog_in_state oid=15 next_clock=1657471680 value=32064
Receive: 83 1078.339387 1077.801104 15: seq: 16, analog_in_state oid=13 next_clock=1707871680 value=32623
Receive: 84 1078.349489 1077.801104 13: seq: 16, analog_in_state oid=14 next_clock=1709671680 value=72
Receive: 85 1078.358381 1077.801104 15: seq: 16, analog_in_state oid=15 next_clock=1711471680 value=32066
Receive: 86 1078.638533 1077.801104 15: seq: 16, analog_in_state oid=13 next_clock=1761871680 value=32623
Receive: 87 1078.648635 1077.801104 13: seq: 16, analog_in_state oid=14 next_clock=1763671680 value=70
Receive: 88 1078.658757 1077.801104 15: seq: 16, analog_in_state oid=15 next_clock=1765471680 value=32070
Receive: 89 1078.786406 1078.786002 11: seq: 17, clock clock=1735861625
Receive: 90 1078.939030 1078.786002 15: seq: 17, analog_in_state oid=13 next_clock=1815871680 value=32627
Receive: 91 1078.949115 1078.786002 13: seq: 17, analog_in_state oid=14 next_clock=1817671680 value=67
Receive: 92 1078.959220 1078.786002 15: seq: 17, analog_in_state oid=15 next_clock=1819471680 value=32067
Receive: 93 1079.239369 1078.786002 15: seq: 17, analog_in_state oid=13 next_clock=1869871680 value=32622
Receive: 94 1079.249496 1078.786002 13: seq: 17, analog_in_state oid=14 next_clock=1871671680 value=66
Receive: 95 1079.258357 1078.786002 15: seq: 17, analog_in_state oid=15 next_clock=1873471680 value=32067
Receive: 96 1079.538537 1078.786002 15: seq: 17, analog_in_state oid=13 next_clock=1923871680 value=32625
Receive: 97 1079.548640 1078.786002 13: seq: 17, analog_in_state oid=14 next_clock=1925671680 value=73
Receive: 98 1079.558730 1078.786002 15: seq: 17, analog_in_state oid=15 next_clock=1927471680 value=32067
Receive: 99 1079.691406 1079.690926 12: seq: 18, shutdown clock=1898743861 static_string_id=Command request
Attempting MCU 'mcu' reset command
b'Got EOF when reading from device'
Unable to issue reset command on MCU 'head0'
webhooks client 1964964016: Disconnected
Restarting printer
Start printer at Mon Apr 24 23:05:50 2023 (1682402750.7 1084.5)
===== Config file =====
[gcode_macro BED_MESH_CALIBRATE]
rename_existing = _BED_MESH_CALIBRATE
variable_led_enable = False
variable_status_macro = 'status_meshing'
variable_fuzz_enable = False
variable_fuzz_min = 0
variable_fuzz_max = 4
variable_probe_dock_enable = False
variable_attach_macro = 'Attach_Probe'
variable_detach_macro = 'Dock_Probe'
gcode = 
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}
	{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}
	{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (printer.configfile.settings.bed_mesh.probe_count[0]-2)  %}
	{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (printer.configfile.settings.bed_mesh.probe_count[1]-2)  %}
	{% set x_min = bed_mesh_min[0] %}
	{% set y_min = bed_mesh_min[1] %}
	{% set x_max = bed_mesh_max[0] %}
	{% set y_max = bed_mesh_max[1] %}
	
	{ action_respond_info("{} points, clamping to mesh [{!r} {!r}]".format(
	all_points | count,
	bed_mesh_min,
	bed_mesh_max,
	)) }
	
	{% if fuzz_enable == True %}
	{% if all_points %}
	{% set fuzz_range = range(fuzz_min * 100 | int, fuzz_max * 100 | int) %}
	{% set x_min = ( bed_mesh_min[0], ((all_points | map(attribute=0) | min - (fuzz_range | random / 100.0)) | default(bed_mesh_min[0])) ) | max %}
	{% set y_min = ( bed_mesh_min[1], ((all_points | map(attribute=1) | min - (fuzz_range | random / 100.0)) | default(bed_mesh_min[1])) ) | max %}
	{% set x_max = ( bed_mesh_max[0], ((all_points | map(attribute=0) | max + (fuzz_range | random / 100.0)) | default(bed_mesh_max[0])) ) | min %}
	{% set y_max = ( bed_mesh_max[1], ((all_points | map(attribute=1) | max + (fuzz_range | random / 100.0)) | default(bed_mesh_max[1])) ) | min %}
	{% endif %}
	{% else %}
	{% set x_min = [ bed_mesh_min[0], (all_points | map(attribute=0) | min | default(bed_mesh_min[0])) ] | max %}
	{% set y_min = [ bed_mesh_min[1], (all_points | map(attribute=1) | min | default(bed_mesh_min[1])) ] | max %}
	{% set x_max = [ bed_mesh_max[0], (all_points | map(attribute=0) | max | default(bed_mesh_max[0])) ] | min %}
	{% set y_max = [ bed_mesh_max[1], (all_points | map(attribute=1) | max | default(bed_mesh_max[1])) ] | min %}
	{% endif %}
	
	{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(
	(x_min, y_min),
	(x_max, y_max),
	)) }
	
	{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | int) + 2 %}
	{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | int) + 2 %}
	
	{% if (([points_x, points_y]|max) > 6) %}
	{% set algorithm = "bicubic" %}
	{% set min_points = 4 %}
	{% else %}
	{% set algorithm = "lagrange" %}
	{% set min_points = 3 %}
	{% endif %}
	{ action_respond_info( "Algorithm: {}".format(algorithm)) }
	
	{% set points_x = [points_x, min_points]|max  %}
	{% set points_y = [points_y, min_points]|max  %}
	{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }
	
	{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}
	{% set ref_index = (points_x * points_y / 2) | int %}
	{ action_respond_info( "Reference index: {}".format(ref_index) ) }
	{% else %}
	{% set ref_index = -1 %}
	{% endif %}
	
	{% if probe_dock_enable == True %}
	{attach_macro}
	{% endif %}
	
	{% if led_enable == True %}
	{status_macro}
	{% endif %}
	
	_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}
	
	{% if probe_dock_enable == True %}
	{detach_macro}
	{% endif %}

[gcode_macro ADAPTIVE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
variable_adaptive_enable = True
variable_z_height = 0.3
variable_tip_distance = 10
variable_purge_amount = 25
variable_flow_rate = 10
variable_x_default = 10
variable_y_default = 10
variable_size = 10
variable_distance_to_object_x = 15
variable_distance_to_object_y = 0
variable_travel_speed = 300
gcode = 
	{% if adaptive_enable == True %}
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set x_origin = (all_points | map(attribute=0) | min | default(x_default + distance_to_object_x + size)) - distance_to_object_x - size %}
	{% set y_origin = (all_points | map(attribute=1) | min | default(y_default + distance_to_object_y + size)) - distance_to_object_y - size %}
	{% set x_origin = ([x_origin, 0] | max) %}
	{% set y_origin = ([y_origin, 0] | max) %}
	{% else %}
	{% set x_origin = x_default | float %}
	{% set y_origin = y_default | float %}
	{% endif %}
	{% set purge_move_speed = 2.31 * size * flow_rate / (purge_amount * 2.405) %}
	{% set prepurge_speed = flow_rate / 2.405 %}
	{ action_respond_info( "x: " + x_origin|string + " y: " + y_origin|string + " purge_move_speed: " + purge_move_speed|string + " prepurge_speed: " + prepurge_speed|string ) }
	
	G92 E0
	G0 F{travel_speed*60}
	G90
	G0 X{x_origin} Y{y_origin+size/2}
	G0 Z{z_height}
	M83
	G1 E{tip_distance} F{prepurge_speed*60}
	G1 X{x_origin+size*0.289} Y{y_origin+size} E{purge_amount/4} F{purge_move_speed*60}
	G1 E-.5 F2100
	G0 Z{z_height*2}
	G0 X{x_origin+size*0.789} Y{y_origin+size}
	G0 Z{z_height}
	G1 E.5 F2100
	G1 X{x_origin+size*0.211} Y{y_origin} E{purge_amount/2} F{purge_move_speed*60}
	G1 E-.5 F2100
	G0 Z{z_height*2}
	G0 X{x_origin+size*0.711} Y{y_origin}
	G0 Z{z_height}
	G1 E.5 F2100
	G1 X{x_origin+size} Y{y_origin+size/2}  E{purge_amount/4} F{purge_move_speed*60}
	G1 E-.5 F2100
	G92 E0
	G0 Z{z_height*2}

[virtual_sdcard]
path = /home/pi/gcode_files

[pause_resume]

[gcode_macro PRINT_START]
variable_parameter_area_start = 0,0
variable_parameter_area_end = 0,0
gcode = 
	SET_FAN_SPEED FAN=chamber SPEED=.5
	SET_FAN_SPEED FAN=drivers SPEED=1
	{% set BED = params.BED|default(55)|int %}
	{% set EXTRUDER = params.EXTRUDER|default(205)|int %}
	G28 X Y
	
	M104 S170
	M140 S{BED}
	RESPOND PREFIX= MSG="Waiting for temperatures..."
	M117  Waiting for temperatures...
	M190 S{BED}
	RESPOND PREFIX= MSG="Waiting for thermal expansion..."
	M117 Waiting for thermal expansion...
	G4 P30000
	RESPOND PREFIX= MSG="Creating a mesh..."
	M117 Creating a mesh...
	G28
	QUAD_GANTRY_LEVEL
	BED_MESH_CALIBRATE
	
	M104 S{EXTRUDER}
	
	
	RESPOND PREFIX= MSG="Moving to prime position"
	M117 Moving to prime position
	G1 X25 Y-2 Z10 F5000.0
	{% if printer.extruder.temperature < params.EXTRUDER|float*0.98 %}
	M109 S{params.EXTRUDER|float*0.98}
	{% endif %}
	M104 S{EXTRUDER}
	G4 P30000
	ADAPTIVE_PURGE
	RESPOND PREFIX= MSG="Printing..."
	M117 Printing...
	M117

[gcode_macro PID_TUNE]
gcode = 
	G28
	G1 Z10 F7800
	M106 S64
	PID_CALIBRATE HEATER=extruder TARGET=245
	
	
	RESPOND PREFIX= MSG="Moving to prime position"
	M117 Moving to prime position
	G1 X25 Y-3 Z10 F5000.0
	{% if printer.extruder.temperature < params.EXTRUDER|float*0.98 %}
	M109 S{params.EXTRUDER|float*0.98}
	{% endif %}
	M104 S{EXTRUDER}
	
	RESPOND PREFIX= MSG="Priming the nozzle"
	M117 Priming the nozzle
	G92 E0
	G0 Z0.15
	G0 X55 Y-2 Z0.28 F1500.0
	G92 E0
	G1 X195 Y-2 Z0.28 F1500.0 E15
	G92 E0
	G10
	G1 Z2.0 F3000
	
	RESPOND PREFIX= MSG="Printing..."
	M117 Printing...
	M117

[display_status]

[gcode_macro END_PRINT]
gcode = 
	
	G91
	G1 E-2
	
	G90
	
	TURN_OFF_HEATERS
	
	G28 X Y

[gcode_macro PAUSE]
rename_existing = BASE_PAUSE
gcode = 
	
	SAVE_GCODE_STATE NAME=PAUSE_state
	BASE_PAUSE
	G91
	G1 E-{2} F2100
	G1 Z{10}
	G90
	G1 X{230} Y{230} F6000
	G91

[gcode_macro RESUME]
rename_existing = BASE_RESUME
gcode = 
	G91
	G1 E{s} F2100
	G90
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
	BASE_RESUME

[gcode_macro CANCEL_PRINT]
rename_existing = BASE_CANCEL_PRINT
gcode = 
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	SDCARD_RESET_FILE
	BASE_CANCEL_PRINT
	
	G91
	G1 Z10 F8000
	G90
	G1 X0 Y222 E-3 F8000
	DISABLE_MOTORS
	M106 S0
	M117 Print Canceled

[exclude_object]

[gcode_macro M486]
gcode = 
	
	
	
	
	
	
	
	
	
	
	
	{% if 'exclude_object' not in printer %}
	{action_raise_error("[exclude_object] is not enabled")}
	{% endif %}
	
	{% if 'T' in params %}
	EXCLUDE_OBJECT RESET=1
	
	{% for i in range(params.T | int) %}
	EXCLUDE_OBJECT_DEFINE NAME={i}
	{% endfor %}
	{% endif %}
	
	{% if 'C' in params %}
	EXCLUDE_OBJECT CURRENT=1
	{% endif %}
	
	{% if 'P' in params %}
	EXCLUDE_OBJECT NAME={params.P}
	{% endif %}
	
	{% if 'S' in params %}
	{% if params.S == '-1' %}
	{% if printer.exclude_object.current_object %}
	EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
	{% endif %}
	{% else %}
	EXCLUDE_OBJECT_START NAME={params.S}
	{% endif %}
	{% endif %}
	
	{% if 'U' in params %}
	EXCLUDE_OBJECT RESET=1 NAME={params.U}
	{% endif %}

[gcode_macro GET_TIMELAPSE_SETUP]
description = Print the Timelapse setup
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% set output_txt = ["Timelapse Setup:"] %}
	{% set _dummy = output_txt.append("enable: %s" % tl.enable) %}
	{% set _dummy = output_txt.append("park: %s" % tl.park.enable) %}
	{% if tl.park.enable %}
	{% set _dummy = output_txt.append("park position: %s time: %s s" % (tl.park.pos, tl.park.time)) %}
	{% set _dummy = output_txt.append("park cord x:%s y:%s dz:%s" % (tl.park.coord.x, tl.park.coord.y, tl.park.coord.dz)) %}
	{% set _dummy = output_txt.append("travel speed: %s mm/s" % tl.speed.travel) %}
	{% endif %}
	{% set _dummy = output_txt.append("fw_retract: %s" % tl.extruder.fw_retract) %}
	{% if not tl.extruder.fw_retract %}
	{% set _dummy = output_txt.append("retract: %s mm speed: %s mm/s" % (tl.extruder.retract, tl.speed.retract)) %}
	{% set _dummy = output_txt.append("extrude: %s mm speed: %s mm/s" % (tl.extruder.extrude, tl.speed.extrude)) %}
	{% endif %}
	{% set _dummy = output_txt.append("verbose: %s" % tl.verbose) %}
	{action_respond_info(output_txt|join("\n"))}

[gcode_macro _SET_TIMELAPSE_SETUP]
description = Set user parameters for timelapse
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	
	{% set min = printer.toolhead.axis_minimum %}
	{% set max = printer.toolhead.axis_maximum %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	{% set park = {'min'   : {'x': (min.x / 1.42)|round(3) if round_bed else min.x|round(3),
	'y': (min.y / 1.42)|round(3) if round_bed else min.y|round(3)},
	'max'   : {'x': (max.x / 1.42)|round(3) if round_bed else max.x|round(3),
	'y': (max.y / 1.42)|round(3) if round_bed else max.y|round(3)},
	'center': {'x': (max.x-(max.x-min.x)/2)|round(3),
	'y': (max.y-(max.y-min.y)/2)|round(3)}} %}
	
	{% if params.ENABLE %}
	{% if params.ENABLE|lower is in ['true', 'false'] %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=enable VALUE={True if params.ENABLE|lower == 'true' else False}
	{% else %}
	{action_raise_error("ENABLE=%s not supported. Allowed values are [True, False]" % params.ENABLE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.VERBOSE %}
	{% if params.VERBOSE|lower is in ['true', 'false'] %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=verbose VALUE={True if params.VERBOSE|lower == 'true' else False}
	{% else %}
	{action_raise_error("VERBOSE=%s not supported. Allowed values are [True, False]" % params.VERBOSE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_X %}
	{% if params.CUSTOM_POS_X|float >= min.x and params.CUSTOM_POS_X|float <= max.x %}
	{% set _dummy = tl.park.custom.update({'x':params.CUSTOM_POS_X|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_X=%s must be within [%s - %s]" % (params.CUSTOM_POS_X, min.x, max.x))}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_Y %}
	{% if params.CUSTOM_POS_Y|float >= min.y and params.CUSTOM_POS_Y|float <= max.y %}
	{% set _dummy = tl.park.custom.update({'y':params.CUSTOM_POS_Y|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_Y=%s must be within [%s - %s]" % (params.CUSTOM_POS_Y, min.y, max.y))}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_DZ %}
	{% if params.CUSTOM_POS_DZ|float >= min.z and params.CUSTOM_POS_DZ|float <= max.z %}
	{% set _dummy = tl.park.custom.update({'dz':params.CUSTOM_POS_DZ|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_DZ=%s must be within [%s - %s]" % (params.CUSTOM_POS_DZ, min.z, max.z))}
	{% endif %}
	{% endif %}
	{% if params.PARK_ENABLE %}
	{% if params.PARK_ENABLE|lower is in ['true', 'false'] %}
	{% set _dummy = tl.park.update({'enable':True if params.PARK_ENABLE|lower == 'true' else False}) %}
	{% else %}
	{action_raise_error("PARK_ENABLE=%s not supported. Allowed values are [True, False]" % params.PARK_ENABLE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.PARK_POS %}
	{% if params.PARK_POS|lower is in ['center','front_left','front_right','back_left','back_right','custom','x_only','y_only'] %}
	{% set dic = {'center'      : {'x': park.center.x   , 'y': park.center.y   , 'dz': 1                },
	'front_left'  : {'x': park.min.x      , 'y': park.min.y      , 'dz': 0                },
	'front_right' : {'x': park.max.x      , 'y': park.min.y      , 'dz': 0                },
	'back_left'   : {'x': park.min.x      , 'y': park.max.y      , 'dz': 0                },
	'back_right'  : {'x': park.max.x      , 'y': park.max.y      , 'dz': 0                },
	'custom'      : {'x': tl.park.custom.x, 'y': tl.park.custom.y, 'dz': tl.park.custom.dz},
	'x_only'      : {'x': tl.park.custom.x, 'y': 'none'          , 'dz': tl.park.custom.dz},
	'y_only'      : {'x': 'none'          , 'y': tl.park.custom.y, 'dz': tl.park.custom.dz}} %}
	{% set _dummy = tl.park.update({'pos':params.PARK_POS|lower}) %}
	{% set _dummy = tl.park.update({'coord':dic[tl.park.pos]}) %}
	{% else %}
	{action_raise_error("PARK_POS=%s not supported. Allowed values are [CENTER, FRONT_LEFT, FRONT_RIGHT, BACK_LEFT, BACK_RIGHT, CUSTOM, X_ONLY, Y_ONLY]"
	% params.PARK_POS|upper)}
	{% endif %}
	{% endif %}
	{% if params.PARK_TIME %}
	{% if params.PARK_TIME|float >= 0.0 %}
	{% set _dummy = tl.park.update({'time':params.PARK_TIME|float|round(3)}) %}
	{% else %}
	{action_raise_error("PARK_TIME=%s must be a positive number" % params.PARK_TIME)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=park VALUE="{tl.park}"
	{% if params.TRAVEL_SPEED %}
	{% if params.TRAVEL_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'travel':params.TRAVEL_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("TRAVEL_SPEED=%s must be larger than 0" % params.TRAVEL_SPEED)}
	{% endif %}
	{% endif %}
	{% if params.RETRACT_SPEED %}
	{% if params.RETRACT_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'retract':params.RETRACT_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("RETRACT_SPEED=%s must be larger than 0" % params.RETRACT_SPEED)}
	{% endif %}
	{% endif %}
	{% if params.EXTRUDE_SPEED %}
	{% if params.EXTRUDE_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'extrude':params.EXTRUDE_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("EXTRUDE_SPEED=%s must be larger than 0" % params.EXTRUDE_SPEED)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=speed VALUE="{tl.speed}"
	{% if params.EXTRUDE_DISTANCE %}
	{% if params.EXTRUDE_DISTANCE|float >= 0.0 %}
	{% set _dummy = tl.extruder.update({'extrude':params.EXTRUDE_DISTANCE|float|round(3)}) %}
	{% else %}
	{action_raise_error("EXTRUDE_DISTANCE=%s must be specified as positiv number" % params.EXTRUDE_DISTANCE)}
	{% endif %}
	{% endif %}
	{% if params.RETRACT_DISTANCE %}
	{% if params.RETRACT_DISTANCE|float >= 0.0 %}
	{% set _dummy = tl.extruder.update({'retract':params.RETRACT_DISTANCE|float|round(3)}) %}
	{% else %}
	{action_raise_error("RETRACT_DISTANCE=%s must be specified as positiv number" % params.RETRACT_DISTANCE)}
	{% endif %}
	{% endif %}
	{% if params.FW_RETRACT %}
	{% if params.FW_RETRACT|lower is in ['true', 'false'] %}
	{% if 'firmware_retraction' in printer.configfile.settings %}
	{% set _dummy = tl.extruder.update({'fw_retract': True if params.FW_RETRACT|lower == 'true' else False}) %}
	{% else %}
	{% set _dummy = tl.extruder.update({'fw_retract':False}) %}
	{% if params.FW_RETRACT|capitalize == 'True' %}
	{action_raise_error("[firmware_retraction] not defined in printer.cfg. Can not enable fw_retract")}
	{% endif %}
	{% endif %}
	{% else %}
	{action_raise_error("FW_RETRACT=%s not supported. Allowed values are [True, False]" % params.FW_RETRACT|capitalize)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=extruder VALUE="{tl.extruder}"
	{% if printer.configfile.settings['gcode_macro pause'] is defined %}
	{% set _dummy = tl.macro.update({'pause': printer.configfile.settings['gcode_macro pause'].rename_existing}) %}
	{% endif %}
	{% if printer.configfile.settings['gcode_macro resume'] is defined %}
	{% set _dummy = tl.macro.update({'resume': printer.configfile.settings['gcode_macro resume'].rename_existing}) %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=macro VALUE="{tl.macro}"

[gcode_macro TIMELAPSE_TAKE_FRAME]
description = Take Timelapse shoot
variable_enable = False
variable_takingframe = False
variable_park = {'enable': False,
	'pos'   : 'center',
	'time'  : 0.1,
	'custom': {'x': 0, 'y': 0, 'dz': 0},
	'coord' : {'x': 0, 'y': 0, 'dz': 0}}
variable_extruder = {'fw_retract': False,
	'retract': 1.0,
	'extrude': 1.0}
variable_speed = {'travel': 100,
	'retract': 15,
	'extrude': 15}
variable_verbose = True
variable_restore = {'absolute': {'coordinates': True, 'extrude': True}, 'speed': 1500, 'e':0, 'factor': {'speed': 1.0, 'extrude': 1.0}}
variable_macro = {'pause': 'PAUSE', 'resume': 'RESUME'}
variable_is_paused = False
gcode = 
	{% set hyperlapse = True if params.HYPERLAPSE and params.HYPERLAPSE|lower =='true' else False %}
	{% if enable %}
	{% if (hyperlapse and printer['gcode_macro HYPERLAPSE'].run) or
	(not hyperlapse and not printer['gcode_macro HYPERLAPSE'].run) %}
	{% if park.enable %}
	{% set pos = {'x': 'X' + park.coord.x|string if park.pos != 'y_only' else '',
	'y': 'Y' + park.coord.y|string if park.pos != 'x_only' else '',
	'z': 'Z'+ [printer.gcode_move.gcode_position.z + park.coord.dz, printer.toolhead.axis_maximum.z]|min|string} %}
	{% set restore = {'absolute': {'coordinates': printer.gcode_move.absolute_coordinates,
	'extrude'    : printer.gcode_move.absolute_extrude},
	'speed'   : printer.gcode_move.speed,
	'e'       : printer.gcode_move.gcode_position.e,
	'factor'  : {'speed'  : printer.gcode_move.speed_factor,
	'extrude': printer.gcode_move.extrude_factor}} %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=restore VALUE="{restore}"
	{% if not printer[printer.toolhead.extruder].can_extrude %}
	{% if verbose %}{action_respond_info("Timelapse: Warning, minimum extruder temperature not reached!")}{% endif %}
	{% else %}
	{% if extruder.fw_retract %}
	G10
	{% else %}
	M83
	G0 E-{extruder.retract} F{speed.retract * 60}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=is_paused VALUE=True
	{macro.pause}
	SET_GCODE_OFFSET X=0 Y=0
	G90
	{% if "xyz" not in printer.toolhead.homed_axes %}
	{% if verbose %}{action_respond_info("Timelapse: Warning, axis not homed yet!")}{% endif %}
	{% else %}
	G0 {pos.x} {pos.y} {pos.z} F{speed.travel * 60}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=takingframe VALUE=True
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_TAKE_FRAME DURATION=0.5
	M400
	{% endif %}
	_TIMELAPSE_NEW_FRAME HYPERLAPSE={hyperlapse}
	{% endif %}
	{% else %}
	{% if verbose %}{action_respond_info("Timelapse: disabled, take frame ignored")}{% endif %}
	{% endif %}

[gcode_macro _TIMELAPSE_NEW_FRAME]
description = action call for timelapse shoot. must be a seperate macro
gcode = 
	{action_call_remote_method("timelapse_newframe",
	macropark=printer['gcode_macro TIMELAPSE_TAKE_FRAME'].park,
	hyperlapse=params.HYPERLAPSE)}

[delayed_gcode _WAIT_TIMELAPSE_TAKE_FRAME]
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% set factor = {'speed': printer.gcode_move.speed_factor, 'extrude': printer.gcode_move.extrude_factor} %}
	{% if tl.takingframe %}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_TAKE_FRAME DURATION=0.5
	{% else %}
	{tl.macro.resume} VELOCITY={tl.speed.travel}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=is_paused VALUE=False
	{% if not printer[printer.toolhead.extruder].can_extrude %}
	{action_respond_info("Timelapse: Warning minimum extruder temperature not reached!")}
	{% else %}
	{% if tl.extruder.fw_retract %}
	G11
	{% else %}
	G0 E{tl.extruder.extrude} F{tl.speed.extrude * 60}
	G0 F{tl.restore.speed}
	{% if tl.restore.absolute.extrude %}
	M82
	G92 E{tl.restore.e}
	{% endif %}
	{% endif %}
	{% endif %}
	{% if tl.restore.factor.speed   != factor.speed   %} M220 S{(factor.speed*100)|round(0)}   {% endif %}
	{% if tl.restore.factor.extrude != factor.extrude %} M221 S{(factor.extrude*100)|round(0)} {% endif %}
	{% if not tl.restore.absolute.coordinates %} G91 {% endif %}
	{% endif %}

[gcode_macro HYPERLAPSE]
description = Start/Stop a hyperlapse recording
variable_cycle = 0
variable_run = False
gcode = 
	{% set cycle = params.CYCLE|default(30)|int %}
	{% if params.ACTION and params.ACTION|lower == 'start' %}
	{action_respond_info("Hyperlapse: frames started (Cycle %d sec)" % cycle)}
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=run VALUE=True
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=cycle VALUE={cycle}
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION={cycle}
	TIMELAPSE_TAKE_FRAME HYPERLAPSE=True
	{% elif params.ACTION and params.ACTION|lower == 'stop' %}
	{% if run %}{action_respond_info("Hyperlapse: frames stopped")}{% endif %}
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=run VALUE=False
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION=0
	{% else %}
	{action_raise_error("Hyperlapse: No valid input parameter
	Use:
	- HYPERLAPSE ACTION=START [CYCLE=time]
	- HYPERLAPSE ACTION=STOP")}
	{% endif %}

[delayed_gcode _HYPERLAPSE_LOOP]
gcode = 
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION={printer["gcode_macro HYPERLAPSE"].cycle}
	TIMELAPSE_TAKE_FRAME HYPERLAPSE=True

[gcode_macro TIMELAPSE_RENDER]
description = Render Timelapse video and wait for the result
variable_render = False
variable_run_identifier = 0
gcode = 
	{action_respond_info("Timelapse: Rendering started")}
	{action_call_remote_method("timelapse_render", byrendermacro="True")}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_RENDER VARIABLE=render VALUE=True
	{printer.configfile.settings['gcode_macro pause'].rename_existing}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_RENDER DURATION=0.5

[delayed_gcode _WAIT_TIMELAPSE_RENDER]
gcode = 
	{% set ri = printer['gcode_macro TIMELAPSE_RENDER'].run_identifier % 4 %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_RENDER VARIABLE=run_identifier VALUE={ri + 1}
	{% if printer['gcode_macro TIMELAPSE_RENDER'].render %}
	M117 Rendering {['-','\\','|','/'][ri]}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_RENDER DURATION=0.5
	{% else %}
	{action_respond_info("Timelapse: Rendering finished")}
	M117
	{printer.configfile.settings['gcode_macro resume'].rename_existing}
	{% endif %}

[gcode_macro TEST_STREAM_DELAY]
description = Helper macro to find stream and park delay
gcode = 
	{% set min = printer.toolhead.axis_minimum %}
	{% set max = printer.toolhead.axis_maximum %}
	{% set act = printer.toolhead.position %}
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% if act.z > 5.0 %}
	G0 X{min.x + 5.0} F{tl.speed.travel|int * 60}
	G0 X{(max.x-min.x)/2}
	G4 P{tl.park.time|float * 1000}
	_TIMELAPSE_NEW_FRAME HYPERLAPSE=FALSE
	G0 X{max.x - 5.0}
	{% else %}
	{action_raise_error("Toolhead z %.3f to low. Please place head above z = 5.0" % act.z)}
	{% endif %}

[force_move]
enable_force_move = True

[mcu head0]
canbus_uuid = 20195bac64c4

[temperature_sensor CANBOARD]
sensor_type = temperature_mcu
sensor_mcu = head0

[idle_timeout]
timeout = 100000

[mcu]
serial = /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00

[adc_scaled vref_scaled]
vref_pin = PB5
vssa_pin = PB4

[temperature_sensor pi_cpu]
sensor_type = temperature_host
gcode_id = P

[printer]
kinematics = corexy
max_velocity = 600
max_accel = 15000
max_accel_to_decel = 10000
square_corner_velocity = 10
max_z_velocity = 50
max_z_accel = 180

[stepper_x]
step_pin = PC25
dir_pin = !PB29
enable_pin = !PC28
rotation_distance = 40
microsteps = 32
endstop_pin = ^!head0:PB12
position_endstop = 303
position_max = 303
position_min = 0
homing_speed = 100

[tmc2209 stepper_x]
uart_pin = PA1
tx_pin = PA0
select_pins = PD0
uart_address = 1
run_current = 1
sense_resistor = 0.056

[stepper_y]
step_pin = PC24
dir_pin = !PB28
enable_pin = !PC28
rotation_distance = 40
microsteps = 32
endstop_pin = ^PC4
position_endstop = 308
position_max = 308
position_min = -3
homing_speed = 100
homing_retract_dist = 30

[tmc2209 stepper_y]
uart_pin = PA1
tx_pin = PA0
select_pins = PD0
uart_address = 2
run_current = 1
sense_resistor = 0.056

[stepper_z3]
step_pin = PC26
dir_pin = PB3
enable_pin = !PC28
rotation_distance = 8
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PA1
tx_pin = PA0
select_pins = PD0
uart_address = 0
run_current = 1.1
sense_resistor = 0.056
driver_tbl = 2
driver_hend = 3
driver_hstrt = 4
driver_toff = 4

[stepper_z]
step_pin = PC19
dir_pin = !PD20
enable_pin = !PC28
rotation_distance = 8
microsteps = 32
endstop_pin = probe:z_virtual_endstop
position_max = 390
position_min = -15
homing_speed = 20

[tmc2209 stepper_z]
uart_pin = PA1
tx_pin = PA0
uart_address = 3
select_pins = PD0
run_current = 1.1
sense_resistor = 0.056
driver_tbl = 2
driver_hend = 3
driver_hstrt = 4
driver_toff = 4

[stepper_z1]
step_pin = PC16
dir_pin = PD21
enable_pin = !PC28
rotation_distance = 8
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PA1
tx_pin = PA0
uart_address = 0
select_pins = !PD0
run_current = 1.1
sense_resistor = 0.056
driver_tbl = 2
driver_hend = 3
driver_hstrt = 4
driver_toff = 4

[stepper_z2]
step_pin = PC30
dir_pin = !PB0
enable_pin = !PC28
rotation_distance = 8
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PA1
tx_pin = PA0
uart_address = 1
select_pins = !PD0
run_current = 1.1
sense_resistor = 0.056
driver_tbl = 2
driver_hend = 3
driver_hstrt = 4
driver_toff = 4

[extruder]
step_pin = head0:PB3
dir_pin = head0:PB4
enable_pin = !head0:PB5
heater_pin = head0:PA6
microsteps = 16
full_steps_per_rotation = 200
rotation_distance = 22.67895
gear_ratio = 50:8
nozzle_diameter = 0.500
filament_diameter = 1.750
sensor_type = ATC Semitec 104GT-2
sensor_pin = head0:PA0
pullup_resistor = 2200
min_extrude_temp = 170
max_extrude_cross_section = 5
min_temp = -100
max_temp = 325
control = pid
pid_kp = 24.502
pid_ki = 1.027
pid_kd = 146.095

[tmc2209 extruder]
uart_pin = head0:PA9
interpolate = True
run_current = .3
sense_resistor = 0.110
driver_tbl = 2
driver_hend = 3
driver_hstrt = 5
driver_toff = 6

[heater_bed]
heater_pin = PB17
sensor_type = EPCOS 100K B57560G104F
sensor_pin = vref_scaled:PC2
pullup_resistor = 2200
min_temp = -100
max_temp = 130
max_power = 0.8
control = pid
pid_kp = 20.846
pid_ki = 1.241
pid_kd = 87.555

[fan]
pin = PC10
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend]
pin = head0:PA7
heater = extruder
heater_temp = 45
fan_speed = 1

[controller_fan drivers]
pin = PA11
heater = extruder,heater_bed
fan_speed = 1

[fan_generic chamber]
pin = PB11

[bltouch]
sensor_pin = PC31
control_pin = PB1
stow_on_each_sample = false
probe_with_touch_mode = True
x_offset = 21.765
y_offset = 0
speed = 7
lift_speed = 20
samples = 2
samples_result = average
sample_retract_dist = 5.0
samples_tolerance = 0.01
samples_tolerance_retries = 3
z_offset = 1.265

[safe_z_home]
home_xy_position = 150,150
speed = 350
z_hop = 6
z_hop_speed = 15

[quad_gantry_level]
gantry_corners = 
	-68,-16
	368,355
points = 
	50,50
	50,250
	250,250
	250,50
speed = 350
horizontal_move_z = 10
retries = 8
retry_tolerance = 0.015
max_adjust = 16

[bed_mesh]
mesh_min = 25,25
mesh_max = 275,275
probe_count = 7,7
algorithm = bicubic
speed = 350

[output_pin led]
pin = PB13
shutdown_value = 0
value = 1

[filament_switch_sensor fsensor]
pause_on_runout = True
runout_gcode = 
	M118 Filament Runout Detected
	M600
insert_gcode = 
	M118 Filament Load Detected
	LOAD_FILAMENT
event_delay = 3.0
pause_delay = 0.5
switch_pin = PB30

[gcode_macro LOAD_FILAMENT]
gcode = 
	M117 Loading Filament...
	G92 E0.0
	G91
	G1 E40 F400
	G1 E30 F400
	G1 E60 F200
	G90
	G92 E0.0
	M400
	M117 Load Complete
	UPDATE_DELAYED_GCODE ID=clear_display DURATION=5

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	G90
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	G28
	
	{% if printer.configfile.settings.quad_gantry_level %}
	{% if printer.quad_gantry_level.applied == False %}
	QUAD_GANTRY_LEVEL
	G28 Z
	{% endif %}
	{% endif %}
	G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F{30 * 60}
	G4 P1000
	GET_POSITION
	
	
	G0 X{x_min} Y{y_min} Z{bound + 10} F{speed * 60}
	
	{% for i in range(iterations) %}
	
	G0 X{x_min} Y{y_min} F{speed * 60}
	G0 X{x_max} Y{y_max} F{speed * 60}
	G0 X{x_min} Y{y_min} F{speed * 60}
	G0 X{x_max} Y{y_min} F{speed * 60}
	G0 X{x_min} Y{y_max} F{speed * 60}
	G0 X{x_max} Y{y_min} F{speed * 60}
	
	
	G0 X{x_min} Y{y_min} F{speed * 60}
	G0 X{x_min} Y{y_max} F{speed * 60}
	G0 X{x_max} Y{y_max} F{speed * 60}
	G0 X{x_max} Y{y_min} F{speed * 60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
	
	
	G28 X Y
	
	G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F{30 * 60}
	G4 P1000
	GET_POSITION
	
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 83.8
shaper_type_y = mzv
shaper_freq_y = 75.0

[bed_mesh default]
version = 1
points = 
	1.182277, 1.034152, 1.155402, 1.162277, 1.141027, 1.093527
	1.229777, 1.204777, 1.190402, 1.179777, 1.174777, 1.147902
	1.217277, 1.220402, 1.201027, 1.206027, 1.180402, 1.282277
	1.222277, 1.189777, 1.182277, 1.167277, 1.164152, 1.143527
	1.146027, 1.152277, 1.134777, 1.151027, 1.206652, 1.117277
	1.100402, 1.102277, 1.112902, 1.132277, 1.133527, 1.107277
x_count = 6
y_count = 6
mesh_x_pps = 2
mesh_y_pps = 2
algo = lagrange
tension = 0.2
min_x = 40.715
max_x = 259.265
min_y = 38.99
max_y = 261.19
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 16] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 16] Device or resource busy: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
webhooks client 1964709968: New connection
webhooks client 1964709968: Client info {'program': 'Moonraker', 'version': 'v0.7.1-885-g4550664'}
mcu 'mcu': Unable to open serial port: [Errno 16] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 16] Device or resource busy: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 16] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 16] Device or resource busy: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
Loaded MCU 'mcu' 92 commands (v0.10.0-214-g98af5dff / gcc: (15:7-2018-q2-6) 7.3.1 20180622 (release) [ARM/embedded-7-branch revision 261907] binutils: (2.31.1-11+rpi1+11) 2.31.1)
MCU 'mcu' config: ADC_MAX=4095 CLOCK_FREQ=180000000 MCU=samd51p20a RESERVE_PINS_USB=PA24,PA25 RESERVE_PINS_crystal=PB22,PB23 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
mcu 'head0': Starting CAN connect
Created a socket
mcu 'head0': got {'oid': 4, 'next_clock': 1182608700, 'value': 14029, '#name': 'analog_in_state', '#sent_time': 1102.467472985, '#receive_time': 1102.5134345269998}
mcu 'head0': got {'oid': 6, 'next_clock': 1184048700, 'value': 32760, '#name': 'analog_in_state', '#sent_time': 1102.520714131, '#receive_time': 1102.5328139019998}
Loaded MCU 'head0' 107 commands (v0.11.0-109-g738ddaf3 / gcc: (15:7-2018-q2-6) 7.3.1 20180622 (release) [ARM/embedded-7-branch revision 261907] binutils: (2.31.1-11+rpi1+11) 2.31.1)
MCU 'head0' config: ADC_MAX=4095 BUS_PINS_i2c1=PB6,PB7 BUS_PINS_i2c1a=PB8,PB9 BUS_PINS_i2c2=PB10,PB11 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi3=PB4,PB5,PB3 CANBUS_FREQUENCY=500000 CLOCK_FREQ=72000000 MCU=stm32f103xe PWM_MAX=255 RECEIVE_WINDOW=192 RESERVE_PINS_CAN=PB8,PB9 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
mcu_temperature 'head0' nominal base=357.558140 slope=-767.441860
Sending MCU 'mcu' printer configuration...
Configured MCU 'mcu' (1024 moves)
MCU error during connect
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 180, in _connect
    cb()
  File "/home/pi/klipper/klippy/mcu.py", line 726, in _connect
    config_params = self._send_get_config()
  File "/home/pi/klipper/klippy/mcu.py", line 713, in _send_get_config
    self._name,))
mcu.error: Can not update MCU 'head0' config as it is shutdown
Build file /home/pi/klipper/klippy/../.config(3196): Mon Feb 20 23:55:44 2023
mcu 'head0': got {'oid': 4, 'next_clock': 1204208700, 'value': 14028, '#name': 'analog_in_state', '#sent_time': 1102.80716861, '#receive_time': 1102.813284735}
========= Last MCU build config =========
CONFIG_LOW_LEVEL_OPTIONS=y
# CONFIG_MACH_AVR is not set
# CONFIG_MACH_ATSAM is not set
# CONFIG_MACH_ATSAMD is not set
# CONFIG_MACH_LPC176X is not set
CONFIG_MACH_STM32=y
# CONFIG_MACH_HC32F460 is not set
# CONFIG_MACH_RP2040 is not set
# CONFIG_MACH_PRU is not set
# CONFIG_MACH_LINUX is not set
# CONFIG_MACH_SIMU is not set
CONFIG_BOARD_DIRECTORY="stm32"
CONFIG_MCU="stm32f103xe"
CONFIG_CLOCK_FREQ=72000000
CONFIG_FLASH_SIZE=0x10000
CONFIG_FLASH_BOOT_ADDRESS=0x8000000
CONFIG_RAM_START=0x20000000
CONFIG_RAM_SIZE=0x5000
CONFIG_STACK_SIZE=512
CONFIG_FLASH_APPLICATION_ADDRESS=0x8002000
CONFIG_STM32_SELECT=y
CONFIG_MACH_STM32F103=y
# CONFIG_MACH_STM32F207 is not set
# CONFIG_MACH_STM32F401 is not set
# CONFIG_MACH_STM32F405 is not set
# CONFIG_MACH_STM32F407 is not set
# CONFIG_MACH_STM32F429 is not set
# CONFIG_MACH_STM32F446 is not set
# CONFIG_MACH_STM32F031 is not set
# CONFIG_MACH_STM32F042 is not set
# CONFIG_MACH_STM32F070 is not set
# CONFIG_MACH_STM32F072 is not set
# CONFIG_MACH_STM32G070 is not set
# CONFIG_MACH_STM32G071 is not set
# CONFIG_MACH_STM32G0B0 is not set
# CONFIG_MACH_STM32G0B1 is not set
# CONFIG_MACH_STM32G431 is not set
# CONFIG_MACH_STM32H723 is not set
# CONFIG_MACH_STM32H743 is not set
# CONFIG_MACH_STM32H750 is not set
# CONFIG_MACH_STM32L412 is not set
# CONFIG_MACH_STM32F103x6 is not set
CONFIG_MACH_STM32F1=y
CONFIG_HAVE_STM32_USBFS=y
CONFIG_HAVE_STM32_CANBUS=y
# CONFIG_STM32F103GD_DISABLE_SWD is not set
CONFIG_STM32_DFU_ROM_ADDRESS=0
CONFIG_STM32_FLASH_START_2000=y
# CONFIG_STM32_FLASH_START_5000 is not set
# CONFIG_STM32_FLASH_START_7000 is not set
# CONFIG_STM32_FLASH_START_8000 is not set
# CONFIG_STM32_FLASH_START_8800 is not set
# CONFIG_STM32_FLASH_START_10000 is not set
# CONFIG_STM32_FLASH_START_800 is not set
# CONFIG_STM32_FLASH_START_1000 is not set
# CONFIG_STM32_FLASH_START_4000 is not set
# CONFIG_STM32_FLASH_START_0000 is not set
CONFIG_STM32_CLOCK_REF_8M=y
# CONFIG_STM32_CLOCK_REF_12M is not set
# CONFIG_STM32_CLOCK_REF_16M is not set
# CONFIG_STM32_CLOCK_REF_20M is not set
# CONFIG_STM32_CLOCK_REF_25M is not set
# CONFIG_STM32_CLOCK_REF_INTERNAL is not set
CONFIG_CLOCK_REF_FREQ=8000000
CONFIG_STM32F0_TRIM=16
# CONFIG_STM32_USB_PA11_PA12 is not set
# CONFIG_STM32_SERIAL_USART1 is not set
# CONFIG_STM32_SERIAL_USART1_ALT_PB7_PB6 is not set
# CONFIG_STM32_SERIAL_USART2 is not set
# CONFIG_STM32_SERIAL_USART2_ALT_PD6_PD5 is not set
# CONFIG_STM32_SERIAL_USART3 is not set
# CONFIG_STM32_SERIAL_USART3_ALT_PD9_PD8 is not set
# CONFIG_STM32_CANBUS_PA11_PA12 is not set
# CONFIG_STM32_CANBUS_PA11_PB9 is not set
CONFIG_STM32_MMENU_CANBUS_PB8_PB9=y
# CONFIG_STM32_MMENU_CANBUS_PD0_PD1 is not set
CONFIG_STM32_CANBUS_PB8_PB9=y
CONFIG_USB_VENDOR_ID=0x1d50
CONFIG_USB_DEVICE_ID=0x614e
CONFIG_USB_SERIAL_NUMBER="12345"
CONFIG_CANSERIAL=y
CONFIG_CANBUS=y
CONFIG_CANBUS_FREQUENCY=500000
CONFIG_CANBUS_FILTER=y
CONFIG_INITIAL_PINS=""
CONFIG_HAVE_GPIO=y
CONFIG_HAVE_GPIO_ADC=y
CONFIG_HAVE_GPIO_SPI=y
CONFIG_HAVE_GPIO_I2C=y
CONFIG_HAVE_GPIO_HARD_PWM=y
CONFIG_HAVE_GPIO_BITBANGING=y
CONFIG_HAVE_STRICT_TIMING=y
CONFIG_HAVE_CHIPID=y
CONFIG_HAVE_STEPPER_BOTH_EDGE=y
CONFIG_HAVE_BOOTLOADER_REQUEST=y
CONFIG_INLINE_STEPPER_HACK=y
=======================
Build file /home/pi/klipper/klippy/../out/klipper.dict(7665): Mon Feb 20 23:56:05 2023
Last MCU build version: v0.11.0-109-g738ddaf3
Last MCU build tools: gcc: (15:7-2018-q2-6) 7.3.1 20180622 (release) [ARM/embedded-7-branch revision 261907] binutils: (2.31.1-11+rpi1+11) 2.31.1
Last MCU build config: ADC_MAX=4095 BUS_PINS_i2c1=PB6,PB7 BUS_PINS_i2c1a=PB8,PB9 BUS_PINS_i2c2=PB10,PB11 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi3=PB4,PB5,PB3 CANBUS_FREQUENCY=500000 CLOCK_FREQ=72000000 MCU=stm32f103xe PWM_MAX=255 RECEIVE_WINDOW=192 RESERVE_PINS_CAN=PB8,PB9 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
Build file /home/pi/klipper/klippy/../out/klipper.elf(292976): Mon Feb 20 23:56:11 2023
mcu 'head0': got {'oid': 6, 'next_clock': 1205648700, 'value': 32760, '#name': 'analog_in_state', '#sent_time': 1102.80716861, '#receive_time': 1102.832410256}
mcu 'head0': got {'oid': 4, 'next_clock': 1225808700, 'value': 14026, '#name': 'analog_in_state', '#sent_time': 1102.80716861, '#receive_time': 1103.14379661}
mcu 'head0': got {'oid': 6, 'next_clock': 1227248700, 'value': 32447, '#name': 'analog_in_state', '#sent_time': 1102.80716861, '#receive_time': 1103.14487937}
mcu 'head0': got {'oid': 4, 'next_clock': 1247408700, 'value': 14026, '#name': 'analog_in_state', '#sent_time': 1102.80716861, '#receive_time': 1103.413040985}
mcu 'head0': got {'oid': 6, 'next_clock': 1248848700, 'value': 32760, '#name': 'analog_in_state', '#sent_time': 1102.80716861, '#receive_time': 1103.4332946309999}
mcu 'head0': got {'oid': 4, 'next_clock': 1269008700, 'value': 14026, '#name': 'analog_in_state', '#sent_time': 1102.80716861, '#receive_time': 1103.712295933}
mcu 'head0': got {'oid': 6, 'next_clock': 1270448700, 'value': 32760, '#name': 'analog_in_state', '#sent_time': 1102.80716861, '#receive_time': 1103.7325347869998}
mcu 'head0': got {'oid': 4, 'next_clock': 1290608700, 'value': 14029, '#name': 'analog_in_state', '#sent_time': 1103.773918245, '#receive_time': 1104.013163849}
mcu 'head0': got {'oid': 6, 'next_clock': 1292048700, 'value': 32760, '#name': 'analog_in_state', '#sent_time': 1103.773918245, '#receive_time': 1104.033425672}
mcu 'head0': got {'oid': 4, 'next_clock': 1312208700, 'value': 14026, '#name': 'analog_in_state', '#sent_time': 1103.773918245, '#receive_time': 1104.312441505}
mcu 'head0': got {'oid': 6, 'next_clock': 1313648700, 'value': 32760, '#name': 'analog_in_state', '#sent_time': 1103.773918245, '#receive_time': 1104.332682495}
mcu 'head0': got {'oid': 4, 'next_clock': 1333808700, 'value': 14024, '#name': 'analog_in_state', '#sent_time': 1103.773918245, '#receive_time': 1104.612916974}
mcu 'head0': got {'oid': 6, 'next_clock': 1335248700, 'value': 32760, '#name': 'analog_in_state', '#sent_time': 1103.773918245, '#receive_time': 1104.633162078}
mcu 'head0': got {'oid': 4, 'next_clock': 1355408700, 'value': 14024, '#name': 'analog_in_state', '#sent_time': 1104.758698245, '#receive_time': 1104.912561766}
mcu 'head0': got {'oid': 6, 'next_clock': 1356848700, 'value': 32760, '#name': 'analog_in_state', '#sent_time': 1104.758698245, '#receive_time': 1104.9328162969998}
mcu 'head0': got {'oid': 4, 'next_clock': 1377008700, 'value': 14027, '#name': 'analog_in_state', '#sent_time': 1104.758698245, '#receive_time': 1105.213040672}
mcu 'head0': got {'oid': 6, 'next_clock': 1378448700, 'value': 32760, '#name': 'analog_in_state', '#sent_time': 1104.758698245, '#receive_time': 1105.2332953589998}
mcu 'head0': got {'oid': 4, 'next_clock': 1398608700, 'value': 14025, '#name': 'analog_in_state', '#sent_time': 1104.758698245, '#receive_time': 1105.512298953}
mcu 'head0': got {'oid': 6, 'next_clock': 1400048700, 'value': 32760, '#name': 'analog_in_state', '#sent_time': 1104.758698245, '#receive_time': 1105.532793588}
Attempting MCU 'mcu' reset command
Attempting MCU 'head0' reset command
webhooks client 1964709968: Disconnected
Restarting printer
Start printer at Mon Apr 24 23:06:12 2023 (1682402773.0 1106.8)
===== Config file =====
[gcode_macro BED_MESH_CALIBRATE]
rename_existing = _BED_MESH_CALIBRATE
variable_led_enable = False
variable_status_macro = 'status_meshing'
variable_fuzz_enable = False
variable_fuzz_min = 0
variable_fuzz_max = 4
variable_probe_dock_enable = False
variable_attach_macro = 'Attach_Probe'
variable_detach_macro = 'Dock_Probe'
gcode = 
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}
	{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}
	{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (printer.configfile.settings.bed_mesh.probe_count[0]-2)  %}
	{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (printer.configfile.settings.bed_mesh.probe_count[1]-2)  %}
	{% set x_min = bed_mesh_min[0] %}
	{% set y_min = bed_mesh_min[1] %}
	{% set x_max = bed_mesh_max[0] %}
	{% set y_max = bed_mesh_max[1] %}
	
	{ action_respond_info("{} points, clamping to mesh [{!r} {!r}]".format(
	all_points | count,
	bed_mesh_min,
	bed_mesh_max,
	)) }
	
	{% if fuzz_enable == True %}
	{% if all_points %}
	{% set fuzz_range = range(fuzz_min * 100 | int, fuzz_max * 100 | int) %}
	{% set x_min = ( bed_mesh_min[0], ((all_points | map(attribute=0) | min - (fuzz_range | random / 100.0)) | default(bed_mesh_min[0])) ) | max %}
	{% set y_min = ( bed_mesh_min[1], ((all_points | map(attribute=1) | min - (fuzz_range | random / 100.0)) | default(bed_mesh_min[1])) ) | max %}
	{% set x_max = ( bed_mesh_max[0], ((all_points | map(attribute=0) | max + (fuzz_range | random / 100.0)) | default(bed_mesh_max[0])) ) | min %}
	{% set y_max = ( bed_mesh_max[1], ((all_points | map(attribute=1) | max + (fuzz_range | random / 100.0)) | default(bed_mesh_max[1])) ) | min %}
	{% endif %}
	{% else %}
	{% set x_min = [ bed_mesh_min[0], (all_points | map(attribute=0) | min | default(bed_mesh_min[0])) ] | max %}
	{% set y_min = [ bed_mesh_min[1], (all_points | map(attribute=1) | min | default(bed_mesh_min[1])) ] | max %}
	{% set x_max = [ bed_mesh_max[0], (all_points | map(attribute=0) | max | default(bed_mesh_max[0])) ] | min %}
	{% set y_max = [ bed_mesh_max[1], (all_points | map(attribute=1) | max | default(bed_mesh_max[1])) ] | min %}
	{% endif %}
	
	{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(
	(x_min, y_min),
	(x_max, y_max),
	)) }
	
	{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | int) + 2 %}
	{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | int) + 2 %}
	
	{% if (([points_x, points_y]|max) > 6) %}
	{% set algorithm = "bicubic" %}
	{% set min_points = 4 %}
	{% else %}
	{% set algorithm = "lagrange" %}
	{% set min_points = 3 %}
	{% endif %}
	{ action_respond_info( "Algorithm: {}".format(algorithm)) }
	
	{% set points_x = [points_x, min_points]|max  %}
	{% set points_y = [points_y, min_points]|max  %}
	{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }
	
	{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}
	{% set ref_index = (points_x * points_y / 2) | int %}
	{ action_respond_info( "Reference index: {}".format(ref_index) ) }
	{% else %}
	{% set ref_index = -1 %}
	{% endif %}
	
	{% if probe_dock_enable == True %}
	{attach_macro}
	{% endif %}
	
	{% if led_enable == True %}
	{status_macro}
	{% endif %}
	
	_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}
	
	{% if probe_dock_enable == True %}
	{detach_macro}
	{% endif %}

[gcode_macro ADAPTIVE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
variable_adaptive_enable = True
variable_z_height = 0.3
variable_tip_distance = 10
variable_purge_amount = 25
variable_flow_rate = 10
variable_x_default = 10
variable_y_default = 10
variable_size = 10
variable_distance_to_object_x = 15
variable_distance_to_object_y = 0
variable_travel_speed = 300
gcode = 
	{% if adaptive_enable == True %}
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set x_origin = (all_points | map(attribute=0) | min | default(x_default + distance_to_object_x + size)) - distance_to_object_x - size %}
	{% set y_origin = (all_points | map(attribute=1) | min | default(y_default + distance_to_object_y + size)) - distance_to_object_y - size %}
	{% set x_origin = ([x_origin, 0] | max) %}
	{% set y_origin = ([y_origin, 0] | max) %}
	{% else %}
	{% set x_origin = x_default | float %}
	{% set y_origin = y_default | float %}
	{% endif %}
	{% set purge_move_speed = 2.31 * size * flow_rate / (purge_amount * 2.405) %}
	{% set prepurge_speed = flow_rate / 2.405 %}
	{ action_respond_info( "x: " + x_origin|string + " y: " + y_origin|string + " purge_move_speed: " + purge_move_speed|string + " prepurge_speed: " + prepurge_speed|string ) }
	
	G92 E0
	G0 F{travel_speed*60}
	G90
	G0 X{x_origin} Y{y_origin+size/2}
	G0 Z{z_height}
	M83
	G1 E{tip_distance} F{prepurge_speed*60}
	G1 X{x_origin+size*0.289} Y{y_origin+size} E{purge_amount/4} F{purge_move_speed*60}
	G1 E-.5 F2100
	G0 Z{z_height*2}
	G0 X{x_origin+size*0.789} Y{y_origin+size}
	G0 Z{z_height}
	G1 E.5 F2100
	G1 X{x_origin+size*0.211} Y{y_origin} E{purge_amount/2} F{purge_move_speed*60}
	G1 E-.5 F2100
	G0 Z{z_height*2}
	G0 X{x_origin+size*0.711} Y{y_origin}
	G0 Z{z_height}
	G1 E.5 F2100
	G1 X{x_origin+size} Y{y_origin+size/2}  E{purge_amount/4} F{purge_move_speed*60}
	G1 E-.5 F2100
	G92 E0
	G0 Z{z_height*2}

[virtual_sdcard]
path = /home/pi/gcode_files

[pause_resume]

[gcode_macro PRINT_START]
variable_parameter_area_start = 0,0
variable_parameter_area_end = 0,0
gcode = 
	SET_FAN_SPEED FAN=chamber SPEED=.5
	SET_FAN_SPEED FAN=drivers SPEED=1
	{% set BED = params.BED|default(55)|int %}
	{% set EXTRUDER = params.EXTRUDER|default(205)|int %}
	G28 X Y
	
	M104 S170
	M140 S{BED}
	RESPOND PREFIX= MSG="Waiting for temperatures..."
	M117  Waiting for temperatures...
	M190 S{BED}
	RESPOND PREFIX= MSG="Waiting for thermal expansion..."
	M117 Waiting for thermal expansion...
	G4 P30000
	RESPOND PREFIX= MSG="Creating a mesh..."
	M117 Creating a mesh...
	G28
	QUAD_GANTRY_LEVEL
	BED_MESH_CALIBRATE
	
	M104 S{EXTRUDER}
	
	
	RESPOND PREFIX= MSG="Moving to prime position"
	M117 Moving to prime position
	G1 X25 Y-2 Z10 F5000.0
	{% if printer.extruder.temperature < params.EXTRUDER|float*0.98 %}
	M109 S{params.EXTRUDER|float*0.98}
	{% endif %}
	M104 S{EXTRUDER}
	G4 P30000
	ADAPTIVE_PURGE
	RESPOND PREFIX= MSG="Printing..."
	M117 Printing...
	M117

[gcode_macro PID_TUNE]
gcode = 
	G28
	G1 Z10 F7800
	M106 S64
	PID_CALIBRATE HEATER=extruder TARGET=245
	
	
	RESPOND PREFIX= MSG="Moving to prime position"
	M117 Moving to prime position
	G1 X25 Y-3 Z10 F5000.0
	{% if printer.extruder.temperature < params.EXTRUDER|float*0.98 %}
	M109 S{params.EXTRUDER|float*0.98}
	{% endif %}
	M104 S{EXTRUDER}
	
	RESPOND PREFIX= MSG="Priming the nozzle"
	M117 Priming the nozzle
	G92 E0
	G0 Z0.15
	G0 X55 Y-2 Z0.28 F1500.0
	G92 E0
	G1 X195 Y-2 Z0.28 F1500.0 E15
	G92 E0
	G10
	G1 Z2.0 F3000
	
	RESPOND PREFIX= MSG="Printing..."
	M117 Printing...
	M117

[display_status]

[gcode_macro END_PRINT]
gcode = 
	
	G91
	G1 E-2
	
	G90
	
	TURN_OFF_HEATERS
	
	G28 X Y

[gcode_macro PAUSE]
rename_existing = BASE_PAUSE
gcode = 
	
	SAVE_GCODE_STATE NAME=PAUSE_state
	BASE_PAUSE
	G91
	G1 E-{2} F2100
	G1 Z{10}
	G90
	G1 X{230} Y{230} F6000
	G91

[gcode_macro RESUME]
rename_existing = BASE_RESUME
gcode = 
	G91
	G1 E{s} F2100
	G90
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
	BASE_RESUME

[gcode_macro CANCEL_PRINT]
rename_existing = BASE_CANCEL_PRINT
gcode = 
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	SDCARD_RESET_FILE
	BASE_CANCEL_PRINT
	
	G91
	G1 Z10 F8000
	G90
	G1 X0 Y222 E-3 F8000
	DISABLE_MOTORS
	M106 S0
	M117 Print Canceled

[exclude_object]

[gcode_macro M486]
gcode = 
	
	
	
	
	
	
	
	
	
	
	
	{% if 'exclude_object' not in printer %}
	{action_raise_error("[exclude_object] is not enabled")}
	{% endif %}
	
	{% if 'T' in params %}
	EXCLUDE_OBJECT RESET=1
	
	{% for i in range(params.T | int) %}
	EXCLUDE_OBJECT_DEFINE NAME={i}
	{% endfor %}
	{% endif %}
	
	{% if 'C' in params %}
	EXCLUDE_OBJECT CURRENT=1
	{% endif %}
	
	{% if 'P' in params %}
	EXCLUDE_OBJECT NAME={params.P}
	{% endif %}
	
	{% if 'S' in params %}
	{% if params.S == '-1' %}
	{% if printer.exclude_object.current_object %}
	EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
	{% endif %}
	{% else %}
	EXCLUDE_OBJECT_START NAME={params.S}
	{% endif %}
	{% endif %}
	
	{% if 'U' in params %}
	EXCLUDE_OBJECT RESET=1 NAME={params.U}
	{% endif %}

[gcode_macro GET_TIMELAPSE_SETUP]
description = Print the Timelapse setup
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% set output_txt = ["Timelapse Setup:"] %}
	{% set _dummy = output_txt.append("enable: %s" % tl.enable) %}
	{% set _dummy = output_txt.append("park: %s" % tl.park.enable) %}
	{% if tl.park.enable %}
	{% set _dummy = output_txt.append("park position: %s time: %s s" % (tl.park.pos, tl.park.time)) %}
	{% set _dummy = output_txt.append("park cord x:%s y:%s dz:%s" % (tl.park.coord.x, tl.park.coord.y, tl.park.coord.dz)) %}
	{% set _dummy = output_txt.append("travel speed: %s mm/s" % tl.speed.travel) %}
	{% endif %}
	{% set _dummy = output_txt.append("fw_retract: %s" % tl.extruder.fw_retract) %}
	{% if not tl.extruder.fw_retract %}
	{% set _dummy = output_txt.append("retract: %s mm speed: %s mm/s" % (tl.extruder.retract, tl.speed.retract)) %}
	{% set _dummy = output_txt.append("extrude: %s mm speed: %s mm/s" % (tl.extruder.extrude, tl.speed.extrude)) %}
	{% endif %}
	{% set _dummy = output_txt.append("verbose: %s" % tl.verbose) %}
	{action_respond_info(output_txt|join("\n"))}

[gcode_macro _SET_TIMELAPSE_SETUP]
description = Set user parameters for timelapse
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	
	{% set min = printer.toolhead.axis_minimum %}
	{% set max = printer.toolhead.axis_maximum %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	{% set park = {'min'   : {'x': (min.x / 1.42)|round(3) if round_bed else min.x|round(3),
	'y': (min.y / 1.42)|round(3) if round_bed else min.y|round(3)},
	'max'   : {'x': (max.x / 1.42)|round(3) if round_bed else max.x|round(3),
	'y': (max.y / 1.42)|round(3) if round_bed else max.y|round(3)},
	'center': {'x': (max.x-(max.x-min.x)/2)|round(3),
	'y': (max.y-(max.y-min.y)/2)|round(3)}} %}
	
	{% if params.ENABLE %}
	{% if params.ENABLE|lower is in ['true', 'false'] %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=enable VALUE={True if params.ENABLE|lower == 'true' else False}
	{% else %}
	{action_raise_error("ENABLE=%s not supported. Allowed values are [True, False]" % params.ENABLE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.VERBOSE %}
	{% if params.VERBOSE|lower is in ['true', 'false'] %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=verbose VALUE={True if params.VERBOSE|lower == 'true' else False}
	{% else %}
	{action_raise_error("VERBOSE=%s not supported. Allowed values are [True, False]" % params.VERBOSE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_X %}
	{% if params.CUSTOM_POS_X|float >= min.x and params.CUSTOM_POS_X|float <= max.x %}
	{% set _dummy = tl.park.custom.update({'x':params.CUSTOM_POS_X|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_X=%s must be within [%s - %s]" % (params.CUSTOM_POS_X, min.x, max.x))}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_Y %}
	{% if params.CUSTOM_POS_Y|float >= min.y and params.CUSTOM_POS_Y|float <= max.y %}
	{% set _dummy = tl.park.custom.update({'y':params.CUSTOM_POS_Y|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_Y=%s must be within [%s - %s]" % (params.CUSTOM_POS_Y, min.y, max.y))}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_DZ %}
	{% if params.CUSTOM_POS_DZ|float >= min.z and params.CUSTOM_POS_DZ|float <= max.z %}
	{% set _dummy = tl.park.custom.update({'dz':params.CUSTOM_POS_DZ|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_DZ=%s must be within [%s - %s]" % (params.CUSTOM_POS_DZ, min.z, max.z))}
	{% endif %}
	{% endif %}
	{% if params.PARK_ENABLE %}
	{% if params.PARK_ENABLE|lower is in ['true', 'false'] %}
	{% set _dummy = tl.park.update({'enable':True if params.PARK_ENABLE|lower == 'true' else False}) %}
	{% else %}
	{action_raise_error("PARK_ENABLE=%s not supported. Allowed values are [True, False]" % params.PARK_ENABLE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.PARK_POS %}
	{% if params.PARK_POS|lower is in ['center','front_left','front_right','back_left','back_right','custom','x_only','y_only'] %}
	{% set dic = {'center'      : {'x': park.center.x   , 'y': park.center.y   , 'dz': 1                },
	'front_left'  : {'x': park.min.x      , 'y': park.min.y      , 'dz': 0                },
	'front_right' : {'x': park.max.x      , 'y': park.min.y      , 'dz': 0                },
	'back_left'   : {'x': park.min.x      , 'y': park.max.y      , 'dz': 0                },
	'back_right'  : {'x': park.max.x      , 'y': park.max.y      , 'dz': 0                },
	'custom'      : {'x': tl.park.custom.x, 'y': tl.park.custom.y, 'dz': tl.park.custom.dz},
	'x_only'      : {'x': tl.park.custom.x, 'y': 'none'          , 'dz': tl.park.custom.dz},
	'y_only'      : {'x': 'none'          , 'y': tl.park.custom.y, 'dz': tl.park.custom.dz}} %}
	{% set _dummy = tl.park.update({'pos':params.PARK_POS|lower}) %}
	{% set _dummy = tl.park.update({'coord':dic[tl.park.pos]}) %}
	{% else %}
	{action_raise_error("PARK_POS=%s not supported. Allowed values are [CENTER, FRONT_LEFT, FRONT_RIGHT, BACK_LEFT, BACK_RIGHT, CUSTOM, X_ONLY, Y_ONLY]"
	% params.PARK_POS|upper)}
	{% endif %}
	{% endif %}
	{% if params.PARK_TIME %}
	{% if params.PARK_TIME|float >= 0.0 %}
	{% set _dummy = tl.park.update({'time':params.PARK_TIME|float|round(3)}) %}
	{% else %}
	{action_raise_error("PARK_TIME=%s must be a positive number" % params.PARK_TIME)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=park VALUE="{tl.park}"
	{% if params.TRAVEL_SPEED %}
	{% if params.TRAVEL_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'travel':params.TRAVEL_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("TRAVEL_SPEED=%s must be larger than 0" % params.TRAVEL_SPEED)}
	{% endif %}
	{% endif %}
	{% if params.RETRACT_SPEED %}
	{% if params.RETRACT_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'retract':params.RETRACT_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("RETRACT_SPEED=%s must be larger than 0" % params.RETRACT_SPEED)}
	{% endif %}
	{% endif %}
	{% if params.EXTRUDE_SPEED %}
	{% if params.EXTRUDE_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'extrude':params.EXTRUDE_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("EXTRUDE_SPEED=%s must be larger than 0" % params.EXTRUDE_SPEED)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=speed VALUE="{tl.speed}"
	{% if params.EXTRUDE_DISTANCE %}
	{% if params.EXTRUDE_DISTANCE|float >= 0.0 %}
	{% set _dummy = tl.extruder.update({'extrude':params.EXTRUDE_DISTANCE|float|round(3)}) %}
	{% else %}
	{action_raise_error("EXTRUDE_DISTANCE=%s must be specified as positiv number" % params.EXTRUDE_DISTANCE)}
	{% endif %}
	{% endif %}
	{% if params.RETRACT_DISTANCE %}
	{% if params.RETRACT_DISTANCE|float >= 0.0 %}
	{% set _dummy = tl.extruder.update({'retract':params.RETRACT_DISTANCE|float|round(3)}) %}
	{% else %}
	{action_raise_error("RETRACT_DISTANCE=%s must be specified as positiv number" % params.RETRACT_DISTANCE)}
	{% endif %}
	{% endif %}
	{% if params.FW_RETRACT %}
	{% if params.FW_RETRACT|lower is in ['true', 'false'] %}
	{% if 'firmware_retraction' in printer.configfile.settings %}
	{% set _dummy = tl.extruder.update({'fw_retract': True if params.FW_RETRACT|lower == 'true' else False}) %}
	{% else %}
	{% set _dummy = tl.extruder.update({'fw_retract':False}) %}
	{% if params.FW_RETRACT|capitalize == 'True' %}
	{action_raise_error("[firmware_retraction] not defined in printer.cfg. Can not enable fw_retract")}
	{% endif %}
	{% endif %}
	{% else %}
	{action_raise_error("FW_RETRACT=%s not supported. Allowed values are [True, False]" % params.FW_RETRACT|capitalize)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=extruder VALUE="{tl.extruder}"
	{% if printer.configfile.settings['gcode_macro pause'] is defined %}
	{% set _dummy = tl.macro.update({'pause': printer.configfile.settings['gcode_macro pause'].rename_existing}) %}
	{% endif %}
	{% if printer.configfile.settings['gcode_macro resume'] is defined %}
	{% set _dummy = tl.macro.update({'resume': printer.configfile.settings['gcode_macro resume'].rename_existing}) %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=macro VALUE="{tl.macro}"

[gcode_macro TIMELAPSE_TAKE_FRAME]
description = Take Timelapse shoot
variable_enable = False
variable_takingframe = False
variable_park = {'enable': False,
	'pos'   : 'center',
	'time'  : 0.1,
	'custom': {'x': 0, 'y': 0, 'dz': 0},
	'coord' : {'x': 0, 'y': 0, 'dz': 0}}
variable_extruder = {'fw_retract': False,
	'retract': 1.0,
	'extrude': 1.0}
variable_speed = {'travel': 100,
	'retract': 15,
	'extrude': 15}
variable_verbose = True
variable_restore = {'absolute': {'coordinates': True, 'extrude': True}, 'speed': 1500, 'e':0, 'factor': {'speed': 1.0, 'extrude': 1.0}}
variable_macro = {'pause': 'PAUSE', 'resume': 'RESUME'}
variable_is_paused = False
gcode = 
	{% set hyperlapse = True if params.HYPERLAPSE and params.HYPERLAPSE|lower =='true' else False %}
	{% if enable %}
	{% if (hyperlapse and printer['gcode_macro HYPERLAPSE'].run) or
	(not hyperlapse and not printer['gcode_macro HYPERLAPSE'].run) %}
	{% if park.enable %}
	{% set pos = {'x': 'X' + park.coord.x|string if park.pos != 'y_only' else '',
	'y': 'Y' + park.coord.y|string if park.pos != 'x_only' else '',
	'z': 'Z'+ [printer.gcode_move.gcode_position.z + park.coord.dz, printer.toolhead.axis_maximum.z]|min|string} %}
	{% set restore = {'absolute': {'coordinates': printer.gcode_move.absolute_coordinates,
	'extrude'    : printer.gcode_move.absolute_extrude},
	'speed'   : printer.gcode_move.speed,
	'e'       : printer.gcode_move.gcode_position.e,
	'factor'  : {'speed'  : printer.gcode_move.speed_factor,
	'extrude': printer.gcode_move.extrude_factor}} %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=restore VALUE="{restore}"
	{% if not printer[printer.toolhead.extruder].can_extrude %}
	{% if verbose %}{action_respond_info("Timelapse: Warning, minimum extruder temperature not reached!")}{% endif %}
	{% else %}
	{% if extruder.fw_retract %}
	G10
	{% else %}
	M83
	G0 E-{extruder.retract} F{speed.retract * 60}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=is_paused VALUE=True
	{macro.pause}
	SET_GCODE_OFFSET X=0 Y=0
	G90
	{% if "xyz" not in printer.toolhead.homed_axes %}
	{% if verbose %}{action_respond_info("Timelapse: Warning, axis not homed yet!")}{% endif %}
	{% else %}
	G0 {pos.x} {pos.y} {pos.z} F{speed.travel * 60}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=takingframe VALUE=True
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_TAKE_FRAME DURATION=0.5
	M400
	{% endif %}
	_TIMELAPSE_NEW_FRAME HYPERLAPSE={hyperlapse}
	{% endif %}
	{% else %}
	{% if verbose %}{action_respond_info("Timelapse: disabled, take frame ignored")}{% endif %}
	{% endif %}

[gcode_macro _TIMELAPSE_NEW_FRAME]
description = action call for timelapse shoot. must be a seperate macro
gcode = 
	{action_call_remote_method("timelapse_newframe",
	macropark=printer['gcode_macro TIMELAPSE_TAKE_FRAME'].park,
	hyperlapse=params.HYPERLAPSE)}

[delayed_gcode _WAIT_TIMELAPSE_TAKE_FRAME]
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% set factor = {'speed': printer.gcode_move.speed_factor, 'extrude': printer.gcode_move.extrude_factor} %}
	{% if tl.takingframe %}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_TAKE_FRAME DURATION=0.5
	{% else %}
	{tl.macro.resume} VELOCITY={tl.speed.travel}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=is_paused VALUE=False
	{% if not printer[printer.toolhead.extruder].can_extrude %}
	{action_respond_info("Timelapse: Warning minimum extruder temperature not reached!")}
	{% else %}
	{% if tl.extruder.fw_retract %}
	G11
	{% else %}
	G0 E{tl.extruder.extrude} F{tl.speed.extrude * 60}
	G0 F{tl.restore.speed}
	{% if tl.restore.absolute.extrude %}
	M82
	G92 E{tl.restore.e}
	{% endif %}
	{% endif %}
	{% endif %}
	{% if tl.restore.factor.speed   != factor.speed   %} M220 S{(factor.speed*100)|round(0)}   {% endif %}
	{% if tl.restore.factor.extrude != factor.extrude %} M221 S{(factor.extrude*100)|round(0)} {% endif %}
	{% if not tl.restore.absolute.coordinates %} G91 {% endif %}
	{% endif %}

[gcode_macro HYPERLAPSE]
description = Start/Stop a hyperlapse recording
variable_cycle = 0
variable_run = False
gcode = 
	{% set cycle = params.CYCLE|default(30)|int %}
	{% if params.ACTION and params.ACTION|lower == 'start' %}
	{action_respond_info("Hyperlapse: frames started (Cycle %d sec)" % cycle)}
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=run VALUE=True
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=cycle VALUE={cycle}
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION={cycle}
	TIMELAPSE_TAKE_FRAME HYPERLAPSE=True
	{% elif params.ACTION and params.ACTION|lower == 'stop' %}
	{% if run %}{action_respond_info("Hyperlapse: frames stopped")}{% endif %}
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=run VALUE=False
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION=0
	{% else %}
	{action_raise_error("Hyperlapse: No valid input parameter
	Use:
	- HYPERLAPSE ACTION=START [CYCLE=time]
	- HYPERLAPSE ACTION=STOP")}
	{% endif %}

[delayed_gcode _HYPERLAPSE_LOOP]
gcode = 
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION={printer["gcode_macro HYPERLAPSE"].cycle}
	TIMELAPSE_TAKE_FRAME HYPERLAPSE=True

[gcode_macro TIMELAPSE_RENDER]
description = Render Timelapse video and wait for the result
variable_render = False
variable_run_identifier = 0
gcode = 
	{action_respond_info("Timelapse: Rendering started")}
	{action_call_remote_method("timelapse_render", byrendermacro="True")}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_RENDER VARIABLE=render VALUE=True
	{printer.configfile.settings['gcode_macro pause'].rename_existing}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_RENDER DURATION=0.5

[delayed_gcode _WAIT_TIMELAPSE_RENDER]
gcode = 
	{% set ri = printer['gcode_macro TIMELAPSE_RENDER'].run_identifier % 4 %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_RENDER VARIABLE=run_identifier VALUE={ri + 1}
	{% if printer['gcode_macro TIMELAPSE_RENDER'].render %}
	M117 Rendering {['-','\\','|','/'][ri]}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_RENDER DURATION=0.5
	{% else %}
	{action_respond_info("Timelapse: Rendering finished")}
	M117
	{printer.configfile.settings['gcode_macro resume'].rename_existing}
	{% endif %}

[gcode_macro TEST_STREAM_DELAY]
description = Helper macro to find stream and park delay
gcode = 
	{% set min = printer.toolhead.axis_minimum %}
	{% set max = printer.toolhead.axis_maximum %}
	{% set act = printer.toolhead.position %}
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% if act.z > 5.0 %}
	G0 X{min.x + 5.0} F{tl.speed.travel|int * 60}
	G0 X{(max.x-min.x)/2}
	G4 P{tl.park.time|float * 1000}
	_TIMELAPSE_NEW_FRAME HYPERLAPSE=FALSE
	G0 X{max.x - 5.0}
	{% else %}
	{action_raise_error("Toolhead z %.3f to low. Please place head above z = 5.0" % act.z)}
	{% endif %}

[force_move]
enable_force_move = True

[mcu head0]
canbus_uuid = 20195bac64c4

[temperature_sensor CANBOARD]
sensor_type = temperature_mcu
sensor_mcu = head0

[idle_timeout]
timeout = 100000

[mcu]
serial = /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00

[adc_scaled vref_scaled]
vref_pin = PB5
vssa_pin = PB4

[temperature_sensor pi_cpu]
sensor_type = temperature_host
gcode_id = P

[printer]
kinematics = corexy
max_velocity = 600
max_accel = 15000
max_accel_to_decel = 10000
square_corner_velocity = 10
max_z_velocity = 50
max_z_accel = 180

[stepper_x]
step_pin = PC25
dir_pin = !PB29
enable_pin = !PC28
rotation_distance = 40
microsteps = 32
endstop_pin = ^!head0:PB12
position_endstop = 303
position_max = 303
position_min = 0
homing_speed = 100

[tmc2209 stepper_x]
uart_pin = PA1
tx_pin = PA0
select_pins = PD0
uart_address = 1
run_current = 1
sense_resistor = 0.056

[stepper_y]
step_pin = PC24
dir_pin = !PB28
enable_pin = !PC28
rotation_distance = 40
microsteps = 32
endstop_pin = ^PC4
position_endstop = 308
position_max = 308
position_min = -3
homing_speed = 100
homing_retract_dist = 30

[tmc2209 stepper_y]
uart_pin = PA1
tx_pin = PA0
select_pins = PD0
uart_address = 2
run_current = 1
sense_resistor = 0.056

[stepper_z3]
step_pin = PC26
dir_pin = PB3
enable_pin = !PC28
rotation_distance = 8
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PA1
tx_pin = PA0
select_pins = PD0
uart_address = 0
run_current = 1.1
sense_resistor = 0.056
driver_tbl = 2
driver_hend = 3
driver_hstrt = 4
driver_toff = 4

[stepper_z]
step_pin = PC19
dir_pin = !PD20
enable_pin = !PC28
rotation_distance = 8
microsteps = 32
endstop_pin = probe:z_virtual_endstop
position_max = 390
position_min = -15
homing_speed = 20

[tmc2209 stepper_z]
uart_pin = PA1
tx_pin = PA0
uart_address = 3
select_pins = PD0
run_current = 1.1
sense_resistor = 0.056
driver_tbl = 2
driver_hend = 3
driver_hstrt = 4
driver_toff = 4

[stepper_z1]
step_pin = PC16
dir_pin = PD21
enable_pin = !PC28
rotation_distance = 8
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PA1
tx_pin = PA0
uart_address = 0
select_pins = !PD0
run_current = 1.1
sense_resistor = 0.056
driver_tbl = 2
driver_hend = 3
driver_hstrt = 4
driver_toff = 4

[stepper_z2]
step_pin = PC30
dir_pin = !PB0
enable_pin = !PC28
rotation_distance = 8
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PA1
tx_pin = PA0
uart_address = 1
select_pins = !PD0
run_current = 1.1
sense_resistor = 0.056
driver_tbl = 2
driver_hend = 3
driver_hstrt = 4
driver_toff = 4

[extruder]
step_pin = head0:PB3
dir_pin = head0:PB4
enable_pin = !head0:PB5
heater_pin = head0:PA6
microsteps = 16
full_steps_per_rotation = 200
rotation_distance = 22.67895
gear_ratio = 50:8
nozzle_diameter = 0.500
filament_diameter = 1.750
sensor_type = ATC Semitec 104GT-2
sensor_pin = head0:PA0
pullup_resistor = 2200
min_extrude_temp = 170
max_extrude_cross_section = 5
min_temp = -100
max_temp = 325
control = pid
pid_kp = 24.502
pid_ki = 1.027
pid_kd = 146.095

[tmc2209 extruder]
uart_pin = head0:PA9
interpolate = True
run_current = .3
sense_resistor = 0.110
driver_tbl = 2
driver_hend = 3
driver_hstrt = 5
driver_toff = 6

[heater_bed]
heater_pin = PB17
sensor_type = EPCOS 100K B57560G104F
sensor_pin = vref_scaled:PC2
pullup_resistor = 2200
min_temp = -100
max_temp = 130
max_power = 0.8
control = pid
pid_kp = 20.846
pid_ki = 1.241
pid_kd = 87.555

[fan]
pin = PC10
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend]
pin = head0:PA7
heater = extruder
heater_temp = 45
fan_speed = 1

[controller_fan drivers]
pin = PA11
heater = extruder,heater_bed
fan_speed = 1

[fan_generic chamber]
pin = PB11

[bltouch]
sensor_pin = PC31
control_pin = PB1
stow_on_each_sample = false
probe_with_touch_mode = True
x_offset = 21.765
y_offset = 0
speed = 7
lift_speed = 20
samples = 2
samples_result = average
sample_retract_dist = 5.0
samples_tolerance = 0.01
samples_tolerance_retries = 3
z_offset = 1.265

[safe_z_home]
home_xy_position = 150,150
speed = 350
z_hop = 6
z_hop_speed = 15

[quad_gantry_level]
gantry_corners = 
	-68,-16
	368,355
points = 
	50,50
	50,250
	250,250
	250,50
speed = 350
horizontal_move_z = 10
retries = 8
retry_tolerance = 0.015
max_adjust = 16

[bed_mesh]
mesh_min = 25,25
mesh_max = 275,275
probe_count = 7,7
algorithm = bicubic
speed = 350

[output_pin led]
pin = PB13
shutdown_value = 0
value = 1

[filament_switch_sensor fsensor]
pause_on_runout = True
runout_gcode = 
	M118 Filament Runout Detected
	M600
insert_gcode = 
	M118 Filament Load Detected
	LOAD_FILAMENT
event_delay = 3.0
pause_delay = 0.5
switch_pin = PB30

[gcode_macro LOAD_FILAMENT]
gcode = 
	M117 Loading Filament...
	G92 E0.0
	G91
	G1 E40 F400
	G1 E30 F400
	G1 E60 F200
	G90
	G92 E0.0
	M400
	M117 Load Complete
	UPDATE_DELAYED_GCODE ID=clear_display DURATION=5

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	G90
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	G28
	
	{% if printer.configfile.settings.quad_gantry_level %}
	{% if printer.quad_gantry_level.applied == False %}
	QUAD_GANTRY_LEVEL
	G28 Z
	{% endif %}
	{% endif %}
	G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F{30 * 60}
	G4 P1000
	GET_POSITION
	
	
	G0 X{x_min} Y{y_min} Z{bound + 10} F{speed * 60}
	
	{% for i in range(iterations) %}
	
	G0 X{x_min} Y{y_min} F{speed * 60}
	G0 X{x_max} Y{y_max} F{speed * 60}
	G0 X{x_min} Y{y_min} F{speed * 60}
	G0 X{x_max} Y{y_min} F{speed * 60}
	G0 X{x_min} Y{y_max} F{speed * 60}
	G0 X{x_max} Y{y_min} F{speed * 60}
	
	
	G0 X{x_min} Y{y_min} F{speed * 60}
	G0 X{x_min} Y{y_max} F{speed * 60}
	G0 X{x_max} Y{y_max} F{speed * 60}
	G0 X{x_max} Y{y_min} F{speed * 60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
	
	
	G28 X Y
	
	G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F{30 * 60}
	G4 P1000
	GET_POSITION
	
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 83.8
shaper_type_y = mzv
shaper_freq_y = 75.0

[bed_mesh default]
version = 1
points = 
	1.182277, 1.034152, 1.155402, 1.162277, 1.141027, 1.093527
	1.229777, 1.204777, 1.190402, 1.179777, 1.174777, 1.147902
	1.217277, 1.220402, 1.201027, 1.206027, 1.180402, 1.282277
	1.222277, 1.189777, 1.182277, 1.167277, 1.164152, 1.143527
	1.146027, 1.152277, 1.134777, 1.151027, 1.206652, 1.117277
	1.100402, 1.102277, 1.112902, 1.132277, 1.133527, 1.107277
x_count = 6
y_count = 6
mesh_x_pps = 2
mesh_y_pps = 2
algo = lagrange
tension = 0.2
min_x = 40.715
max_x = 259.265
min_y = 38.99
max_y = 261.19
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 16] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 16] Device or resource busy: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
webhooks client 1970779216: New connection
webhooks client 1970779216: Client info {'program': 'Moonraker', 'version': 'v0.7.1-885-g4550664'}
mcu 'mcu': Unable to open serial port: [Errno 16] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 16] Device or resource busy: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 16] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 16] Device or resource busy: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
Loaded MCU 'mcu' 92 commands (v0.10.0-214-g98af5dff / gcc: (15:7-2018-q2-6) 7.3.1 20180622 (release) [ARM/embedded-7-branch revision 261907] binutils: (2.31.1-11+rpi1+11) 2.31.1)
MCU 'mcu' config: ADC_MAX=4095 CLOCK_FREQ=180000000 MCU=samd51p20a RESERVE_PINS_USB=PA24,PA25 RESERVE_PINS_crystal=PB22,PB23 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
mcu 'head0': Starting CAN connect
Created a socket
Loaded MCU 'head0' 107 commands (v0.11.0-109-g738ddaf3 / gcc: (15:7-2018-q2-6) 7.3.1 20180622 (release) [ARM/embedded-7-branch revision 261907] binutils: (2.31.1-11+rpi1+11) 2.31.1)
MCU 'head0' config: ADC_MAX=4095 BUS_PINS_i2c1=PB6,PB7 BUS_PINS_i2c1a=PB8,PB9 BUS_PINS_i2c2=PB10,PB11 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi3=PB4,PB5,PB3 CANBUS_FREQUENCY=500000 CLOCK_FREQ=72000000 MCU=stm32f103xe PWM_MAX=255 RECEIVE_WINDOW=192 RESERVE_PINS_CAN=PB8,PB9 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
mcu_temperature 'head0' nominal base=357.558140 slope=-767.441860
Sending MCU 'mcu' printer configuration...
Configured MCU 'mcu' (1024 moves)
Sending MCU 'head0' printer configuration...
Configured MCU 'head0' (1024 moves)
Enabling TMC virtual enable for 'stepper_x'
Enabling TMC virtual enable for 'stepper_y'
Enabling TMC virtual enable for 'stepper_z3'
Enabling TMC virtual enable for 'stepper_z'
Enabling TMC virtual enable for 'stepper_z1'
Enabling TMC virtual enable for 'stepper_z2'
Starting heater checks for heater_bed
Failed to verify BLTouch probe is raised; retrying.
Failed to verify BLTouch probe is raised; retrying.
BLTouch raise probe error: BLTouch failed to raise probe
bed_mesh: generated points
Index |  Tool Adjusted  |   Probe
  0   | (3.2, 25.0)     | (25.0, 25.0)
  1   | (44.9, 25.0)    | (66.7, 25.0)
  2   | (86.6, 25.0)    | (108.3, 25.0)
  3   | (128.2, 25.0)   | (150.0, 25.0)
  4   | (169.9, 25.0)   | (191.6, 25.0)
  5   | (211.5, 25.0)   | (233.3, 25.0)
  6   | (253.2, 25.0)   | (275.0, 25.0)
  7   | (253.2, 66.7)   | (275.0, 66.7)
  8   | (211.5, 66.7)   | (233.3, 66.7)
  9   | (169.9, 66.7)   | (191.6, 66.7)
  10  | (128.2, 66.7)   | (150.0, 66.7)
  11  | (86.6, 66.7)    | (108.3, 66.7)
  12  | (44.9, 66.7)    | (66.7, 66.7)
  13  | (3.2, 66.7)     | (25.0, 66.7)
  14  | (3.2, 108.3)    | (25.0, 108.3)
  15  | (44.9, 108.3)   | (66.7, 108.3)
  16  | (86.6, 108.3)   | (108.3, 108.3)
  17  | (128.2, 108.3)  | (150.0, 108.3)
  18  | (169.9, 108.3)  | (191.6, 108.3)
  19  | (211.5, 108.3)  | (233.3, 108.3)
  20  | (253.2, 108.3)  | (275.0, 108.3)
  21  | (253.2, 150.0)  | (275.0, 150.0)
  22  | (211.5, 150.0)  | (233.3, 150.0)
  23  | (169.9, 150.0)  | (191.6, 150.0)
  24  | (128.2, 150.0)  | (150.0, 150.0)
  25  | (86.6, 150.0)   | (108.3, 150.0)
  26  | (44.9, 150.0)   | (66.7, 150.0)
  27  | (3.2, 150.0)    | (25.0, 150.0)
  28  | (3.2, 191.6)    | (25.0, 191.6)
  29  | (44.9, 191.6)   | (66.7, 191.6)
  30  | (86.6, 191.6)   | (108.3, 191.6)
  31  | (128.2, 191.6)  | (150.0, 191.6)
  32  | (169.9, 191.6)  | (191.6, 191.6)
  33  | (211.5, 191.6)  | (233.3, 191.6)
  34  | (253.2, 191.6)  | (275.0, 191.6)
  35  | (253.2, 233.3)  | (275.0, 233.3)
  36  | (211.5, 233.3)  | (233.3, 233.3)
  37  | (169.9, 233.3)  | (191.6, 233.3)
  38  | (128.2, 233.3)  | (150.0, 233.3)
  39  | (86.6, 233.3)   | (108.3, 233.3)
  40  | (44.9, 233.3)   | (66.7, 233.3)
  41  | (3.2, 233.3)    | (25.0, 233.3)
  42  | (3.2, 275.0)    | (25.0, 275.0)
  43  | (44.9, 275.0)   | (66.7, 275.0)
  44  | (86.6, 275.0)   | (108.3, 275.0)
  45  | (128.2, 275.0)  | (150.0, 275.0)
  46  | (169.9, 275.0)  | (191.6, 275.0)
  47  | (211.5, 275.0)  | (233.3, 275.0)
  48  | (253.2, 275.0)  | (275.0, 275.0)
Starting heater checks for extruder
Stats 1130.6: gcodein=0  mcu: mcu_awake=0.003 mcu_task_avg=0.000004 mcu_task_stddev=0.000006 bytes_write=3528 bytes_read=7042 bytes_retransmit=9 bytes_invalid=0 send_seq=292 receive_seq=292 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179999332 head0: mcu_awake=0.008 mcu_task_avg=0.000012 mcu_task_stddev=0.000023 bytes_write=1216 bytes_read=4928 bytes_retransmit=0 bytes_invalid=0 send_seq=136 receive_seq=136 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72002201 adj=72011203  CANBOARD: temp=28.7 pi_cpu: temp=49.4 heater_bed: target=0 temp=19.8 pwm=0.000 sysload=1.36 cputime=31.276 memavail=637380 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
webhooks: registering remote method 'shutdown_machine' for connection id: 1970779216
webhooks: registering remote method 'reboot_machine' for connection id: 1970779216
webhooks: registering remote method 'pause_job_queue' for connection id: 1970779216
webhooks: registering remote method 'start_job_queue' for connection id: 1970779216
webhooks: registering remote method 'timelapse_newframe' for connection id: 1970779216
webhooks: registering remote method 'timelapse_saveFrames' for connection id: 1970779216
webhooks: registering remote method 'timelapse_render' for connection id: 1970779216
Stats 1131.6: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000003 mcu_task_stddev=0.000004 bytes_write=3534 bytes_read=7194 bytes_retransmit=9 bytes_invalid=0 send_seq=293 receive_seq=293 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179999022 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1222 bytes_read=5078 bytes_retransmit=0 bytes_invalid=0 send_seq=137 receive_seq=137 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72002183 adj=71988991  CANBOARD: temp=28.7 pi_cpu: temp=49.4 heater_bed: target=0 temp=19.7 pwm=0.000 sysload=1.36 cputime=31.378 memavail=637392 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 1132.6: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000003 mcu_task_stddev=0.000004 bytes_write=3540 bytes_read=7382 bytes_retransmit=9 bytes_invalid=0 send_seq=294 receive_seq=294 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998716 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1228 bytes_read=5184 bytes_retransmit=0 bytes_invalid=0 send_seq=138 receive_seq=138 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72002109 adj=71992542  CANBOARD: temp=28.7 pi_cpu: temp=49.4 heater_bed: target=0 temp=19.7 pwm=0.000 sysload=1.41 cputime=31.406 memavail=637360 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 1133.6: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000003 mcu_task_stddev=0.000004 bytes_write=3546 bytes_read=7527 bytes_retransmit=9 bytes_invalid=0 send_seq=295 receive_seq=295 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998588 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1234 bytes_read=5290 bytes_retransmit=0 bytes_invalid=0 send_seq=139 receive_seq=139 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72002087 adj=71995212  CANBOARD: temp=28.7 pi_cpu: temp=49.4 heater_bed: target=0 temp=19.8 pwm=0.000 sysload=1.41 cputime=31.425 memavail=637392 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 1134.6: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000003 mcu_task_stddev=0.000004 bytes_write=3552 bytes_read=7672 bytes_retransmit=9 bytes_invalid=0 send_seq=296 receive_seq=296 retransmit_seq=2 srtt=0.001 rttvar=0.001 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998448 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1240 bytes_read=5426 bytes_retransmit=0 bytes_invalid=0 send_seq=140 receive_seq=140 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72002030 adj=71997168  CANBOARD: temp=28.7 pi_cpu: temp=48.9 heater_bed: target=0 temp=19.9 pwm=0.000 sysload=1.41 cputime=31.443 memavail=637392 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 1135.6: gcodein=0  mcu: mcu_awake=0.002 mcu_task_avg=0.000003 mcu_task_stddev=0.000004 bytes_write=3558 bytes_read=7860 bytes_retransmit=9 bytes_invalid=0 send_seq=297 receive_seq=297 retransmit_seq=2 srtt=0.001 rttvar=0.001 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998388 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1246 bytes_read=5532 bytes_retransmit=0 bytes_invalid=0 send_seq=141 receive_seq=141 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001998 adj=71998545  CANBOARD: temp=28.7 pi_cpu: temp=49.4 heater_bed: target=0 temp=19.8 pwm=0.000 sysload=1.41 cputime=31.463 memavail=637392 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 1136.6: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000003 bytes_write=3564 bytes_read=8019 bytes_retransmit=9 bytes_invalid=0 send_seq=298 receive_seq=298 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998350 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1252 bytes_read=5652 bytes_retransmit=0 bytes_invalid=0 send_seq=142 receive_seq=142 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001955 adj=71999545  CANBOARD: temp=28.7 pi_cpu: temp=49.4 heater_bed: target=0 temp=19.8 pwm=0.000 sysload=1.41 cputime=31.483 memavail=637084 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 1137.6: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000003 bytes_write=3570 bytes_read=8164 bytes_retransmit=9 bytes_invalid=0 send_seq=299 receive_seq=299 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998394 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1258 bytes_read=5788 bytes_retransmit=0 bytes_invalid=0 send_seq=143 receive_seq=143 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001919 adj=72000219  CANBOARD: temp=28.7 pi_cpu: temp=49.4 heater_bed: target=0 temp=19.7 pwm=0.000 sysload=1.46 cputime=31.502 memavail=637116 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 1138.6: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000003 bytes_write=3576 bytes_read=8352 bytes_retransmit=9 bytes_invalid=0 send_seq=300 receive_seq=300 retransmit_seq=2 srtt=0.001 rttvar=0.001 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998386 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1264 bytes_read=5894 bytes_retransmit=0 bytes_invalid=0 send_seq=144 receive_seq=144 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001919 adj=72000598  CANBOARD: temp=28.7 pi_cpu: temp=49.4 heater_bed: target=0 temp=19.9 pwm=0.000 sysload=1.46 cputime=31.521 memavail=637148 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 1139.6: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000003 bytes_write=3582 bytes_read=8497 bytes_retransmit=9 bytes_invalid=0 send_seq=301 receive_seq=301 retransmit_seq=2 srtt=0.001 rttvar=0.001 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998365 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1270 bytes_read=6000 bytes_retransmit=0 bytes_invalid=0 send_seq=145 receive_seq=145 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001961 adj=72001105  CANBOARD: temp=28.7 pi_cpu: temp=48.9 heater_bed: target=0 temp=19.8 pwm=0.000 sysload=1.46 cputime=31.539 memavail=637180 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 1140.6: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000003 bytes_write=3588 bytes_read=8642 bytes_retransmit=9 bytes_invalid=0 send_seq=302 receive_seq=302 retransmit_seq=2 srtt=0.001 rttvar=0.001 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998357 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1276 bytes_read=6136 bytes_retransmit=0 bytes_invalid=0 send_seq=146 receive_seq=146 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001956 adj=72001696  CANBOARD: temp=28.7 pi_cpu: temp=49.4 heater_bed: target=0 temp=19.9 pwm=0.000 sysload=1.46 cputime=31.559 memavail=637116 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 1141.6: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000003 bytes_write=3594 bytes_read=8844 bytes_retransmit=9 bytes_invalid=0 send_seq=303 receive_seq=303 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998346 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1282 bytes_read=6256 bytes_retransmit=0 bytes_invalid=0 send_seq=147 receive_seq=147 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001928 adj=72001915  CANBOARD: temp=28.7 pi_cpu: temp=49.4 heater_bed: target=0 temp=19.8 pwm=0.000 sysload=1.46 cputime=31.579 memavail=637244 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 1142.6: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000003 bytes_write=3600 bytes_read=8989 bytes_retransmit=9 bytes_invalid=0 send_seq=304 receive_seq=304 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998361 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1288 bytes_read=6362 bytes_retransmit=0 bytes_invalid=0 send_seq=148 receive_seq=148 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001908 adj=72001978  CANBOARD: temp=28.7 pi_cpu: temp=48.9 heater_bed: target=0 temp=20.0 pwm=0.000 sysload=1.50 cputime=31.596 memavail=637116 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 1143.6: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000003 bytes_write=3606 bytes_read=9134 bytes_retransmit=9 bytes_invalid=0 send_seq=305 receive_seq=305 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998356 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1294 bytes_read=6498 bytes_retransmit=0 bytes_invalid=0 send_seq=149 receive_seq=149 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001917 adj=72001995  CANBOARD: temp=28.7 pi_cpu: temp=49.4 heater_bed: target=0 temp=20.0 pwm=0.000 sysload=1.50 cputime=31.616 memavail=637192 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 1144.6: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000003 bytes_write=3612 bytes_read=9322 bytes_retransmit=9 bytes_invalid=0 send_seq=306 receive_seq=306 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998364 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1300 bytes_read=6604 bytes_retransmit=0 bytes_invalid=0 send_seq=150 receive_seq=150 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001929 adj=72002200  CANBOARD: temp=28.7 pi_cpu: temp=49.4 heater_bed: target=0 temp=19.7 pwm=0.000 sysload=1.50 cputime=31.635 memavail=637112 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 1145.6: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000003 bytes_write=3618 bytes_read=9467 bytes_retransmit=9 bytes_invalid=0 send_seq=307 receive_seq=307 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998391 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1306 bytes_read=6710 bytes_retransmit=0 bytes_invalid=0 send_seq=151 receive_seq=151 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001923 adj=72002338  CANBOARD: temp=28.7 pi_cpu: temp=48.3 heater_bed: target=0 temp=20.0 pwm=0.000 sysload=1.50 cputime=31.654 memavail=637176 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 1146.6: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000003 bytes_write=3624 bytes_read=9626 bytes_retransmit=9 bytes_invalid=0 send_seq=308 receive_seq=308 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998402 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1312 bytes_read=6860 bytes_retransmit=0 bytes_invalid=0 send_seq=152 receive_seq=152 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001908 adj=72002302  CANBOARD: temp=28.7 pi_cpu: temp=48.9 heater_bed: target=0 temp=20.1 pwm=0.000 sysload=1.50 cputime=31.674 memavail=636864 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 1147.6: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000003 bytes_write=3630 bytes_read=9814 bytes_retransmit=9 bytes_invalid=0 send_seq=309 receive_seq=309 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998430 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1318 bytes_read=6966 bytes_retransmit=0 bytes_invalid=0 send_seq=153 receive_seq=153 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001906 adj=72002254  CANBOARD: temp=28.7 pi_cpu: temp=48.9 heater_bed: target=0 temp=19.8 pwm=0.000 sysload=1.54 cputime=31.692 memavail=636864 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 1148.6: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000003 bytes_write=3636 bytes_read=9959 bytes_retransmit=9 bytes_invalid=0 send_seq=310 receive_seq=310 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998428 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1324 bytes_read=7072 bytes_retransmit=0 bytes_invalid=0 send_seq=154 receive_seq=154 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001903 adj=72002247  CANBOARD: temp=28.7 pi_cpu: temp=49.4 heater_bed: target=0 temp=19.9 pwm=0.000 sysload=1.54 cputime=31.713 memavail=636960 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 1149.6: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000003 bytes_write=3642 bytes_read=10104 bytes_retransmit=9 bytes_invalid=0 send_seq=311 receive_seq=311 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998416 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1336 bytes_read=7224 bytes_retransmit=0 bytes_invalid=0 send_seq=156 receive_seq=156 retransmit_seq=0 srtt=0.001 rttvar=0.001 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001902 adj=72002306  CANBOARD: temp=28.7 pi_cpu: temp=49.4 heater_bed: target=0 temp=19.8 pwm=0.000 sysload=1.54 cputime=31.735 memavail=636864 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 1150.6: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000003 bytes_write=3648 bytes_read=10292 bytes_retransmit=9 bytes_invalid=0 send_seq=312 receive_seq=312 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998405 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1342 bytes_read=7330 bytes_retransmit=0 bytes_invalid=0 send_seq=157 receive_seq=157 retransmit_seq=0 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001894 adj=72002389  CANBOARD: temp=28.7 pi_cpu: temp=49.4 heater_bed: target=0 temp=19.8 pwm=0.000 sysload=1.54 cputime=31.756 memavail=636960 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 1151.6: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000003 bytes_write=3654 bytes_read=10437 bytes_retransmit=9 bytes_invalid=0 send_seq=313 receive_seq=313 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998400 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1348 bytes_read=7450 bytes_retransmit=0 bytes_invalid=0 send_seq=158 receive_seq=158 retransmit_seq=0 srtt=0.001 rttvar=0.001 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001887 adj=72002402  CANBOARD: temp=28.7 pi_cpu: temp=49.4 heater_bed: target=0 temp=19.9 pwm=0.000 sysload=1.54 cputime=31.775 memavail=636888 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 1152.6: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000003 bytes_write=3660 bytes_read=10596 bytes_retransmit=9 bytes_invalid=0 send_seq=314 receive_seq=314 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998411 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1354 bytes_read=7586 bytes_retransmit=0 bytes_invalid=0 send_seq=159 receive_seq=159 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001881 adj=72002398  CANBOARD: temp=28.7 pi_cpu: temp=49.4 heater_bed: target=0 temp=19.7 pwm=0.000 sysload=1.58 cputime=31.796 memavail=636896 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 1153.6: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000003 bytes_write=3666 bytes_read=10781 bytes_retransmit=9 bytes_invalid=0 send_seq=315 receive_seq=315 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998417 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1360 bytes_read=7692 bytes_retransmit=0 bytes_invalid=0 send_seq=160 receive_seq=160 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001888 adj=72002357  CANBOARD: temp=28.7 pi_cpu: temp=48.9 heater_bed: target=0 temp=19.8 pwm=0.000 sysload=1.58 cputime=31.818 memavail=636984 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 1154.6: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000003 bytes_write=3672 bytes_read=10915 bytes_retransmit=9 bytes_invalid=0 send_seq=316 receive_seq=316 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998421 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1366 bytes_read=7798 bytes_retransmit=0 bytes_invalid=0 send_seq=161 receive_seq=161 retransmit_seq=0 srtt=0.002 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001889 adj=72002429  CANBOARD: temp=28.7 pi_cpu: temp=49.4 heater_bed: target=0 temp=19.7 pwm=0.000 sysload=1.58 cputime=31.837 memavail=636856 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 1155.6: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000003 bytes_write=3678 bytes_read=11056 bytes_retransmit=9 bytes_invalid=0 send_seq=317 receive_seq=317 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998419 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1372 bytes_read=7934 bytes_retransmit=0 bytes_invalid=0 send_seq=162 receive_seq=162 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001899 adj=72002450  CANBOARD: temp=28.7 pi_cpu: temp=48.9 heater_bed: target=0 temp=19.8 pwm=0.000 sysload=1.58 cputime=31.858 memavail=636888 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 1156.6: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000003 bytes_write=3684 bytes_read=11244 bytes_retransmit=9 bytes_invalid=0 send_seq=318 receive_seq=318 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998424 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1378 bytes_read=8054 bytes_retransmit=0 bytes_invalid=0 send_seq=163 receive_seq=163 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001893 adj=72001988  CANBOARD: temp=28.7 pi_cpu: temp=48.3 heater_bed: target=0 temp=19.8 pwm=0.000 sysload=1.58 cputime=31.880 memavail=637472 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 1157.6: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000003 bytes_write=3690 bytes_read=11403 bytes_retransmit=9 bytes_invalid=0 send_seq=319 receive_seq=319 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998420 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1384 bytes_read=8160 bytes_retransmit=0 bytes_invalid=0 send_seq=164 receive_seq=164 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001888 adj=72002071  CANBOARD: temp=28.7 pi_cpu: temp=49.4 heater_bed: target=0 temp=19.8 pwm=0.000 sysload=1.53 cputime=31.900 memavail=637408 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 1158.6: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000003 bytes_write=3696 bytes_read=11548 bytes_retransmit=9 bytes_invalid=0 send_seq=320 receive_seq=320 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998422 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1390 bytes_read=8296 bytes_retransmit=0 bytes_invalid=0 send_seq=165 receive_seq=165 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001896 adj=72002155  CANBOARD: temp=28.7 pi_cpu: temp=48.9 heater_bed: target=0 temp=19.8 pwm=0.000 sysload=1.53 cputime=31.922 memavail=637472 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 1159.6: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000003 bytes_write=3702 bytes_read=11736 bytes_retransmit=9 bytes_invalid=0 send_seq=321 receive_seq=321 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998430 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1396 bytes_read=8402 bytes_retransmit=0 bytes_invalid=0 send_seq=166 receive_seq=166 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001888 adj=72002299  CANBOARD: temp=28.7 pi_cpu: temp=48.9 heater_bed: target=0 temp=20.0 pwm=0.000 sysload=1.53 cputime=31.944 memavail=637424 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 1160.6: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000003 bytes_write=3708 bytes_read=11881 bytes_retransmit=9 bytes_invalid=0 send_seq=322 receive_seq=322 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998438 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1402 bytes_read=8508 bytes_retransmit=0 bytes_invalid=0 send_seq=167 receive_seq=167 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001884 adj=72002268  CANBOARD: temp=28.7 pi_cpu: temp=49.4 heater_bed: target=0 temp=19.8 pwm=0.000 sysload=1.53 cputime=31.964 memavail=637392 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 1161.6: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000003 bytes_write=3714 bytes_read=12041 bytes_retransmit=9 bytes_invalid=0 send_seq=323 receive_seq=323 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998434 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1408 bytes_read=8658 bytes_retransmit=0 bytes_invalid=0 send_seq=168 receive_seq=168 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001884 adj=72002272  CANBOARD: temp=28.7 pi_cpu: temp=49.4 heater_bed: target=0 temp=19.8 pwm=0.000 sysload=1.53 cputime=31.985 memavail=637440 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 1162.6: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000003 bytes_write=3720 bytes_read=12228 bytes_retransmit=9 bytes_invalid=0 send_seq=324 receive_seq=324 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998426 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1414 bytes_read=8764 bytes_retransmit=0 bytes_invalid=0 send_seq=169 receive_seq=169 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001885 adj=72002342  CANBOARD: temp=28.7 pi_cpu: temp=48.3 heater_bed: target=0 temp=19.8 pwm=0.000 sysload=1.49 cputime=32.007 memavail=637376 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 1163.6: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000003 bytes_write=3726 bytes_read=12373 bytes_retransmit=9 bytes_invalid=0 send_seq=325 receive_seq=325 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998429 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1420 bytes_read=8870 bytes_retransmit=0 bytes_invalid=0 send_seq=170 receive_seq=170 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001881 adj=72002423  CANBOARD: temp=28.7 pi_cpu: temp=48.3 heater_bed: target=0 temp=19.9 pwm=0.000 sysload=1.49 cputime=32.029 memavail=637416 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 1164.6: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000003 bytes_write=3732 bytes_read=12533 bytes_retransmit=9 bytes_invalid=0 send_seq=326 receive_seq=326 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998428 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1426 bytes_read=9002 bytes_retransmit=0 bytes_invalid=0 send_seq=171 receive_seq=171 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001877 adj=72002397  CANBOARD: temp=28.7 pi_cpu: temp=48.9 heater_bed: target=0 temp=19.8 pwm=0.000 sysload=1.49 cputime=32.051 memavail=637320 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
Stats 1165.6: gcodein=0  mcu: mcu_awake=0.001 mcu_task_avg=0.000002 mcu_task_stddev=0.000003 bytes_write=3738 bytes_read=12706 bytes_retransmit=9 bytes_invalid=0 send_seq=327 receive_seq=327 retransmit_seq=2 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=179998428 head0: mcu_awake=0.001 mcu_task_avg=0.000010 mcu_task_stddev=0.000009 bytes_write=1432 bytes_read=9101 bytes_retransmit=0 bytes_invalid=0 send_seq=172 receive_seq=172 retransmit_seq=0 srtt=0.001 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0 freq=72001882 adj=72002399  CANBOARD: temp=28.8 pi_cpu: temp=49.4 heater_bed: target=0 temp=20.0 pwm=0.000 sysload=1.49 cputime=32.075 memavail=637416 print_time=0.007 buffer_time=0.000 print_stall=0 extruder: target=0 temp=-87.2 pwm=0.000
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Starting Klippy...
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/klipper_config/printer.cfg', '-l', '/home/pi/klipper_logs/klippy.log', '-a', '/tmp/klippy_uds']
Git version: 'v0.11.0-114-g0a645e49-dirty'
CPU: 4 core ARMv7 Processor rev 4 (v7l)
Python: '3.7.3 (default, Jan 22 2021, 20:04:44) \n[GCC 8.3.0]'
Start printer at Mon Apr 24 23:06:11 2023 (1682402771.1 48.1)
===== Config file =====
[gcode_macro BED_MESH_CALIBRATE]
rename_existing = _BED_MESH_CALIBRATE
variable_led_enable = False
variable_status_macro = 'status_meshing'
variable_fuzz_enable = False
variable_fuzz_min = 0
variable_fuzz_max = 4
variable_probe_dock_enable = False
variable_attach_macro = 'Attach_Probe'
variable_detach_macro = 'Dock_Probe'
gcode = 
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}
	{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}
	{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (printer.configfile.settings.bed_mesh.probe_count[0]-2)  %}
	{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (printer.configfile.settings.bed_mesh.probe_count[1]-2)  %}
	{% set x_min = bed_mesh_min[0] %}
	{% set y_min = bed_mesh_min[1] %}
	{% set x_max = bed_mesh_max[0] %}
	{% set y_max = bed_mesh_max[1] %}
	
	{ action_respond_info("{} points, clamping to mesh [{!r} {!r}]".format(
	all_points | count,
	bed_mesh_min,
	bed_mesh_max,
	)) }
	
	{% if fuzz_enable == True %}
	{% if all_points %}
	{% set fuzz_range = range(fuzz_min * 100 | int, fuzz_max * 100 | int) %}
	{% set x_min = ( bed_mesh_min[0], ((all_points | map(attribute=0) | min - (fuzz_range | random / 100.0)) | default(bed_mesh_min[0])) ) | max %}
	{% set y_min = ( bed_mesh_min[1], ((all_points | map(attribute=1) | min - (fuzz_range | random / 100.0)) | default(bed_mesh_min[1])) ) | max %}
	{% set x_max = ( bed_mesh_max[0], ((all_points | map(attribute=0) | max + (fuzz_range | random / 100.0)) | default(bed_mesh_max[0])) ) | min %}
	{% set y_max = ( bed_mesh_max[1], ((all_points | map(attribute=1) | max + (fuzz_range | random / 100.0)) | default(bed_mesh_max[1])) ) | min %}
	{% endif %}
	{% else %}
	{% set x_min = [ bed_mesh_min[0], (all_points | map(attribute=0) | min | default(bed_mesh_min[0])) ] | max %}
	{% set y_min = [ bed_mesh_min[1], (all_points | map(attribute=1) | min | default(bed_mesh_min[1])) ] | max %}
	{% set x_max = [ bed_mesh_max[0], (all_points | map(attribute=0) | max | default(bed_mesh_max[0])) ] | min %}
	{% set y_max = [ bed_mesh_max[1], (all_points | map(attribute=1) | max | default(bed_mesh_max[1])) ] | min %}
	{% endif %}
	
	{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(
	(x_min, y_min),
	(x_max, y_max),
	)) }
	
	{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | int) + 2 %}
	{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | int) + 2 %}
	
	{% if (([points_x, points_y]|max) > 6) %}
	{% set algorithm = "bicubic" %}
	{% set min_points = 4 %}
	{% else %}
	{% set algorithm = "lagrange" %}
	{% set min_points = 3 %}
	{% endif %}
	{ action_respond_info( "Algorithm: {}".format(algorithm)) }
	
	{% set points_x = [points_x, min_points]|max  %}
	{% set points_y = [points_y, min_points]|max  %}
	{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }
	
	{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}
	{% set ref_index = (points_x * points_y / 2) | int %}
	{ action_respond_info( "Reference index: {}".format(ref_index) ) }
	{% else %}
	{% set ref_index = -1 %}
	{% endif %}
	
	{% if probe_dock_enable == True %}
	{attach_macro}
	{% endif %}
	
	{% if led_enable == True %}
	{status_macro}
	{% endif %}
	
	_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}
	
	{% if probe_dock_enable == True %}
	{detach_macro}
	{% endif %}

[gcode_macro ADAPTIVE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
variable_adaptive_enable = True
variable_z_height = 0.3
variable_tip_distance = 10
variable_purge_amount = 25
variable_flow_rate = 10
variable_x_default = 10
variable_y_default = 10
variable_size = 10
variable_distance_to_object_x = 15
variable_distance_to_object_y = 0
variable_travel_speed = 300
gcode = 
	{% if adaptive_enable == True %}
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set x_origin = (all_points | map(attribute=0) | min | default(x_default + distance_to_object_x + size)) - distance_to_object_x - size %}
	{% set y_origin = (all_points | map(attribute=1) | min | default(y_default + distance_to_object_y + size)) - distance_to_object_y - size %}
	{% set x_origin = ([x_origin, 0] | max) %}
	{% set y_origin = ([y_origin, 0] | max) %}
	{% else %}
	{% set x_origin = x_default | float %}
	{% set y_origin = y_default | float %}
	{% endif %}
	{% set purge_move_speed = 2.31 * size * flow_rate / (purge_amount * 2.405) %}
	{% set prepurge_speed = flow_rate / 2.405 %}
	{ action_respond_info( "x: " + x_origin|string + " y: " + y_origin|string + " purge_move_speed: " + purge_move_speed|string + " prepurge_speed: " + prepurge_speed|string ) }
	
	G92 E0
	G0 F{travel_speed*60}
	G90
	G0 X{x_origin} Y{y_origin+size/2}
	G0 Z{z_height}
	M83
	G1 E{tip_distance} F{prepurge_speed*60}
	G1 X{x_origin+size*0.289} Y{y_origin+size} E{purge_amount/4} F{purge_move_speed*60}
	G1 E-.5 F2100
	G0 Z{z_height*2}
	G0 X{x_origin+size*0.789} Y{y_origin+size}
	G0 Z{z_height}
	G1 E.5 F2100
	G1 X{x_origin+size*0.211} Y{y_origin} E{purge_amount/2} F{purge_move_speed*60}
	G1 E-.5 F2100
	G0 Z{z_height*2}
	G0 X{x_origin+size*0.711} Y{y_origin}
	G0 Z{z_height}
	G1 E.5 F2100
	G1 X{x_origin+size} Y{y_origin+size/2}  E{purge_amount/4} F{purge_move_speed*60}
	G1 E-.5 F2100
	G92 E0
	G0 Z{z_height*2}

[virtual_sdcard]
path = /home/pi/gcode_files

[pause_resume]

[gcode_macro PRINT_START]
variable_parameter_area_start = 0,0
variable_parameter_area_end = 0,0
gcode = 
	SET_FAN_SPEED FAN=chamber SPEED=.5
	SET_FAN_SPEED FAN=drivers SPEED=1
	{% set BED = params.BED|default(55)|int %}
	{% set EXTRUDER = params.EXTRUDER|default(205)|int %}
	G28 X Y
	
	M104 S170
	M140 S{BED}
	RESPOND PREFIX= MSG="Waiting for temperatures..."
	M117  Waiting for temperatures...
	M190 S{BED}
	RESPOND PREFIX= MSG="Waiting for thermal expansion..."
	M117 Waiting for thermal expansion...
	G4 P30000
	RESPOND PREFIX= MSG="Creating a mesh..."
	M117 Creating a mesh...
	G28
	QUAD_GANTRY_LEVEL
	BED_MESH_CALIBRATE
	
	M104 S{EXTRUDER}
	
	
	RESPOND PREFIX= MSG="Moving to prime position"
	M117 Moving to prime position
	G1 X25 Y-2 Z10 F5000.0
	{% if printer.extruder.temperature < params.EXTRUDER|float*0.98 %}
	M109 S{params.EXTRUDER|float*0.98}
	{% endif %}
	M104 S{EXTRUDER}
	G4 P30000
	ADAPTIVE_PURGE
	RESPOND PREFIX= MSG="Printing..."
	M117 Printing...
	M117

[gcode_macro PID_TUNE]
gcode = 
	G28
	G1 Z10 F7800
	M106 S64
	PID_CALIBRATE HEATER=extruder TARGET=245
	
	
	RESPOND PREFIX= MSG="Moving to prime position"
	M117 Moving to prime position
	G1 X25 Y-3 Z10 F5000.0
	{% if printer.extruder.temperature < params.EXTRUDER|float*0.98 %}
	M109 S{params.EXTRUDER|float*0.98}
	{% endif %}
	M104 S{EXTRUDER}
	
	RESPOND PREFIX= MSG="Priming the nozzle"
	M117 Priming the nozzle
	G92 E0
	G0 Z0.15
	G0 X55 Y-2 Z0.28 F1500.0
	G92 E0
	G1 X195 Y-2 Z0.28 F1500.0 E15
	G92 E0
	G10
	G1 Z2.0 F3000
	
	RESPOND PREFIX= MSG="Printing..."
	M117 Printing...
	M117

[display_status]

[gcode_macro END_PRINT]
gcode = 
	
	G91
	G1 E-2
	
	G90
	
	TURN_OFF_HEATERS
	
	G28 X Y

[gcode_macro PAUSE]
rename_existing = BASE_PAUSE
gcode = 
	
	SAVE_GCODE_STATE NAME=PAUSE_state
	BASE_PAUSE
	G91
	G1 E-{2} F2100
	G1 Z{10}
	G90
	G1 X{230} Y{230} F6000
	G91

[gcode_macro RESUME]
rename_existing = BASE_RESUME
gcode = 
	G91
	G1 E{s} F2100
	G90
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
	BASE_RESUME

[gcode_macro CANCEL_PRINT]
rename_existing = BASE_CANCEL_PRINT
gcode = 
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	SDCARD_RESET_FILE
	BASE_CANCEL_PRINT
	
	G91
	G1 Z10 F8000
	G90
	G1 X0 Y222 E-3 F8000
	DISABLE_MOTORS
	M106 S0
	M117 Print Canceled

[exclude_object]

[gcode_macro M486]
gcode = 
	
	
	
	
	
	
	
	
	
	
	
	{% if 'exclude_object' not in printer %}
	{action_raise_error("[exclude_object] is not enabled")}
	{% endif %}
	
	{% if 'T' in params %}
	EXCLUDE_OBJECT RESET=1
	
	{% for i in range(params.T | int) %}
	EXCLUDE_OBJECT_DEFINE NAME={i}
	{% endfor %}
	{% endif %}
	
	{% if 'C' in params %}
	EXCLUDE_OBJECT CURRENT=1
	{% endif %}
	
	{% if 'P' in params %}
	EXCLUDE_OBJECT NAME={params.P}
	{% endif %}
	
	{% if 'S' in params %}
	{% if params.S == '-1' %}
	{% if printer.exclude_object.current_object %}
	EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
	{% endif %}
	{% else %}
	EXCLUDE_OBJECT_START NAME={params.S}
	{% endif %}
	{% endif %}
	
	{% if 'U' in params %}
	EXCLUDE_OBJECT RESET=1 NAME={params.U}
	{% endif %}

[gcode_macro GET_TIMELAPSE_SETUP]
description = Print the Timelapse setup
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% set output_txt = ["Timelapse Setup:"] %}
	{% set _dummy = output_txt.append("enable: %s" % tl.enable) %}
	{% set _dummy = output_txt.append("park: %s" % tl.park.enable) %}
	{% if tl.park.enable %}
	{% set _dummy = output_txt.append("park position: %s time: %s s" % (tl.park.pos, tl.park.time)) %}
	{% set _dummy = output_txt.append("park cord x:%s y:%s dz:%s" % (tl.park.coord.x, tl.park.coord.y, tl.park.coord.dz)) %}
	{% set _dummy = output_txt.append("travel speed: %s mm/s" % tl.speed.travel) %}
	{% endif %}
	{% set _dummy = output_txt.append("fw_retract: %s" % tl.extruder.fw_retract) %}
	{% if not tl.extruder.fw_retract %}
	{% set _dummy = output_txt.append("retract: %s mm speed: %s mm/s" % (tl.extruder.retract, tl.speed.retract)) %}
	{% set _dummy = output_txt.append("extrude: %s mm speed: %s mm/s" % (tl.extruder.extrude, tl.speed.extrude)) %}
	{% endif %}
	{% set _dummy = output_txt.append("verbose: %s" % tl.verbose) %}
	{action_respond_info(output_txt|join("\n"))}

[gcode_macro _SET_TIMELAPSE_SETUP]
description = Set user parameters for timelapse
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	
	{% set min = printer.toolhead.axis_minimum %}
	{% set max = printer.toolhead.axis_maximum %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	{% set park = {'min'   : {'x': (min.x / 1.42)|round(3) if round_bed else min.x|round(3),
	'y': (min.y / 1.42)|round(3) if round_bed else min.y|round(3)},
	'max'   : {'x': (max.x / 1.42)|round(3) if round_bed else max.x|round(3),
	'y': (max.y / 1.42)|round(3) if round_bed else max.y|round(3)},
	'center': {'x': (max.x-(max.x-min.x)/2)|round(3),
	'y': (max.y-(max.y-min.y)/2)|round(3)}} %}
	
	{% if params.ENABLE %}
	{% if params.ENABLE|lower is in ['true', 'false'] %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=enable VALUE={True if params.ENABLE|lower == 'true' else False}
	{% else %}
	{action_raise_error("ENABLE=%s not supported. Allowed values are [True, False]" % params.ENABLE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.VERBOSE %}
	{% if params.VERBOSE|lower is in ['true', 'false'] %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=verbose VALUE={True if params.VERBOSE|lower == 'true' else False}
	{% else %}
	{action_raise_error("VERBOSE=%s not supported. Allowed values are [True, False]" % params.VERBOSE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_X %}
	{% if params.CUSTOM_POS_X|float >= min.x and params.CUSTOM_POS_X|float <= max.x %}
	{% set _dummy = tl.park.custom.update({'x':params.CUSTOM_POS_X|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_X=%s must be within [%s - %s]" % (params.CUSTOM_POS_X, min.x, max.x))}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_Y %}
	{% if params.CUSTOM_POS_Y|float >= min.y and params.CUSTOM_POS_Y|float <= max.y %}
	{% set _dummy = tl.park.custom.update({'y':params.CUSTOM_POS_Y|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_Y=%s must be within [%s - %s]" % (params.CUSTOM_POS_Y, min.y, max.y))}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_DZ %}
	{% if params.CUSTOM_POS_DZ|float >= min.z and params.CUSTOM_POS_DZ|float <= max.z %}
	{% set _dummy = tl.park.custom.update({'dz':params.CUSTOM_POS_DZ|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_DZ=%s must be within [%s - %s]" % (params.CUSTOM_POS_DZ, min.z, max.z))}
	{% endif %}
	{% endif %}
	{% if params.PARK_ENABLE %}
	{% if params.PARK_ENABLE|lower is in ['true', 'false'] %}
	{% set _dummy = tl.park.update({'enable':True if params.PARK_ENABLE|lower == 'true' else False}) %}
	{% else %}
	{action_raise_error("PARK_ENABLE=%s not supported. Allowed values are [True, False]" % params.PARK_ENABLE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.PARK_POS %}
	{% if params.PARK_POS|lower is in ['center','front_left','front_right','back_left','back_right','custom','x_only','y_only'] %}
	{% set dic = {'center'      : {'x': park.center.x   , 'y': park.center.y   , 'dz': 1                },
	'front_left'  : {'x': park.min.x      , 'y': park.min.y      , 'dz': 0                },
	'front_right' : {'x': park.max.x      , 'y': park.min.y      , 'dz': 0                },
	'back_left'   : {'x': park.min.x      , 'y': park.max.y      , 'dz': 0                },
	'back_right'  : {'x': park.max.x      , 'y': park.max.y      , 'dz': 0                },
	'custom'      : {'x': tl.park.custom.x, 'y': tl.park.custom.y, 'dz': tl.park.custom.dz},
	'x_only'      : {'x': tl.park.custom.x, 'y': 'none'          , 'dz': tl.park.custom.dz},
	'y_only'      : {'x': 'none'          , 'y': tl.park.custom.y, 'dz': tl.park.custom.dz}} %}
	{% set _dummy = tl.park.update({'pos':params.PARK_POS|lower}) %}
	{% set _dummy = tl.park.update({'coord':dic[tl.park.pos]}) %}
	{% else %}
	{action_raise_error("PARK_POS=%s not supported. Allowed values are [CENTER, FRONT_LEFT, FRONT_RIGHT, BACK_LEFT, BACK_RIGHT, CUSTOM, X_ONLY, Y_ONLY]"
	% params.PARK_POS|upper)}
	{% endif %}
	{% endif %}
	{% if params.PARK_TIME %}
	{% if params.PARK_TIME|float >= 0.0 %}
	{% set _dummy = tl.park.update({'time':params.PARK_TIME|float|round(3)}) %}
	{% else %}
	{action_raise_error("PARK_TIME=%s must be a positive number" % params.PARK_TIME)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=park VALUE="{tl.park}"
	{% if params.TRAVEL_SPEED %}
	{% if params.TRAVEL_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'travel':params.TRAVEL_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("TRAVEL_SPEED=%s must be larger than 0" % params.TRAVEL_SPEED)}
	{% endif %}
	{% endif %}
	{% if params.RETRACT_SPEED %}
	{% if params.RETRACT_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'retract':params.RETRACT_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("RETRACT_SPEED=%s must be larger than 0" % params.RETRACT_SPEED)}
	{% endif %}
	{% endif %}
	{% if params.EXTRUDE_SPEED %}
	{% if params.EXTRUDE_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'extrude':params.EXTRUDE_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("EXTRUDE_SPEED=%s must be larger than 0" % params.EXTRUDE_SPEED)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=speed VALUE="{tl.speed}"
	{% if params.EXTRUDE_DISTANCE %}
	{% if params.EXTRUDE_DISTANCE|float >= 0.0 %}
	{% set _dummy = tl.extruder.update({'extrude':params.EXTRUDE_DISTANCE|float|round(3)}) %}
	{% else %}
	{action_raise_error("EXTRUDE_DISTANCE=%s must be specified as positiv number" % params.EXTRUDE_DISTANCE)}
	{% endif %}
	{% endif %}
	{% if params.RETRACT_DISTANCE %}
	{% if params.RETRACT_DISTANCE|float >= 0.0 %}
	{% set _dummy = tl.extruder.update({'retract':params.RETRACT_DISTANCE|float|round(3)}) %}
	{% else %}
	{action_raise_error("RETRACT_DISTANCE=%s must be specified as positiv number" % params.RETRACT_DISTANCE)}
	{% endif %}
	{% endif %}
	{% if params.FW_RETRACT %}
	{% if params.FW_RETRACT|lower is in ['true', 'false'] %}
	{% if 'firmware_retraction' in printer.configfile.settings %}
	{% set _dummy = tl.extruder.update({'fw_retract': True if params.FW_RETRACT|lower == 'true' else False}) %}
	{% else %}
	{% set _dummy = tl.extruder.update({'fw_retract':False}) %}
	{% if params.FW_RETRACT|capitalize == 'True' %}
	{action_raise_error("[firmware_retraction] not defined in printer.cfg. Can not enable fw_retract")}
	{% endif %}
	{% endif %}
	{% else %}
	{action_raise_error("FW_RETRACT=%s not supported. Allowed values are [True, False]" % params.FW_RETRACT|capitalize)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=extruder VALUE="{tl.extruder}"
	{% if printer.configfile.settings['gcode_macro pause'] is defined %}
	{% set _dummy = tl.macro.update({'pause': printer.configfile.settings['gcode_macro pause'].rename_existing}) %}
	{% endif %}
	{% if printer.configfile.settings['gcode_macro resume'] is defined %}
	{% set _dummy = tl.macro.update({'resume': printer.configfile.settings['gcode_macro resume'].rename_existing}) %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=macro VALUE="{tl.macro}"

[gcode_macro TIMELAPSE_TAKE_FRAME]
description = Take Timelapse shoot
variable_enable = False
variable_takingframe = False
variable_park = {'enable': False,
	'pos'   : 'center',
	'time'  : 0.1,
	'custom': {'x': 0, 'y': 0, 'dz': 0},
	'coord' : {'x': 0, 'y': 0, 'dz': 0}}
variable_extruder = {'fw_retract': False,
	'retract': 1.0,
	'extrude': 1.0}
variable_speed = {'travel': 100,
	'retract': 15,
	'extrude': 15}
variable_verbose = True
variable_restore = {'absolute': {'coordinates': True, 'extrude': True}, 'speed': 1500, 'e':0, 'factor': {'speed': 1.0, 'extrude': 1.0}}
variable_macro = {'pause': 'PAUSE', 'resume': 'RESUME'}
variable_is_paused = False
gcode = 
	{% set hyperlapse = True if params.HYPERLAPSE and params.HYPERLAPSE|lower =='true' else False %}
	{% if enable %}
	{% if (hyperlapse and printer['gcode_macro HYPERLAPSE'].run) or
	(not hyperlapse and not printer['gcode_macro HYPERLAPSE'].run) %}
	{% if park.enable %}
	{% set pos = {'x': 'X' + park.coord.x|string if park.pos != 'y_only' else '',
	'y': 'Y' + park.coord.y|string if park.pos != 'x_only' else '',
	'z': 'Z'+ [printer.gcode_move.gcode_position.z + park.coord.dz, printer.toolhead.axis_maximum.z]|min|string} %}
	{% set restore = {'absolute': {'coordinates': printer.gcode_move.absolute_coordinates,
	'extrude'    : printer.gcode_move.absolute_extrude},
	'speed'   : printer.gcode_move.speed,
	'e'       : printer.gcode_move.gcode_position.e,
	'factor'  : {'speed'  : printer.gcode_move.speed_factor,
	'extrude': printer.gcode_move.extrude_factor}} %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=restore VALUE="{restore}"
	{% if not printer[printer.toolhead.extruder].can_extrude %}
	{% if verbose %}{action_respond_info("Timelapse: Warning, minimum extruder temperature not reached!")}{% endif %}
	{% else %}
	{% if extruder.fw_retract %}
	G10
	{% else %}
	M83
	G0 E-{extruder.retract} F{speed.retract * 60}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=is_paused VALUE=True
	{macro.pause}
	SET_GCODE_OFFSET X=0 Y=0
	G90
	{% if "xyz" not in printer.toolhead.homed_axes %}
	{% if verbose %}{action_respond_info("Timelapse: Warning, axis not homed yet!")}{% endif %}
	{% else %}
	G0 {pos.x} {pos.y} {pos.z} F{speed.travel * 60}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=takingframe VALUE=True
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_TAKE_FRAME DURATION=0.5
	M400
	{% endif %}
	_TIMELAPSE_NEW_FRAME HYPERLAPSE={hyperlapse}
	{% endif %}
	{% else %}
	{% if verbose %}{action_respond_info("Timelapse: disabled, take frame ignored")}{% endif %}
	{% endif %}

[gcode_macro _TIMELAPSE_NEW_FRAME]
description = action call for timelapse shoot. must be a seperate macro
gcode = 
	{action_call_remote_method("timelapse_newframe",
	macropark=printer['gcode_macro TIMELAPSE_TAKE_FRAME'].park,
	hyperlapse=params.HYPERLAPSE)}

[delayed_gcode _WAIT_TIMELAPSE_TAKE_FRAME]
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% set factor = {'speed': printer.gcode_move.speed_factor, 'extrude': printer.gcode_move.extrude_factor} %}
	{% if tl.takingframe %}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_TAKE_FRAME DURATION=0.5
	{% else %}
	{tl.macro.resume} VELOCITY={tl.speed.travel}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=is_paused VALUE=False
	{% if not printer[printer.toolhead.extruder].can_extrude %}
	{action_respond_info("Timelapse: Warning minimum extruder temperature not reached!")}
	{% else %}
	{% if tl.extruder.fw_retract %}
	G11
	{% else %}
	G0 E{tl.extruder.extrude} F{tl.speed.extrude * 60}
	G0 F{tl.restore.speed}
	{% if tl.restore.absolute.extrude %}
	M82
	G92 E{tl.restore.e}
	{% endif %}
	{% endif %}
	{% endif %}
	{% if tl.restore.factor.speed   != factor.speed   %} M220 S{(factor.speed*100)|round(0)}   {% endif %}
	{% if tl.restore.factor.extrude != factor.extrude %} M221 S{(factor.extrude*100)|round(0)} {% endif %}
	{% if not tl.restore.absolute.coordinates %} G91 {% endif %}
	{% endif %}

[gcode_macro HYPERLAPSE]
description = Start/Stop a hyperlapse recording
variable_cycle = 0
variable_run = False
gcode = 
	{% set cycle = params.CYCLE|default(30)|int %}
	{% if params.ACTION and params.ACTION|lower == 'start' %}
	{action_respond_info("Hyperlapse: frames started (Cycle %d sec)" % cycle)}
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=run VALUE=True
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=cycle VALUE={cycle}
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION={cycle}
	TIMELAPSE_TAKE_FRAME HYPERLAPSE=True
	{% elif params.ACTION and params.ACTION|lower == 'stop' %}
	{% if run %}{action_respond_info("Hyperlapse: frames stopped")}{% endif %}
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=run VALUE=False
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION=0
	{% else %}
	{action_raise_error("Hyperlapse: No valid input parameter
	Use:
	- HYPERLAPSE ACTION=START [CYCLE=time]
	- HYPERLAPSE ACTION=STOP")}
	{% endif %}

[delayed_gcode _HYPERLAPSE_LOOP]
gcode = 
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION={printer["gcode_macro HYPERLAPSE"].cycle}
	TIMELAPSE_TAKE_FRAME HYPERLAPSE=True

[gcode_macro TIMELAPSE_RENDER]
description = Render Timelapse video and wait for the result
variable_render = False
variable_run_identifier = 0
gcode = 
	{action_respond_info("Timelapse: Rendering started")}
	{action_call_remote_method("timelapse_render", byrendermacro="True")}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_RENDER VARIABLE=render VALUE=True
	{printer.configfile.settings['gcode_macro pause'].rename_existing}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_RENDER DURATION=0.5

[delayed_gcode _WAIT_TIMELAPSE_RENDER]
gcode = 
	{% set ri = printer['gcode_macro TIMELAPSE_RENDER'].run_identifier % 4 %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_RENDER VARIABLE=run_identifier VALUE={ri + 1}
	{% if printer['gcode_macro TIMELAPSE_RENDER'].render %}
	M117 Rendering {['-','\\','|','/'][ri]}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_RENDER DURATION=0.5
	{% else %}
	{action_respond_info("Timelapse: Rendering finished")}
	M117
	{printer.configfile.settings['gcode_macro resume'].rename_existing}
	{% endif %}

[gcode_macro TEST_STREAM_DELAY]
description = Helper macro to find stream and park delay
gcode = 
	{% set min = printer.toolhead.axis_minimum %}
	{% set max = printer.toolhead.axis_maximum %}
	{% set act = printer.toolhead.position %}
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% if act.z > 5.0 %}
	G0 X{min.x + 5.0} F{tl.speed.travel|int * 60}
	G0 X{(max.x-min.x)/2}
	G4 P{tl.park.time|float * 1000}
	_TIMELAPSE_NEW_FRAME HYPERLAPSE=FALSE
	G0 X{max.x - 5.0}
	{% else %}
	{action_raise_error("Toolhead z %.3f to low. Please place head above z = 5.0" % act.z)}
	{% endif %}

[force_move]
enable_force_move = True

[mcu head0]
canbus_uuid = 20195bac64c4

[temperature_sensor CANBOARD]
sensor_type = temperature_mcu
sensor_mcu = head0

[idle_timeout]
timeout = 100000

[mcu]
serial = /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00

[adc_scaled vref_scaled]
vref_pin = PB5
vssa_pin = PB4

[temperature_sensor pi_cpu]
sensor_type = temperature_host
gcode_id = P

[printer]
kinematics = corexy
max_velocity = 600
max_accel = 15000
max_accel_to_decel = 10000
square_corner_velocity = 10
max_z_velocity = 50
max_z_accel = 180

[stepper_x]
step_pin = PC25
dir_pin = !PB29
enable_pin = !PC28
rotation_distance = 40
microsteps = 32
endstop_pin = ^!head0:PB12
position_endstop = 303
position_max = 303
position_min = 0
homing_speed = 100

[tmc2209 stepper_x]
uart_pin = PA1
tx_pin = PA0
select_pins = PD0
uart_address = 1
run_current = 1
sense_resistor = 0.056

[stepper_y]
step_pin = PC24
dir_pin = !PB28
enable_pin = !PC28
rotation_distance = 40
microsteps = 32
endstop_pin = ^PC4
position_endstop = 308
position_max = 308
position_min = -3
homing_speed = 100
homing_retract_dist = 30

[tmc2209 stepper_y]
uart_pin = PA1
tx_pin = PA0
select_pins = PD0
uart_address = 2
run_current = 1
sense_resistor = 0.056

[stepper_z3]
step_pin = PC26
dir_pin = PB3
enable_pin = !PC28
rotation_distance = 8
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PA1
tx_pin = PA0
select_pins = PD0
uart_address = 0
run_current = 1.1
sense_resistor = 0.056
driver_tbl = 2
driver_hend = 3
driver_hstrt = 4
driver_toff = 4

[stepper_z]
step_pin = PC19
dir_pin = !PD20
enable_pin = !PC28
rotation_distance = 8
microsteps = 32
endstop_pin = probe:z_virtual_endstop
position_max = 390
position_min = -15
homing_speed = 20

[tmc2209 stepper_z]
uart_pin = PA1
tx_pin = PA0
uart_address = 3
select_pins = PD0
run_current = 1.1
sense_resistor = 0.056
driver_tbl = 2
driver_hend = 3
driver_hstrt = 4
driver_toff = 4

[stepper_z1]
step_pin = PC16
dir_pin = PD21
enable_pin = !PC28
rotation_distance = 8
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PA1
tx_pin = PA0
uart_address = 0
select_pins = !PD0
run_current = 1.1
sense_resistor = 0.056
driver_tbl = 2
driver_hend = 3
driver_hstrt = 4
driver_toff = 4

[stepper_z2]
step_pin = PC30
dir_pin = !PB0
enable_pin = !PC28
rotation_distance = 8
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PA1
tx_pin = PA0
uart_address = 1
select_pins = !PD0
run_current = 1.1
sense_resistor = 0.056
driver_tbl = 2
driver_hend = 3
driver_hstrt = 4
driver_toff = 4

[extruder]
step_pin = head0:PB3
dir_pin = head0:PB4
enable_pin = !head0:PB5
heater_pin = head0:PA6
microsteps = 16
full_steps_per_rotation = 200
rotation_distance = 22.67895
gear_ratio = 50:8
nozzle_diameter = 0.500
filament_diameter = 1.750
sensor_type = ATC Semitec 104GT-2
sensor_pin = head0:PA0
pullup_resistor = 2200
min_extrude_temp = 170
max_extrude_cross_section = 5
min_temp = -100
max_temp = 325
control = pid
pid_kp = 24.502
pid_ki = 1.027
pid_kd = 146.095

[tmc2209 extruder]
uart_pin = head0:PA9
interpolate = True
run_current = .3
sense_resistor = 0.110
driver_tbl = 2
driver_hend = 3
driver_hstrt = 5
driver_toff = 6

[heater_bed]
heater_pin = PB17
sensor_type = EPCOS 100K B57560G104F
sensor_pin = vref_scaled:PC2
pullup_resistor = 2200
min_temp = -100
max_temp = 130
max_power = 0.8
control = pid
pid_kp = 20.846
pid_ki = 1.241
pid_kd = 87.555

[fan]
pin = PC10
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend]
pin = head0:PA7
heater = extruder
heater_temp = 45
fan_speed = 1

[controller_fan drivers]
pin = PA11
heater = extruder,heater_bed
fan_speed = 1

[fan_generic chamber]
pin = PB11

[bltouch]
sensor_pin = PC31
control_pin = PB1
stow_on_each_sample = false
probe_with_touch_mode = True
x_offset = 21.765
y_offset = 0
speed = 7
lift_speed = 20
samples = 2
samples_result = average
sample_retract_dist = 5.0
samples_tolerance = 0.01
samples_tolerance_retries = 3
z_offset = 1.265

[safe_z_home]
home_xy_position = 150,150
speed = 350
z_hop = 6
z_hop_speed = 15

[quad_gantry_level]
gantry_corners = 
	-68,-16
	368,355
points = 
	50,50
	50,250
	250,250
	250,50
speed = 350
horizontal_move_z = 10
retries = 8
retry_tolerance = 0.015
max_adjust = 16

[bed_mesh]
mesh_min = 25,25
mesh_max = 275,275
probe_count = 7,7
algorithm = bicubic
speed = 350

[output_pin led]
pin = PB13
shutdown_value = 0
value = 1

[filament_switch_sensor fsensor]
pause_on_runout = True
runout_gcode = 
	M118 Filament Runout Detected
	M600
insert_gcode = 
	M118 Filament Load Detected
	LOAD_FILAMENT
event_delay = 3.0
pause_delay = 0.5
switch_pin = PB30

[gcode_macro LOAD_FILAMENT]
gcode = 
	M117 Loading Filament...
	G92 E0.0
	G91
	G1 E40 F400
	G1 E30 F400
	G1 E60 F200
	G90
	G92 E0.0
	M400
	M117 Load Complete
	UPDATE_DELAYED_GCODE ID=clear_display DURATION=5

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	G90
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	G28
	
	{% if printer.configfile.settings.quad_gantry_level %}
	{% if printer.quad_gantry_level.applied == False %}
	QUAD_GANTRY_LEVEL
	G28 Z
	{% endif %}
	{% endif %}
	G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F{30 * 60}
	G4 P1000
	GET_POSITION
	
	
	G0 X{x_min} Y{y_min} Z{bound + 10} F{speed * 60}
	
	{% for i in range(iterations) %}
	
	G0 X{x_min} Y{y_min} F{speed * 60}
	G0 X{x_max} Y{y_max} F{speed * 60}
	G0 X{x_min} Y{y_min} F{speed * 60}
	G0 X{x_max} Y{y_min} F{speed * 60}
	G0 X{x_min} Y{y_max} F{speed * 60}
	G0 X{x_max} Y{y_min} F{speed * 60}
	
	
	G0 X{x_min} Y{y_min} F{speed * 60}
	G0 X{x_min} Y{y_max} F{speed * 60}
	G0 X{x_max} Y{y_max} F{speed * 60}
	G0 X{x_max} Y{y_min} F{speed * 60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
	
	
	G28 X Y
	
	G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F{30 * 60}
	G4 P1000
	GET_POSITION
	
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 83.8
shaper_type_y = mzv
shaper_freq_y = 75.0

[bed_mesh default]
version = 1
points = 
	1.182277, 1.034152, 1.155402, 1.162277, 1.141027, 1.093527
	1.229777, 1.204777, 1.190402, 1.179777, 1.174777, 1.147902
	1.217277, 1.220402, 1.201027, 1.206027, 1.180402, 1.282277
	1.222277, 1.189777, 1.182277, 1.167277, 1.164152, 1.143527
	1.146027, 1.152277, 1.134777, 1.151027, 1.206652, 1.117277
	1.100402, 1.102277, 1.112902, 1.132277, 1.133527, 1.107277
x_count = 6
y_count = 6
mesh_x_pps = 2
mesh_y_pps = 2
algo = lagrange
tension = 0.2
min_x = 40.715
max_x = 259.265
min_y = 38.99
max_y = 261.19
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
webhooks client 1964183344: New connection
webhooks client 1964183344: Client info {'program': 'Moonraker', 'version': 'v0.7.1-885-g4550664'}
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
MCU error during connect
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/mcu.py", line 777, in _mcu_identify
    self._serial.connect_uart(self._serialport, self._baud, rts)
  File "/home/pi/klipper/klippy/serialhdl.py", line 182, in connect_uart
    self._error("Unable to connect")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Unable to connect

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 176, in _connect
    self.send_event("klippy:mcu_identify")
  File "/home/pi/klipper/klippy/klippy.py", line 263, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/klippy.py", line 263, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/mcu.py", line 782, in _mcu_identify
    raise error(str(e))
mcu.error: mcu 'mcu': Unable to connect
Build file /home/pi/klipper/klippy/../.config(3196): Mon Feb 20 23:55:44 2023
========= Last MCU build config =========
CONFIG_LOW_LEVEL_OPTIONS=y
# CONFIG_MACH_AVR is not set
# CONFIG_MACH_ATSAM is not set
# CONFIG_MACH_ATSAMD is not set
# CONFIG_MACH_LPC176X is not set
CONFIG_MACH_STM32=y
# CONFIG_MACH_HC32F460 is not set
# CONFIG_MACH_RP2040 is not set
# CONFIG_MACH_PRU is not set
# CONFIG_MACH_LINUX is not set
# CONFIG_MACH_SIMU is not set
CONFIG_BOARD_DIRECTORY="stm32"
CONFIG_MCU="stm32f103xe"
CONFIG_CLOCK_FREQ=72000000
CONFIG_FLASH_SIZE=0x10000
CONFIG_FLASH_BOOT_ADDRESS=0x8000000
CONFIG_RAM_START=0x20000000
CONFIG_RAM_SIZE=0x5000
CONFIG_STACK_SIZE=512
CONFIG_FLASH_APPLICATION_ADDRESS=0x8002000
CONFIG_STM32_SELECT=y
CONFIG_MACH_STM32F103=y
# CONFIG_MACH_STM32F207 is not set
# CONFIG_MACH_STM32F401 is not set
# CONFIG_MACH_STM32F405 is not set
# CONFIG_MACH_STM32F407 is not set
# CONFIG_MACH_STM32F429 is not set
# CONFIG_MACH_STM32F446 is not set
# CONFIG_MACH_STM32F031 is not set
# CONFIG_MACH_STM32F042 is not set
# CONFIG_MACH_STM32F070 is not set
# CONFIG_MACH_STM32F072 is not set
# CONFIG_MACH_STM32G070 is not set
# CONFIG_MACH_STM32G071 is not set
# CONFIG_MACH_STM32G0B0 is not set
# CONFIG_MACH_STM32G0B1 is not set
# CONFIG_MACH_STM32G431 is not set
# CONFIG_MACH_STM32H723 is not set
# CONFIG_MACH_STM32H743 is not set
# CONFIG_MACH_STM32H750 is not set
# CONFIG_MACH_STM32L412 is not set
# CONFIG_MACH_STM32F103x6 is not set
CONFIG_MACH_STM32F1=y
CONFIG_HAVE_STM32_USBFS=y
CONFIG_HAVE_STM32_CANBUS=y
# CONFIG_STM32F103GD_DISABLE_SWD is not set
CONFIG_STM32_DFU_ROM_ADDRESS=0
CONFIG_STM32_FLASH_START_2000=y
# CONFIG_STM32_FLASH_START_5000 is not set
# CONFIG_STM32_FLASH_START_7000 is not set
# CONFIG_STM32_FLASH_START_8000 is not set
# CONFIG_STM32_FLASH_START_8800 is not set
# CONFIG_STM32_FLASH_START_10000 is not set
# CONFIG_STM32_FLASH_START_800 is not set
# CONFIG_STM32_FLASH_START_1000 is not set
# CONFIG_STM32_FLASH_START_4000 is not set
# CONFIG_STM32_FLASH_START_0000 is not set
CONFIG_STM32_CLOCK_REF_8M=y
# CONFIG_STM32_CLOCK_REF_12M is not set
# CONFIG_STM32_CLOCK_REF_16M is not set
# CONFIG_STM32_CLOCK_REF_20M is not set
# CONFIG_STM32_CLOCK_REF_25M is not set
# CONFIG_STM32_CLOCK_REF_INTERNAL is not set
CONFIG_CLOCK_REF_FREQ=8000000
CONFIG_STM32F0_TRIM=16
# CONFIG_STM32_USB_PA11_PA12 is not set
# CONFIG_STM32_SERIAL_USART1 is not set
# CONFIG_STM32_SERIAL_USART1_ALT_PB7_PB6 is not set
# CONFIG_STM32_SERIAL_USART2 is not set
# CONFIG_STM32_SERIAL_USART2_ALT_PD6_PD5 is not set
# CONFIG_STM32_SERIAL_USART3 is not set
# CONFIG_STM32_SERIAL_USART3_ALT_PD9_PD8 is not set
# CONFIG_STM32_CANBUS_PA11_PA12 is not set
# CONFIG_STM32_CANBUS_PA11_PB9 is not set
CONFIG_STM32_MMENU_CANBUS_PB8_PB9=y
# CONFIG_STM32_MMENU_CANBUS_PD0_PD1 is not set
CONFIG_STM32_CANBUS_PB8_PB9=y
CONFIG_USB_VENDOR_ID=0x1d50
CONFIG_USB_DEVICE_ID=0x614e
CONFIG_USB_SERIAL_NUMBER="12345"
CONFIG_CANSERIAL=y
CONFIG_CANBUS=y
CONFIG_CANBUS_FREQUENCY=500000
CONFIG_CANBUS_FILTER=y
CONFIG_INITIAL_PINS=""
CONFIG_HAVE_GPIO=y
CONFIG_HAVE_GPIO_ADC=y
CONFIG_HAVE_GPIO_SPI=y
CONFIG_HAVE_GPIO_I2C=y
CONFIG_HAVE_GPIO_HARD_PWM=y
CONFIG_HAVE_GPIO_BITBANGING=y
CONFIG_HAVE_STRICT_TIMING=y
CONFIG_HAVE_CHIPID=y
CONFIG_HAVE_STEPPER_BOTH_EDGE=y
CONFIG_HAVE_BOOTLOADER_REQUEST=y
CONFIG_INLINE_STEPPER_HACK=y
=======================
Build file /home/pi/klipper/klippy/../out/klipper.dict(7665): Mon Feb 20 23:56:05 2023
Last MCU build version: v0.11.0-109-g738ddaf3
Last MCU build tools: gcc: (15:7-2018-q2-6) 7.3.1 20180622 (release) [ARM/embedded-7-branch revision 261907] binutils: (2.31.1-11+rpi1+11) 2.31.1
Last MCU build config: ADC_MAX=4095 BUS_PINS_i2c1=PB6,PB7 BUS_PINS_i2c1a=PB8,PB9 BUS_PINS_i2c2=PB10,PB11 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi3=PB4,PB5,PB3 CANBUS_FREQUENCY=500000 CLOCK_FREQ=72000000 MCU=stm32f103xe PWM_MAX=255 RECEIVE_WINDOW=192 RESERVE_PINS_CAN=PB8,PB9 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
Build file /home/pi/klipper/klippy/../out/klipper.elf(292976): Mon Feb 20 23:56:11 2023
webhooks client 1964183344: Disconnected
Restarting printer
Start printer at Mon Apr 24 23:08:25 2023 (1682402905.4 182.5)
===== Config file =====
[gcode_macro BED_MESH_CALIBRATE]
rename_existing = _BED_MESH_CALIBRATE
variable_led_enable = False
variable_status_macro = 'status_meshing'
variable_fuzz_enable = False
variable_fuzz_min = 0
variable_fuzz_max = 4
variable_probe_dock_enable = False
variable_attach_macro = 'Attach_Probe'
variable_detach_macro = 'Dock_Probe'
gcode = 
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}
	{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}
	{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (printer.configfile.settings.bed_mesh.probe_count[0]-2)  %}
	{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (printer.configfile.settings.bed_mesh.probe_count[1]-2)  %}
	{% set x_min = bed_mesh_min[0] %}
	{% set y_min = bed_mesh_min[1] %}
	{% set x_max = bed_mesh_max[0] %}
	{% set y_max = bed_mesh_max[1] %}
	
	{ action_respond_info("{} points, clamping to mesh [{!r} {!r}]".format(
	all_points | count,
	bed_mesh_min,
	bed_mesh_max,
	)) }
	
	{% if fuzz_enable == True %}
	{% if all_points %}
	{% set fuzz_range = range(fuzz_min * 100 | int, fuzz_max * 100 | int) %}
	{% set x_min = ( bed_mesh_min[0], ((all_points | map(attribute=0) | min - (fuzz_range | random / 100.0)) | default(bed_mesh_min[0])) ) | max %}
	{% set y_min = ( bed_mesh_min[1], ((all_points | map(attribute=1) | min - (fuzz_range | random / 100.0)) | default(bed_mesh_min[1])) ) | max %}
	{% set x_max = ( bed_mesh_max[0], ((all_points | map(attribute=0) | max + (fuzz_range | random / 100.0)) | default(bed_mesh_max[0])) ) | min %}
	{% set y_max = ( bed_mesh_max[1], ((all_points | map(attribute=1) | max + (fuzz_range | random / 100.0)) | default(bed_mesh_max[1])) ) | min %}
	{% endif %}
	{% else %}
	{% set x_min = [ bed_mesh_min[0], (all_points | map(attribute=0) | min | default(bed_mesh_min[0])) ] | max %}
	{% set y_min = [ bed_mesh_min[1], (all_points | map(attribute=1) | min | default(bed_mesh_min[1])) ] | max %}
	{% set x_max = [ bed_mesh_max[0], (all_points | map(attribute=0) | max | default(bed_mesh_max[0])) ] | min %}
	{% set y_max = [ bed_mesh_max[1], (all_points | map(attribute=1) | max | default(bed_mesh_max[1])) ] | min %}
	{% endif %}
	
	{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(
	(x_min, y_min),
	(x_max, y_max),
	)) }
	
	{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | int) + 2 %}
	{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | int) + 2 %}
	
	{% if (([points_x, points_y]|max) > 6) %}
	{% set algorithm = "bicubic" %}
	{% set min_points = 4 %}
	{% else %}
	{% set algorithm = "lagrange" %}
	{% set min_points = 3 %}
	{% endif %}
	{ action_respond_info( "Algorithm: {}".format(algorithm)) }
	
	{% set points_x = [points_x, min_points]|max  %}
	{% set points_y = [points_y, min_points]|max  %}
	{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }
	
	{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}
	{% set ref_index = (points_x * points_y / 2) | int %}
	{ action_respond_info( "Reference index: {}".format(ref_index) ) }
	{% else %}
	{% set ref_index = -1 %}
	{% endif %}
	
	{% if probe_dock_enable == True %}
	{attach_macro}
	{% endif %}
	
	{% if led_enable == True %}
	{status_macro}
	{% endif %}
	
	_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}
	
	{% if probe_dock_enable == True %}
	{detach_macro}
	{% endif %}

[gcode_macro ADAPTIVE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
variable_adaptive_enable = True
variable_z_height = 0.3
variable_tip_distance = 10
variable_purge_amount = 25
variable_flow_rate = 10
variable_x_default = 10
variable_y_default = 10
variable_size = 10
variable_distance_to_object_x = 15
variable_distance_to_object_y = 0
variable_travel_speed = 300
gcode = 
	{% if adaptive_enable == True %}
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set x_origin = (all_points | map(attribute=0) | min | default(x_default + distance_to_object_x + size)) - distance_to_object_x - size %}
	{% set y_origin = (all_points | map(attribute=1) | min | default(y_default + distance_to_object_y + size)) - distance_to_object_y - size %}
	{% set x_origin = ([x_origin, 0] | max) %}
	{% set y_origin = ([y_origin, 0] | max) %}
	{% else %}
	{% set x_origin = x_default | float %}
	{% set y_origin = y_default | float %}
	{% endif %}
	{% set purge_move_speed = 2.31 * size * flow_rate / (purge_amount * 2.405) %}
	{% set prepurge_speed = flow_rate / 2.405 %}
	{ action_respond_info( "x: " + x_origin|string + " y: " + y_origin|string + " purge_move_speed: " + purge_move_speed|string + " prepurge_speed: " + prepurge_speed|string ) }
	
	G92 E0
	G0 F{travel_speed*60}
	G90
	G0 X{x_origin} Y{y_origin+size/2}
	G0 Z{z_height}
	M83
	G1 E{tip_distance} F{prepurge_speed*60}
	G1 X{x_origin+size*0.289} Y{y_origin+size} E{purge_amount/4} F{purge_move_speed*60}
	G1 E-.5 F2100
	G0 Z{z_height*2}
	G0 X{x_origin+size*0.789} Y{y_origin+size}
	G0 Z{z_height}
	G1 E.5 F2100
	G1 X{x_origin+size*0.211} Y{y_origin} E{purge_amount/2} F{purge_move_speed*60}
	G1 E-.5 F2100
	G0 Z{z_height*2}
	G0 X{x_origin+size*0.711} Y{y_origin}
	G0 Z{z_height}
	G1 E.5 F2100
	G1 X{x_origin+size} Y{y_origin+size/2}  E{purge_amount/4} F{purge_move_speed*60}
	G1 E-.5 F2100
	G92 E0
	G0 Z{z_height*2}

[virtual_sdcard]
path = /home/pi/gcode_files

[pause_resume]

[gcode_macro PRINT_START]
variable_parameter_area_start = 0,0
variable_parameter_area_end = 0,0
gcode = 
	SET_FAN_SPEED FAN=chamber SPEED=.5
	SET_FAN_SPEED FAN=drivers SPEED=1
	{% set BED = params.BED|default(55)|int %}
	{% set EXTRUDER = params.EXTRUDER|default(205)|int %}
	G28 X Y
	
	M104 S170
	M140 S{BED}
	RESPOND PREFIX= MSG="Waiting for temperatures..."
	M117  Waiting for temperatures...
	M190 S{BED}
	RESPOND PREFIX= MSG="Waiting for thermal expansion..."
	M117 Waiting for thermal expansion...
	G4 P30000
	RESPOND PREFIX= MSG="Creating a mesh..."
	M117 Creating a mesh...
	G28
	QUAD_GANTRY_LEVEL
	BED_MESH_CALIBRATE
	
	M104 S{EXTRUDER}
	
	
	RESPOND PREFIX= MSG="Moving to prime position"
	M117 Moving to prime position
	G1 X25 Y-2 Z10 F5000.0
	{% if printer.extruder.temperature < params.EXTRUDER|float*0.98 %}
	M109 S{params.EXTRUDER|float*0.98}
	{% endif %}
	M104 S{EXTRUDER}
	G4 P30000
	ADAPTIVE_PURGE
	RESPOND PREFIX= MSG="Printing..."
	M117 Printing...
	M117

[gcode_macro PID_TUNE]
gcode = 
	G28
	G1 Z10 F7800
	M106 S64
	PID_CALIBRATE HEATER=extruder TARGET=245
	
	
	RESPOND PREFIX= MSG="Moving to prime position"
	M117 Moving to prime position
	G1 X25 Y-3 Z10 F5000.0
	{% if printer.extruder.temperature < params.EXTRUDER|float*0.98 %}
	M109 S{params.EXTRUDER|float*0.98}
	{% endif %}
	M104 S{EXTRUDER}
	
	RESPOND PREFIX= MSG="Priming the nozzle"
	M117 Priming the nozzle
	G92 E0
	G0 Z0.15
	G0 X55 Y-2 Z0.28 F1500.0
	G92 E0
	G1 X195 Y-2 Z0.28 F1500.0 E15
	G92 E0
	G10
	G1 Z2.0 F3000
	
	RESPOND PREFIX= MSG="Printing..."
	M117 Printing...
	M117

[display_status]

[gcode_macro END_PRINT]
gcode = 
	
	G91
	G1 E-2
	
	G90
	
	TURN_OFF_HEATERS
	
	G28 X Y

[gcode_macro PAUSE]
rename_existing = BASE_PAUSE
gcode = 
	
	SAVE_GCODE_STATE NAME=PAUSE_state
	BASE_PAUSE
	G91
	G1 E-{2} F2100
	G1 Z{10}
	G90
	G1 X{230} Y{230} F6000
	G91

[gcode_macro RESUME]
rename_existing = BASE_RESUME
gcode = 
	G91
	G1 E{s} F2100
	G90
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
	BASE_RESUME

[gcode_macro CANCEL_PRINT]
rename_existing = BASE_CANCEL_PRINT
gcode = 
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	SDCARD_RESET_FILE
	BASE_CANCEL_PRINT
	
	G91
	G1 Z10 F8000
	G90
	G1 X0 Y222 E-3 F8000
	DISABLE_MOTORS
	M106 S0
	M117 Print Canceled

[exclude_object]

[gcode_macro M486]
gcode = 
	
	
	
	
	
	
	
	
	
	
	
	{% if 'exclude_object' not in printer %}
	{action_raise_error("[exclude_object] is not enabled")}
	{% endif %}
	
	{% if 'T' in params %}
	EXCLUDE_OBJECT RESET=1
	
	{% for i in range(params.T | int) %}
	EXCLUDE_OBJECT_DEFINE NAME={i}
	{% endfor %}
	{% endif %}
	
	{% if 'C' in params %}
	EXCLUDE_OBJECT CURRENT=1
	{% endif %}
	
	{% if 'P' in params %}
	EXCLUDE_OBJECT NAME={params.P}
	{% endif %}
	
	{% if 'S' in params %}
	{% if params.S == '-1' %}
	{% if printer.exclude_object.current_object %}
	EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
	{% endif %}
	{% else %}
	EXCLUDE_OBJECT_START NAME={params.S}
	{% endif %}
	{% endif %}
	
	{% if 'U' in params %}
	EXCLUDE_OBJECT RESET=1 NAME={params.U}
	{% endif %}

[gcode_macro GET_TIMELAPSE_SETUP]
description = Print the Timelapse setup
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% set output_txt = ["Timelapse Setup:"] %}
	{% set _dummy = output_txt.append("enable: %s" % tl.enable) %}
	{% set _dummy = output_txt.append("park: %s" % tl.park.enable) %}
	{% if tl.park.enable %}
	{% set _dummy = output_txt.append("park position: %s time: %s s" % (tl.park.pos, tl.park.time)) %}
	{% set _dummy = output_txt.append("park cord x:%s y:%s dz:%s" % (tl.park.coord.x, tl.park.coord.y, tl.park.coord.dz)) %}
	{% set _dummy = output_txt.append("travel speed: %s mm/s" % tl.speed.travel) %}
	{% endif %}
	{% set _dummy = output_txt.append("fw_retract: %s" % tl.extruder.fw_retract) %}
	{% if not tl.extruder.fw_retract %}
	{% set _dummy = output_txt.append("retract: %s mm speed: %s mm/s" % (tl.extruder.retract, tl.speed.retract)) %}
	{% set _dummy = output_txt.append("extrude: %s mm speed: %s mm/s" % (tl.extruder.extrude, tl.speed.extrude)) %}
	{% endif %}
	{% set _dummy = output_txt.append("verbose: %s" % tl.verbose) %}
	{action_respond_info(output_txt|join("\n"))}

[gcode_macro _SET_TIMELAPSE_SETUP]
description = Set user parameters for timelapse
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	
	{% set min = printer.toolhead.axis_minimum %}
	{% set max = printer.toolhead.axis_maximum %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	{% set park = {'min'   : {'x': (min.x / 1.42)|round(3) if round_bed else min.x|round(3),
	'y': (min.y / 1.42)|round(3) if round_bed else min.y|round(3)},
	'max'   : {'x': (max.x / 1.42)|round(3) if round_bed else max.x|round(3),
	'y': (max.y / 1.42)|round(3) if round_bed else max.y|round(3)},
	'center': {'x': (max.x-(max.x-min.x)/2)|round(3),
	'y': (max.y-(max.y-min.y)/2)|round(3)}} %}
	
	{% if params.ENABLE %}
	{% if params.ENABLE|lower is in ['true', 'false'] %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=enable VALUE={True if params.ENABLE|lower == 'true' else False}
	{% else %}
	{action_raise_error("ENABLE=%s not supported. Allowed values are [True, False]" % params.ENABLE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.VERBOSE %}
	{% if params.VERBOSE|lower is in ['true', 'false'] %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=verbose VALUE={True if params.VERBOSE|lower == 'true' else False}
	{% else %}
	{action_raise_error("VERBOSE=%s not supported. Allowed values are [True, False]" % params.VERBOSE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_X %}
	{% if params.CUSTOM_POS_X|float >= min.x and params.CUSTOM_POS_X|float <= max.x %}
	{% set _dummy = tl.park.custom.update({'x':params.CUSTOM_POS_X|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_X=%s must be within [%s - %s]" % (params.CUSTOM_POS_X, min.x, max.x))}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_Y %}
	{% if params.CUSTOM_POS_Y|float >= min.y and params.CUSTOM_POS_Y|float <= max.y %}
	{% set _dummy = tl.park.custom.update({'y':params.CUSTOM_POS_Y|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_Y=%s must be within [%s - %s]" % (params.CUSTOM_POS_Y, min.y, max.y))}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_DZ %}
	{% if params.CUSTOM_POS_DZ|float >= min.z and params.CUSTOM_POS_DZ|float <= max.z %}
	{% set _dummy = tl.park.custom.update({'dz':params.CUSTOM_POS_DZ|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_DZ=%s must be within [%s - %s]" % (params.CUSTOM_POS_DZ, min.z, max.z))}
	{% endif %}
	{% endif %}
	{% if params.PARK_ENABLE %}
	{% if params.PARK_ENABLE|lower is in ['true', 'false'] %}
	{% set _dummy = tl.park.update({'enable':True if params.PARK_ENABLE|lower == 'true' else False}) %}
	{% else %}
	{action_raise_error("PARK_ENABLE=%s not supported. Allowed values are [True, False]" % params.PARK_ENABLE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.PARK_POS %}
	{% if params.PARK_POS|lower is in ['center','front_left','front_right','back_left','back_right','custom','x_only','y_only'] %}
	{% set dic = {'center'      : {'x': park.center.x   , 'y': park.center.y   , 'dz': 1                },
	'front_left'  : {'x': park.min.x      , 'y': park.min.y      , 'dz': 0                },
	'front_right' : {'x': park.max.x      , 'y': park.min.y      , 'dz': 0                },
	'back_left'   : {'x': park.min.x      , 'y': park.max.y      , 'dz': 0                },
	'back_right'  : {'x': park.max.x      , 'y': park.max.y      , 'dz': 0                },
	'custom'      : {'x': tl.park.custom.x, 'y': tl.park.custom.y, 'dz': tl.park.custom.dz},
	'x_only'      : {'x': tl.park.custom.x, 'y': 'none'          , 'dz': tl.park.custom.dz},
	'y_only'      : {'x': 'none'          , 'y': tl.park.custom.y, 'dz': tl.park.custom.dz}} %}
	{% set _dummy = tl.park.update({'pos':params.PARK_POS|lower}) %}
	{% set _dummy = tl.park.update({'coord':dic[tl.park.pos]}) %}
	{% else %}
	{action_raise_error("PARK_POS=%s not supported. Allowed values are [CENTER, FRONT_LEFT, FRONT_RIGHT, BACK_LEFT, BACK_RIGHT, CUSTOM, X_ONLY, Y_ONLY]"
	% params.PARK_POS|upper)}
	{% endif %}
	{% endif %}
	{% if params.PARK_TIME %}
	{% if params.PARK_TIME|float >= 0.0 %}
	{% set _dummy = tl.park.update({'time':params.PARK_TIME|float|round(3)}) %}
	{% else %}
	{action_raise_error("PARK_TIME=%s must be a positive number" % params.PARK_TIME)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=park VALUE="{tl.park}"
	{% if params.TRAVEL_SPEED %}
	{% if params.TRAVEL_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'travel':params.TRAVEL_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("TRAVEL_SPEED=%s must be larger than 0" % params.TRAVEL_SPEED)}
	{% endif %}
	{% endif %}
	{% if params.RETRACT_SPEED %}
	{% if params.RETRACT_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'retract':params.RETRACT_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("RETRACT_SPEED=%s must be larger than 0" % params.RETRACT_SPEED)}
	{% endif %}
	{% endif %}
	{% if params.EXTRUDE_SPEED %}
	{% if params.EXTRUDE_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'extrude':params.EXTRUDE_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("EXTRUDE_SPEED=%s must be larger than 0" % params.EXTRUDE_SPEED)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=speed VALUE="{tl.speed}"
	{% if params.EXTRUDE_DISTANCE %}
	{% if params.EXTRUDE_DISTANCE|float >= 0.0 %}
	{% set _dummy = tl.extruder.update({'extrude':params.EXTRUDE_DISTANCE|float|round(3)}) %}
	{% else %}
	{action_raise_error("EXTRUDE_DISTANCE=%s must be specified as positiv number" % params.EXTRUDE_DISTANCE)}
	{% endif %}
	{% endif %}
	{% if params.RETRACT_DISTANCE %}
	{% if params.RETRACT_DISTANCE|float >= 0.0 %}
	{% set _dummy = tl.extruder.update({'retract':params.RETRACT_DISTANCE|float|round(3)}) %}
	{% else %}
	{action_raise_error("RETRACT_DISTANCE=%s must be specified as positiv number" % params.RETRACT_DISTANCE)}
	{% endif %}
	{% endif %}
	{% if params.FW_RETRACT %}
	{% if params.FW_RETRACT|lower is in ['true', 'false'] %}
	{% if 'firmware_retraction' in printer.configfile.settings %}
	{% set _dummy = tl.extruder.update({'fw_retract': True if params.FW_RETRACT|lower == 'true' else False}) %}
	{% else %}
	{% set _dummy = tl.extruder.update({'fw_retract':False}) %}
	{% if params.FW_RETRACT|capitalize == 'True' %}
	{action_raise_error("[firmware_retraction] not defined in printer.cfg. Can not enable fw_retract")}
	{% endif %}
	{% endif %}
	{% else %}
	{action_raise_error("FW_RETRACT=%s not supported. Allowed values are [True, False]" % params.FW_RETRACT|capitalize)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=extruder VALUE="{tl.extruder}"
	{% if printer.configfile.settings['gcode_macro pause'] is defined %}
	{% set _dummy = tl.macro.update({'pause': printer.configfile.settings['gcode_macro pause'].rename_existing}) %}
	{% endif %}
	{% if printer.configfile.settings['gcode_macro resume'] is defined %}
	{% set _dummy = tl.macro.update({'resume': printer.configfile.settings['gcode_macro resume'].rename_existing}) %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=macro VALUE="{tl.macro}"

[gcode_macro TIMELAPSE_TAKE_FRAME]
description = Take Timelapse shoot
variable_enable = False
variable_takingframe = False
variable_park = {'enable': False,
	'pos'   : 'center',
	'time'  : 0.1,
	'custom': {'x': 0, 'y': 0, 'dz': 0},
	'coord' : {'x': 0, 'y': 0, 'dz': 0}}
variable_extruder = {'fw_retract': False,
	'retract': 1.0,
	'extrude': 1.0}
variable_speed = {'travel': 100,
	'retract': 15,
	'extrude': 15}
variable_verbose = True
variable_restore = {'absolute': {'coordinates': True, 'extrude': True}, 'speed': 1500, 'e':0, 'factor': {'speed': 1.0, 'extrude': 1.0}}
variable_macro = {'pause': 'PAUSE', 'resume': 'RESUME'}
variable_is_paused = False
gcode = 
	{% set hyperlapse = True if params.HYPERLAPSE and params.HYPERLAPSE|lower =='true' else False %}
	{% if enable %}
	{% if (hyperlapse and printer['gcode_macro HYPERLAPSE'].run) or
	(not hyperlapse and not printer['gcode_macro HYPERLAPSE'].run) %}
	{% if park.enable %}
	{% set pos = {'x': 'X' + park.coord.x|string if park.pos != 'y_only' else '',
	'y': 'Y' + park.coord.y|string if park.pos != 'x_only' else '',
	'z': 'Z'+ [printer.gcode_move.gcode_position.z + park.coord.dz, printer.toolhead.axis_maximum.z]|min|string} %}
	{% set restore = {'absolute': {'coordinates': printer.gcode_move.absolute_coordinates,
	'extrude'    : printer.gcode_move.absolute_extrude},
	'speed'   : printer.gcode_move.speed,
	'e'       : printer.gcode_move.gcode_position.e,
	'factor'  : {'speed'  : printer.gcode_move.speed_factor,
	'extrude': printer.gcode_move.extrude_factor}} %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=restore VALUE="{restore}"
	{% if not printer[printer.toolhead.extruder].can_extrude %}
	{% if verbose %}{action_respond_info("Timelapse: Warning, minimum extruder temperature not reached!")}{% endif %}
	{% else %}
	{% if extruder.fw_retract %}
	G10
	{% else %}
	M83
	G0 E-{extruder.retract} F{speed.retract * 60}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=is_paused VALUE=True
	{macro.pause}
	SET_GCODE_OFFSET X=0 Y=0
	G90
	{% if "xyz" not in printer.toolhead.homed_axes %}
	{% if verbose %}{action_respond_info("Timelapse: Warning, axis not homed yet!")}{% endif %}
	{% else %}
	G0 {pos.x} {pos.y} {pos.z} F{speed.travel * 60}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=takingframe VALUE=True
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_TAKE_FRAME DURATION=0.5
	M400
	{% endif %}
	_TIMELAPSE_NEW_FRAME HYPERLAPSE={hyperlapse}
	{% endif %}
	{% else %}
	{% if verbose %}{action_respond_info("Timelapse: disabled, take frame ignored")}{% endif %}
	{% endif %}

[gcode_macro _TIMELAPSE_NEW_FRAME]
description = action call for timelapse shoot. must be a seperate macro
gcode = 
	{action_call_remote_method("timelapse_newframe",
	macropark=printer['gcode_macro TIMELAPSE_TAKE_FRAME'].park,
	hyperlapse=params.HYPERLAPSE)}

[delayed_gcode _WAIT_TIMELAPSE_TAKE_FRAME]
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% set factor = {'speed': printer.gcode_move.speed_factor, 'extrude': printer.gcode_move.extrude_factor} %}
	{% if tl.takingframe %}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_TAKE_FRAME DURATION=0.5
	{% else %}
	{tl.macro.resume} VELOCITY={tl.speed.travel}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=is_paused VALUE=False
	{% if not printer[printer.toolhead.extruder].can_extrude %}
	{action_respond_info("Timelapse: Warning minimum extruder temperature not reached!")}
	{% else %}
	{% if tl.extruder.fw_retract %}
	G11
	{% else %}
	G0 E{tl.extruder.extrude} F{tl.speed.extrude * 60}
	G0 F{tl.restore.speed}
	{% if tl.restore.absolute.extrude %}
	M82
	G92 E{tl.restore.e}
	{% endif %}
	{% endif %}
	{% endif %}
	{% if tl.restore.factor.speed   != factor.speed   %} M220 S{(factor.speed*100)|round(0)}   {% endif %}
	{% if tl.restore.factor.extrude != factor.extrude %} M221 S{(factor.extrude*100)|round(0)} {% endif %}
	{% if not tl.restore.absolute.coordinates %} G91 {% endif %}
	{% endif %}

[gcode_macro HYPERLAPSE]
description = Start/Stop a hyperlapse recording
variable_cycle = 0
variable_run = False
gcode = 
	{% set cycle = params.CYCLE|default(30)|int %}
	{% if params.ACTION and params.ACTION|lower == 'start' %}
	{action_respond_info("Hyperlapse: frames started (Cycle %d sec)" % cycle)}
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=run VALUE=True
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=cycle VALUE={cycle}
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION={cycle}
	TIMELAPSE_TAKE_FRAME HYPERLAPSE=True
	{% elif params.ACTION and params.ACTION|lower == 'stop' %}
	{% if run %}{action_respond_info("Hyperlapse: frames stopped")}{% endif %}
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=run VALUE=False
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION=0
	{% else %}
	{action_raise_error("Hyperlapse: No valid input parameter
	Use:
	- HYPERLAPSE ACTION=START [CYCLE=time]
	- HYPERLAPSE ACTION=STOP")}
	{% endif %}

[delayed_gcode _HYPERLAPSE_LOOP]
gcode = 
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION={printer["gcode_macro HYPERLAPSE"].cycle}
	TIMELAPSE_TAKE_FRAME HYPERLAPSE=True

[gcode_macro TIMELAPSE_RENDER]
description = Render Timelapse video and wait for the result
variable_render = False
variable_run_identifier = 0
gcode = 
	{action_respond_info("Timelapse: Rendering started")}
	{action_call_remote_method("timelapse_render", byrendermacro="True")}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_RENDER VARIABLE=render VALUE=True
	{printer.configfile.settings['gcode_macro pause'].rename_existing}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_RENDER DURATION=0.5

[delayed_gcode _WAIT_TIMELAPSE_RENDER]
gcode = 
	{% set ri = printer['gcode_macro TIMELAPSE_RENDER'].run_identifier % 4 %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_RENDER VARIABLE=run_identifier VALUE={ri + 1}
	{% if printer['gcode_macro TIMELAPSE_RENDER'].render %}
	M117 Rendering {['-','\\','|','/'][ri]}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_RENDER DURATION=0.5
	{% else %}
	{action_respond_info("Timelapse: Rendering finished")}
	M117
	{printer.configfile.settings['gcode_macro resume'].rename_existing}
	{% endif %}

[gcode_macro TEST_STREAM_DELAY]
description = Helper macro to find stream and park delay
gcode = 
	{% set min = printer.toolhead.axis_minimum %}
	{% set max = printer.toolhead.axis_maximum %}
	{% set act = printer.toolhead.position %}
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% if act.z > 5.0 %}
	G0 X{min.x + 5.0} F{tl.speed.travel|int * 60}
	G0 X{(max.x-min.x)/2}
	G4 P{tl.park.time|float * 1000}
	_TIMELAPSE_NEW_FRAME HYPERLAPSE=FALSE
	G0 X{max.x - 5.0}
	{% else %}
	{action_raise_error("Toolhead z %.3f to low. Please place head above z = 5.0" % act.z)}
	{% endif %}

[force_move]
enable_force_move = True

[mcu head0]
canbus_uuid = 20195bac64c4

[temperature_sensor CANBOARD]
sensor_type = temperature_mcu
sensor_mcu = head0

[idle_timeout]
timeout = 100000

[mcu]
serial = /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00

[adc_scaled vref_scaled]
vref_pin = PB5
vssa_pin = PB4

[temperature_sensor pi_cpu]
sensor_type = temperature_host
gcode_id = P

[printer]
kinematics = corexy
max_velocity = 600
max_accel = 15000
max_accel_to_decel = 10000
square_corner_velocity = 10
max_z_velocity = 50
max_z_accel = 180

[stepper_x]
step_pin = PC25
dir_pin = !PB29
enable_pin = !PC28
rotation_distance = 40
microsteps = 32
endstop_pin = ^!head0:PB12
position_endstop = 303
position_max = 303
position_min = 0
homing_speed = 100

[tmc2209 stepper_x]
uart_pin = PA1
tx_pin = PA0
select_pins = PD0
uart_address = 1
run_current = 1
sense_resistor = 0.056

[stepper_y]
step_pin = PC24
dir_pin = !PB28
enable_pin = !PC28
rotation_distance = 40
microsteps = 32
endstop_pin = ^PC4
position_endstop = 308
position_max = 308
position_min = -3
homing_speed = 100
homing_retract_dist = 30

[tmc2209 stepper_y]
uart_pin = PA1
tx_pin = PA0
select_pins = PD0
uart_address = 2
run_current = 1
sense_resistor = 0.056

[stepper_z3]
step_pin = PC26
dir_pin = PB3
enable_pin = !PC28
rotation_distance = 8
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PA1
tx_pin = PA0
select_pins = PD0
uart_address = 0
run_current = 1.1
sense_resistor = 0.056
driver_tbl = 2
driver_hend = 3
driver_hstrt = 4
driver_toff = 4

[stepper_z]
step_pin = PC19
dir_pin = !PD20
enable_pin = !PC28
rotation_distance = 8
microsteps = 32
endstop_pin = probe:z_virtual_endstop
position_max = 390
position_min = -15
homing_speed = 20

[tmc2209 stepper_z]
uart_pin = PA1
tx_pin = PA0
uart_address = 3
select_pins = PD0
run_current = 1.1
sense_resistor = 0.056
driver_tbl = 2
driver_hend = 3
driver_hstrt = 4
driver_toff = 4

[stepper_z1]
step_pin = PC16
dir_pin = PD21
enable_pin = !PC28
rotation_distance = 8
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PA1
tx_pin = PA0
uart_address = 0
select_pins = !PD0
run_current = 1.1
sense_resistor = 0.056
driver_tbl = 2
driver_hend = 3
driver_hstrt = 4
driver_toff = 4

[stepper_z2]
step_pin = PC30
dir_pin = !PB0
enable_pin = !PC28
rotation_distance = 8
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PA1
tx_pin = PA0
uart_address = 1
select_pins = !PD0
run_current = 1.1
sense_resistor = 0.056
driver_tbl = 2
driver_hend = 3
driver_hstrt = 4
driver_toff = 4

[extruder]
step_pin = head0:PB3
dir_pin = head0:PB4
enable_pin = !head0:PB5
heater_pin = head0:PA6
microsteps = 16
full_steps_per_rotation = 200
rotation_distance = 22.67895
gear_ratio = 50:8
nozzle_diameter = 0.500
filament_diameter = 1.750
sensor_type = ATC Semitec 104GT-2
sensor_pin = head0:PA0
pullup_resistor = 2200
min_extrude_temp = 170
max_extrude_cross_section = 5
min_temp = -100
max_temp = 325
control = pid
pid_kp = 24.502
pid_ki = 1.027
pid_kd = 146.095

[tmc2209 extruder]
uart_pin = head0:PA9
interpolate = True
run_current = .3
sense_resistor = 0.110
driver_tbl = 2
driver_hend = 3
driver_hstrt = 5
driver_toff = 6

[heater_bed]
heater_pin = PB17
sensor_type = EPCOS 100K B57560G104F
sensor_pin = vref_scaled:PC2
pullup_resistor = 2200
min_temp = -100
max_temp = 130
max_power = 0.8
control = pid
pid_kp = 20.846
pid_ki = 1.241
pid_kd = 87.555

[fan]
pin = PC10
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend]
pin = head0:PA7
heater = extruder
heater_temp = 45
fan_speed = 1

[controller_fan drivers]
pin = PA11
heater = extruder,heater_bed
fan_speed = 1

[fan_generic chamber]
pin = PB11

[bltouch]
sensor_pin = PC31
control_pin = PB1
stow_on_each_sample = false
probe_with_touch_mode = True
x_offset = 21.765
y_offset = 0
speed = 7
lift_speed = 20
samples = 2
samples_result = average
sample_retract_dist = 5.0
samples_tolerance = 0.01
samples_tolerance_retries = 3
z_offset = 1.265

[safe_z_home]
home_xy_position = 150,150
speed = 350
z_hop = 6
z_hop_speed = 15

[quad_gantry_level]
gantry_corners = 
	-68,-16
	368,355
points = 
	50,50
	50,250
	250,250
	250,50
speed = 350
horizontal_move_z = 10
retries = 8
retry_tolerance = 0.015
max_adjust = 16

[bed_mesh]
mesh_min = 25,25
mesh_max = 275,275
probe_count = 7,7
algorithm = bicubic
speed = 350

[output_pin led]
pin = PB13
shutdown_value = 0
value = 1

[filament_switch_sensor fsensor]
pause_on_runout = True
runout_gcode = 
	M118 Filament Runout Detected
	M600
insert_gcode = 
	M118 Filament Load Detected
	LOAD_FILAMENT
event_delay = 3.0
pause_delay = 0.5
switch_pin = PB30

[gcode_macro LOAD_FILAMENT]
gcode = 
	M117 Loading Filament...
	G92 E0.0
	G91
	G1 E40 F400
	G1 E30 F400
	G1 E60 F200
	G90
	G92 E0.0
	M400
	M117 Load Complete
	UPDATE_DELAYED_GCODE ID=clear_display DURATION=5

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	G90
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	G28
	
	{% if printer.configfile.settings.quad_gantry_level %}
	{% if printer.quad_gantry_level.applied == False %}
	QUAD_GANTRY_LEVEL
	G28 Z
	{% endif %}
	{% endif %}
	G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F{30 * 60}
	G4 P1000
	GET_POSITION
	
	
	G0 X{x_min} Y{y_min} Z{bound + 10} F{speed * 60}
	
	{% for i in range(iterations) %}
	
	G0 X{x_min} Y{y_min} F{speed * 60}
	G0 X{x_max} Y{y_max} F{speed * 60}
	G0 X{x_min} Y{y_min} F{speed * 60}
	G0 X{x_max} Y{y_min} F{speed * 60}
	G0 X{x_min} Y{y_max} F{speed * 60}
	G0 X{x_max} Y{y_min} F{speed * 60}
	
	
	G0 X{x_min} Y{y_min} F{speed * 60}
	G0 X{x_min} Y{y_max} F{speed * 60}
	G0 X{x_max} Y{y_max} F{speed * 60}
	G0 X{x_max} Y{y_min} F{speed * 60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
	
	
	G28 X Y
	
	G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F{30 * 60}
	G4 P1000
	GET_POSITION
	
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 83.8
shaper_type_y = mzv
shaper_freq_y = 75.0

[bed_mesh default]
version = 1
points = 
	1.182277, 1.034152, 1.155402, 1.162277, 1.141027, 1.093527
	1.229777, 1.204777, 1.190402, 1.179777, 1.174777, 1.147902
	1.217277, 1.220402, 1.201027, 1.206027, 1.180402, 1.282277
	1.222277, 1.189777, 1.182277, 1.167277, 1.164152, 1.143527
	1.146027, 1.152277, 1.134777, 1.151027, 1.206652, 1.117277
	1.100402, 1.102277, 1.112902, 1.132277, 1.133527, 1.107277
x_count = 6
y_count = 6
mesh_x_pps = 2
mesh_y_pps = 2
algo = lagrange
tension = 0.2
min_x = 40.715
max_x = 259.265
min_y = 38.99
max_y = 261.19
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
webhooks client 1970324464: New connection
webhooks client 1970324464: Client info {'program': 'Moonraker', 'version': 'v0.7.1-885-g4550664'}
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
MCU error during connect
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/mcu.py", line 777, in _mcu_identify
    self._serial.connect_uart(self._serialport, self._baud, rts)
  File "/home/pi/klipper/klippy/serialhdl.py", line 182, in connect_uart
    self._error("Unable to connect")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'mcu': Unable to connect

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 176, in _connect
    self.send_event("klippy:mcu_identify")
  File "/home/pi/klipper/klippy/klippy.py", line 263, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/klippy.py", line 263, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/mcu.py", line 782, in _mcu_identify
    raise error(str(e))
mcu.error: mcu 'mcu': Unable to connect
Build file /home/pi/klipper/klippy/../.config(3196): Mon Feb 20 23:55:44 2023
========= Last MCU build config =========
CONFIG_LOW_LEVEL_OPTIONS=y
# CONFIG_MACH_AVR is not set
# CONFIG_MACH_ATSAM is not set
# CONFIG_MACH_ATSAMD is not set
# CONFIG_MACH_LPC176X is not set
CONFIG_MACH_STM32=y
# CONFIG_MACH_HC32F460 is not set
# CONFIG_MACH_RP2040 is not set
# CONFIG_MACH_PRU is not set
# CONFIG_MACH_LINUX is not set
# CONFIG_MACH_SIMU is not set
CONFIG_BOARD_DIRECTORY="stm32"
CONFIG_MCU="stm32f103xe"
CONFIG_CLOCK_FREQ=72000000
CONFIG_FLASH_SIZE=0x10000
CONFIG_FLASH_BOOT_ADDRESS=0x8000000
CONFIG_RAM_START=0x20000000
CONFIG_RAM_SIZE=0x5000
CONFIG_STACK_SIZE=512
CONFIG_FLASH_APPLICATION_ADDRESS=0x8002000
CONFIG_STM32_SELECT=y
CONFIG_MACH_STM32F103=y
# CONFIG_MACH_STM32F207 is not set
# CONFIG_MACH_STM32F401 is not set
# CONFIG_MACH_STM32F405 is not set
# CONFIG_MACH_STM32F407 is not set
# CONFIG_MACH_STM32F429 is not set
# CONFIG_MACH_STM32F446 is not set
# CONFIG_MACH_STM32F031 is not set
# CONFIG_MACH_STM32F042 is not set
# CONFIG_MACH_STM32F070 is not set
# CONFIG_MACH_STM32F072 is not set
# CONFIG_MACH_STM32G070 is not set
# CONFIG_MACH_STM32G071 is not set
# CONFIG_MACH_STM32G0B0 is not set
# CONFIG_MACH_STM32G0B1 is not set
# CONFIG_MACH_STM32G431 is not set
# CONFIG_MACH_STM32H723 is not set
# CONFIG_MACH_STM32H743 is not set
# CONFIG_MACH_STM32H750 is not set
# CONFIG_MACH_STM32L412 is not set
# CONFIG_MACH_STM32F103x6 is not set
CONFIG_MACH_STM32F1=y
CONFIG_HAVE_STM32_USBFS=y
CONFIG_HAVE_STM32_CANBUS=y
# CONFIG_STM32F103GD_DISABLE_SWD is not set
CONFIG_STM32_DFU_ROM_ADDRESS=0
CONFIG_STM32_FLASH_START_2000=y
# CONFIG_STM32_FLASH_START_5000 is not set
# CONFIG_STM32_FLASH_START_7000 is not set
# CONFIG_STM32_FLASH_START_8000 is not set
# CONFIG_STM32_FLASH_START_8800 is not set
# CONFIG_STM32_FLASH_START_10000 is not set
# CONFIG_STM32_FLASH_START_800 is not set
# CONFIG_STM32_FLASH_START_1000 is not set
# CONFIG_STM32_FLASH_START_4000 is not set
# CONFIG_STM32_FLASH_START_0000 is not set
CONFIG_STM32_CLOCK_REF_8M=y
# CONFIG_STM32_CLOCK_REF_12M is not set
# CONFIG_STM32_CLOCK_REF_16M is not set
# CONFIG_STM32_CLOCK_REF_20M is not set
# CONFIG_STM32_CLOCK_REF_25M is not set
# CONFIG_STM32_CLOCK_REF_INTERNAL is not set
CONFIG_CLOCK_REF_FREQ=8000000
CONFIG_STM32F0_TRIM=16
# CONFIG_STM32_USB_PA11_PA12 is not set
# CONFIG_STM32_SERIAL_USART1 is not set
# CONFIG_STM32_SERIAL_USART1_ALT_PB7_PB6 is not set
# CONFIG_STM32_SERIAL_USART2 is not set
# CONFIG_STM32_SERIAL_USART2_ALT_PD6_PD5 is not set
# CONFIG_STM32_SERIAL_USART3 is not set
# CONFIG_STM32_SERIAL_USART3_ALT_PD9_PD8 is not set
# CONFIG_STM32_CANBUS_PA11_PA12 is not set
# CONFIG_STM32_CANBUS_PA11_PB9 is not set
CONFIG_STM32_MMENU_CANBUS_PB8_PB9=y
# CONFIG_STM32_MMENU_CANBUS_PD0_PD1 is not set
CONFIG_STM32_CANBUS_PB8_PB9=y
CONFIG_USB_VENDOR_ID=0x1d50
CONFIG_USB_DEVICE_ID=0x614e
CONFIG_USB_SERIAL_NUMBER="12345"
CONFIG_CANSERIAL=y
CONFIG_CANBUS=y
CONFIG_CANBUS_FREQUENCY=500000
CONFIG_CANBUS_FILTER=y
CONFIG_INITIAL_PINS=""
CONFIG_HAVE_GPIO=y
CONFIG_HAVE_GPIO_ADC=y
CONFIG_HAVE_GPIO_SPI=y
CONFIG_HAVE_GPIO_I2C=y
CONFIG_HAVE_GPIO_HARD_PWM=y
CONFIG_HAVE_GPIO_BITBANGING=y
CONFIG_HAVE_STRICT_TIMING=y
CONFIG_HAVE_CHIPID=y
CONFIG_HAVE_STEPPER_BOTH_EDGE=y
CONFIG_HAVE_BOOTLOADER_REQUEST=y
CONFIG_INLINE_STEPPER_HACK=y
=======================
Build file /home/pi/klipper/klippy/../out/klipper.dict(7665): Mon Feb 20 23:56:05 2023
Last MCU build version: v0.11.0-109-g738ddaf3
Last MCU build tools: gcc: (15:7-2018-q2-6) 7.3.1 20180622 (release) [ARM/embedded-7-branch revision 261907] binutils: (2.31.1-11+rpi1+11) 2.31.1
Last MCU build config: ADC_MAX=4095 BUS_PINS_i2c1=PB6,PB7 BUS_PINS_i2c1a=PB8,PB9 BUS_PINS_i2c2=PB10,PB11 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi3=PB4,PB5,PB3 CANBUS_FREQUENCY=500000 CLOCK_FREQ=72000000 MCU=stm32f103xe PWM_MAX=255 RECEIVE_WINDOW=192 RESERVE_PINS_CAN=PB8,PB9 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
Build file /home/pi/klipper/klippy/../out/klipper.elf(292976): Mon Feb 20 23:56:11 2023
webhooks client 1970324464: Disconnected
Restarting printer
Start printer at Mon Apr 24 23:10:00 2023 (1682403000.8 277.8)
===== Config file =====
[gcode_macro BED_MESH_CALIBRATE]
rename_existing = _BED_MESH_CALIBRATE
variable_led_enable = False
variable_status_macro = 'status_meshing'
variable_fuzz_enable = False
variable_fuzz_min = 0
variable_fuzz_max = 4
variable_probe_dock_enable = False
variable_attach_macro = 'Attach_Probe'
variable_detach_macro = 'Dock_Probe'
gcode = 
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}
	{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}
	{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (printer.configfile.settings.bed_mesh.probe_count[0]-2)  %}
	{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (printer.configfile.settings.bed_mesh.probe_count[1]-2)  %}
	{% set x_min = bed_mesh_min[0] %}
	{% set y_min = bed_mesh_min[1] %}
	{% set x_max = bed_mesh_max[0] %}
	{% set y_max = bed_mesh_max[1] %}
	
	{ action_respond_info("{} points, clamping to mesh [{!r} {!r}]".format(
	all_points | count,
	bed_mesh_min,
	bed_mesh_max,
	)) }
	
	{% if fuzz_enable == True %}
	{% if all_points %}
	{% set fuzz_range = range(fuzz_min * 100 | int, fuzz_max * 100 | int) %}
	{% set x_min = ( bed_mesh_min[0], ((all_points | map(attribute=0) | min - (fuzz_range | random / 100.0)) | default(bed_mesh_min[0])) ) | max %}
	{% set y_min = ( bed_mesh_min[1], ((all_points | map(attribute=1) | min - (fuzz_range | random / 100.0)) | default(bed_mesh_min[1])) ) | max %}
	{% set x_max = ( bed_mesh_max[0], ((all_points | map(attribute=0) | max + (fuzz_range | random / 100.0)) | default(bed_mesh_max[0])) ) | min %}
	{% set y_max = ( bed_mesh_max[1], ((all_points | map(attribute=1) | max + (fuzz_range | random / 100.0)) | default(bed_mesh_max[1])) ) | min %}
	{% endif %}
	{% else %}
	{% set x_min = [ bed_mesh_min[0], (all_points | map(attribute=0) | min | default(bed_mesh_min[0])) ] | max %}
	{% set y_min = [ bed_mesh_min[1], (all_points | map(attribute=1) | min | default(bed_mesh_min[1])) ] | max %}
	{% set x_max = [ bed_mesh_max[0], (all_points | map(attribute=0) | max | default(bed_mesh_max[0])) ] | min %}
	{% set y_max = [ bed_mesh_max[1], (all_points | map(attribute=1) | max | default(bed_mesh_max[1])) ] | min %}
	{% endif %}
	
	{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(
	(x_min, y_min),
	(x_max, y_max),
	)) }
	
	{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | int) + 2 %}
	{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | int) + 2 %}
	
	{% if (([points_x, points_y]|max) > 6) %}
	{% set algorithm = "bicubic" %}
	{% set min_points = 4 %}
	{% else %}
	{% set algorithm = "lagrange" %}
	{% set min_points = 3 %}
	{% endif %}
	{ action_respond_info( "Algorithm: {}".format(algorithm)) }
	
	{% set points_x = [points_x, min_points]|max  %}
	{% set points_y = [points_y, min_points]|max  %}
	{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }
	
	{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}
	{% set ref_index = (points_x * points_y / 2) | int %}
	{ action_respond_info( "Reference index: {}".format(ref_index) ) }
	{% else %}
	{% set ref_index = -1 %}
	{% endif %}
	
	{% if probe_dock_enable == True %}
	{attach_macro}
	{% endif %}
	
	{% if led_enable == True %}
	{status_macro}
	{% endif %}
	
	_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}
	
	{% if probe_dock_enable == True %}
	{detach_macro}
	{% endif %}

[gcode_macro ADAPTIVE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
variable_adaptive_enable = True
variable_z_height = 0.3
variable_tip_distance = 10
variable_purge_amount = 25
variable_flow_rate = 10
variable_x_default = 10
variable_y_default = 10
variable_size = 10
variable_distance_to_object_x = 15
variable_distance_to_object_y = 0
variable_travel_speed = 300
gcode = 
	{% if adaptive_enable == True %}
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set x_origin = (all_points | map(attribute=0) | min | default(x_default + distance_to_object_x + size)) - distance_to_object_x - size %}
	{% set y_origin = (all_points | map(attribute=1) | min | default(y_default + distance_to_object_y + size)) - distance_to_object_y - size %}
	{% set x_origin = ([x_origin, 0] | max) %}
	{% set y_origin = ([y_origin, 0] | max) %}
	{% else %}
	{% set x_origin = x_default | float %}
	{% set y_origin = y_default | float %}
	{% endif %}
	{% set purge_move_speed = 2.31 * size * flow_rate / (purge_amount * 2.405) %}
	{% set prepurge_speed = flow_rate / 2.405 %}
	{ action_respond_info( "x: " + x_origin|string + " y: " + y_origin|string + " purge_move_speed: " + purge_move_speed|string + " prepurge_speed: " + prepurge_speed|string ) }
	
	G92 E0
	G0 F{travel_speed*60}
	G90
	G0 X{x_origin} Y{y_origin+size/2}
	G0 Z{z_height}
	M83
	G1 E{tip_distance} F{prepurge_speed*60}
	G1 X{x_origin+size*0.289} Y{y_origin+size} E{purge_amount/4} F{purge_move_speed*60}
	G1 E-.5 F2100
	G0 Z{z_height*2}
	G0 X{x_origin+size*0.789} Y{y_origin+size}
	G0 Z{z_height}
	G1 E.5 F2100
	G1 X{x_origin+size*0.211} Y{y_origin} E{purge_amount/2} F{purge_move_speed*60}
	G1 E-.5 F2100
	G0 Z{z_height*2}
	G0 X{x_origin+size*0.711} Y{y_origin}
	G0 Z{z_height}
	G1 E.5 F2100
	G1 X{x_origin+size} Y{y_origin+size/2}  E{purge_amount/4} F{purge_move_speed*60}
	G1 E-.5 F2100
	G92 E0
	G0 Z{z_height*2}

[virtual_sdcard]
path = /home/pi/gcode_files

[pause_resume]

[gcode_macro PRINT_START]
variable_parameter_area_start = 0,0
variable_parameter_area_end = 0,0
gcode = 
	SET_FAN_SPEED FAN=chamber SPEED=.5
	SET_FAN_SPEED FAN=drivers SPEED=1
	{% set BED = params.BED|default(55)|int %}
	{% set EXTRUDER = params.EXTRUDER|default(205)|int %}
	G28 X Y
	
	M104 S170
	M140 S{BED}
	RESPOND PREFIX= MSG="Waiting for temperatures..."
	M117  Waiting for temperatures...
	M190 S{BED}
	RESPOND PREFIX= MSG="Waiting for thermal expansion..."
	M117 Waiting for thermal expansion...
	G4 P30000
	RESPOND PREFIX= MSG="Creating a mesh..."
	M117 Creating a mesh...
	G28
	QUAD_GANTRY_LEVEL
	BED_MESH_CALIBRATE
	
	M104 S{EXTRUDER}
	
	
	RESPOND PREFIX= MSG="Moving to prime position"
	M117 Moving to prime position
	G1 X25 Y-2 Z10 F5000.0
	{% if printer.extruder.temperature < params.EXTRUDER|float*0.98 %}
	M109 S{params.EXTRUDER|float*0.98}
	{% endif %}
	M104 S{EXTRUDER}
	G4 P30000
	ADAPTIVE_PURGE
	RESPOND PREFIX= MSG="Printing..."
	M117 Printing...
	M117

[gcode_macro PID_TUNE]
gcode = 
	G28
	G1 Z10 F7800
	M106 S64
	PID_CALIBRATE HEATER=extruder TARGET=245
	
	
	RESPOND PREFIX= MSG="Moving to prime position"
	M117 Moving to prime position
	G1 X25 Y-3 Z10 F5000.0
	{% if printer.extruder.temperature < params.EXTRUDER|float*0.98 %}
	M109 S{params.EXTRUDER|float*0.98}
	{% endif %}
	M104 S{EXTRUDER}
	
	RESPOND PREFIX= MSG="Priming the nozzle"
	M117 Priming the nozzle
	G92 E0
	G0 Z0.15
	G0 X55 Y-2 Z0.28 F1500.0
	G92 E0
	G1 X195 Y-2 Z0.28 F1500.0 E15
	G92 E0
	G10
	G1 Z2.0 F3000
	
	RESPOND PREFIX= MSG="Printing..."
	M117 Printing...
	M117

[display_status]

[gcode_macro END_PRINT]
gcode = 
	
	G91
	G1 E-2
	
	G90
	
	TURN_OFF_HEATERS
	
	G28 X Y

[gcode_macro PAUSE]
rename_existing = BASE_PAUSE
gcode = 
	
	SAVE_GCODE_STATE NAME=PAUSE_state
	BASE_PAUSE
	G91
	G1 E-{2} F2100
	G1 Z{10}
	G90
	G1 X{230} Y{230} F6000
	G91

[gcode_macro RESUME]
rename_existing = BASE_RESUME
gcode = 
	G91
	G1 E{s} F2100
	G90
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
	BASE_RESUME

[gcode_macro CANCEL_PRINT]
rename_existing = BASE_CANCEL_PRINT
gcode = 
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	SDCARD_RESET_FILE
	BASE_CANCEL_PRINT
	
	G91
	G1 Z10 F8000
	G90
	G1 X0 Y222 E-3 F8000
	DISABLE_MOTORS
	M106 S0
	M117 Print Canceled

[exclude_object]

[gcode_macro M486]
gcode = 
	
	
	
	
	
	
	
	
	
	
	
	{% if 'exclude_object' not in printer %}
	{action_raise_error("[exclude_object] is not enabled")}
	{% endif %}
	
	{% if 'T' in params %}
	EXCLUDE_OBJECT RESET=1
	
	{% for i in range(params.T | int) %}
	EXCLUDE_OBJECT_DEFINE NAME={i}
	{% endfor %}
	{% endif %}
	
	{% if 'C' in params %}
	EXCLUDE_OBJECT CURRENT=1
	{% endif %}
	
	{% if 'P' in params %}
	EXCLUDE_OBJECT NAME={params.P}
	{% endif %}
	
	{% if 'S' in params %}
	{% if params.S == '-1' %}
	{% if printer.exclude_object.current_object %}
	EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
	{% endif %}
	{% else %}
	EXCLUDE_OBJECT_START NAME={params.S}
	{% endif %}
	{% endif %}
	
	{% if 'U' in params %}
	EXCLUDE_OBJECT RESET=1 NAME={params.U}
	{% endif %}

[gcode_macro GET_TIMELAPSE_SETUP]
description = Print the Timelapse setup
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% set output_txt = ["Timelapse Setup:"] %}
	{% set _dummy = output_txt.append("enable: %s" % tl.enable) %}
	{% set _dummy = output_txt.append("park: %s" % tl.park.enable) %}
	{% if tl.park.enable %}
	{% set _dummy = output_txt.append("park position: %s time: %s s" % (tl.park.pos, tl.park.time)) %}
	{% set _dummy = output_txt.append("park cord x:%s y:%s dz:%s" % (tl.park.coord.x, tl.park.coord.y, tl.park.coord.dz)) %}
	{% set _dummy = output_txt.append("travel speed: %s mm/s" % tl.speed.travel) %}
	{% endif %}
	{% set _dummy = output_txt.append("fw_retract: %s" % tl.extruder.fw_retract) %}
	{% if not tl.extruder.fw_retract %}
	{% set _dummy = output_txt.append("retract: %s mm speed: %s mm/s" % (tl.extruder.retract, tl.speed.retract)) %}
	{% set _dummy = output_txt.append("extrude: %s mm speed: %s mm/s" % (tl.extruder.extrude, tl.speed.extrude)) %}
	{% endif %}
	{% set _dummy = output_txt.append("verbose: %s" % tl.verbose) %}
	{action_respond_info(output_txt|join("\n"))}

[gcode_macro _SET_TIMELAPSE_SETUP]
description = Set user parameters for timelapse
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	
	{% set min = printer.toolhead.axis_minimum %}
	{% set max = printer.toolhead.axis_maximum %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	{% set park = {'min'   : {'x': (min.x / 1.42)|round(3) if round_bed else min.x|round(3),
	'y': (min.y / 1.42)|round(3) if round_bed else min.y|round(3)},
	'max'   : {'x': (max.x / 1.42)|round(3) if round_bed else max.x|round(3),
	'y': (max.y / 1.42)|round(3) if round_bed else max.y|round(3)},
	'center': {'x': (max.x-(max.x-min.x)/2)|round(3),
	'y': (max.y-(max.y-min.y)/2)|round(3)}} %}
	
	{% if params.ENABLE %}
	{% if params.ENABLE|lower is in ['true', 'false'] %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=enable VALUE={True if params.ENABLE|lower == 'true' else False}
	{% else %}
	{action_raise_error("ENABLE=%s not supported. Allowed values are [True, False]" % params.ENABLE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.VERBOSE %}
	{% if params.VERBOSE|lower is in ['true', 'false'] %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=verbose VALUE={True if params.VERBOSE|lower == 'true' else False}
	{% else %}
	{action_raise_error("VERBOSE=%s not supported. Allowed values are [True, False]" % params.VERBOSE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_X %}
	{% if params.CUSTOM_POS_X|float >= min.x and params.CUSTOM_POS_X|float <= max.x %}
	{% set _dummy = tl.park.custom.update({'x':params.CUSTOM_POS_X|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_X=%s must be within [%s - %s]" % (params.CUSTOM_POS_X, min.x, max.x))}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_Y %}
	{% if params.CUSTOM_POS_Y|float >= min.y and params.CUSTOM_POS_Y|float <= max.y %}
	{% set _dummy = tl.park.custom.update({'y':params.CUSTOM_POS_Y|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_Y=%s must be within [%s - %s]" % (params.CUSTOM_POS_Y, min.y, max.y))}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_DZ %}
	{% if params.CUSTOM_POS_DZ|float >= min.z and params.CUSTOM_POS_DZ|float <= max.z %}
	{% set _dummy = tl.park.custom.update({'dz':params.CUSTOM_POS_DZ|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_DZ=%s must be within [%s - %s]" % (params.CUSTOM_POS_DZ, min.z, max.z))}
	{% endif %}
	{% endif %}
	{% if params.PARK_ENABLE %}
	{% if params.PARK_ENABLE|lower is in ['true', 'false'] %}
	{% set _dummy = tl.park.update({'enable':True if params.PARK_ENABLE|lower == 'true' else False}) %}
	{% else %}
	{action_raise_error("PARK_ENABLE=%s not supported. Allowed values are [True, False]" % params.PARK_ENABLE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.PARK_POS %}
	{% if params.PARK_POS|lower is in ['center','front_left','front_right','back_left','back_right','custom','x_only','y_only'] %}
	{% set dic = {'center'      : {'x': park.center.x   , 'y': park.center.y   , 'dz': 1                },
	'front_left'  : {'x': park.min.x      , 'y': park.min.y      , 'dz': 0                },
	'front_right' : {'x': park.max.x      , 'y': park.min.y      , 'dz': 0                },
	'back_left'   : {'x': park.min.x      , 'y': park.max.y      , 'dz': 0                },
	'back_right'  : {'x': park.max.x      , 'y': park.max.y      , 'dz': 0                },
	'custom'      : {'x': tl.park.custom.x, 'y': tl.park.custom.y, 'dz': tl.park.custom.dz},
	'x_only'      : {'x': tl.park.custom.x, 'y': 'none'          , 'dz': tl.park.custom.dz},
	'y_only'      : {'x': 'none'          , 'y': tl.park.custom.y, 'dz': tl.park.custom.dz}} %}
	{% set _dummy = tl.park.update({'pos':params.PARK_POS|lower}) %}
	{% set _dummy = tl.park.update({'coord':dic[tl.park.pos]}) %}
	{% else %}
	{action_raise_error("PARK_POS=%s not supported. Allowed values are [CENTER, FRONT_LEFT, FRONT_RIGHT, BACK_LEFT, BACK_RIGHT, CUSTOM, X_ONLY, Y_ONLY]"
	% params.PARK_POS|upper)}
	{% endif %}
	{% endif %}
	{% if params.PARK_TIME %}
	{% if params.PARK_TIME|float >= 0.0 %}
	{% set _dummy = tl.park.update({'time':params.PARK_TIME|float|round(3)}) %}
	{% else %}
	{action_raise_error("PARK_TIME=%s must be a positive number" % params.PARK_TIME)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=park VALUE="{tl.park}"
	{% if params.TRAVEL_SPEED %}
	{% if params.TRAVEL_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'travel':params.TRAVEL_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("TRAVEL_SPEED=%s must be larger than 0" % params.TRAVEL_SPEED)}
	{% endif %}
	{% endif %}
	{% if params.RETRACT_SPEED %}
	{% if params.RETRACT_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'retract':params.RETRACT_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("RETRACT_SPEED=%s must be larger than 0" % params.RETRACT_SPEED)}
	{% endif %}
	{% endif %}
	{% if params.EXTRUDE_SPEED %}
	{% if params.EXTRUDE_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'extrude':params.EXTRUDE_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("EXTRUDE_SPEED=%s must be larger than 0" % params.EXTRUDE_SPEED)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=speed VALUE="{tl.speed}"
	{% if params.EXTRUDE_DISTANCE %}
	{% if params.EXTRUDE_DISTANCE|float >= 0.0 %}
	{% set _dummy = tl.extruder.update({'extrude':params.EXTRUDE_DISTANCE|float|round(3)}) %}
	{% else %}
	{action_raise_error("EXTRUDE_DISTANCE=%s must be specified as positiv number" % params.EXTRUDE_DISTANCE)}
	{% endif %}
	{% endif %}
	{% if params.RETRACT_DISTANCE %}
	{% if params.RETRACT_DISTANCE|float >= 0.0 %}
	{% set _dummy = tl.extruder.update({'retract':params.RETRACT_DISTANCE|float|round(3)}) %}
	{% else %}
	{action_raise_error("RETRACT_DISTANCE=%s must be specified as positiv number" % params.RETRACT_DISTANCE)}
	{% endif %}
	{% endif %}
	{% if params.FW_RETRACT %}
	{% if params.FW_RETRACT|lower is in ['true', 'false'] %}
	{% if 'firmware_retraction' in printer.configfile.settings %}
	{% set _dummy = tl.extruder.update({'fw_retract': True if params.FW_RETRACT|lower == 'true' else False}) %}
	{% else %}
	{% set _dummy = tl.extruder.update({'fw_retract':False}) %}
	{% if params.FW_RETRACT|capitalize == 'True' %}
	{action_raise_error("[firmware_retraction] not defined in printer.cfg. Can not enable fw_retract")}
	{% endif %}
	{% endif %}
	{% else %}
	{action_raise_error("FW_RETRACT=%s not supported. Allowed values are [True, False]" % params.FW_RETRACT|capitalize)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=extruder VALUE="{tl.extruder}"
	{% if printer.configfile.settings['gcode_macro pause'] is defined %}
	{% set _dummy = tl.macro.update({'pause': printer.configfile.settings['gcode_macro pause'].rename_existing}) %}
	{% endif %}
	{% if printer.configfile.settings['gcode_macro resume'] is defined %}
	{% set _dummy = tl.macro.update({'resume': printer.configfile.settings['gcode_macro resume'].rename_existing}) %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=macro VALUE="{tl.macro}"

[gcode_macro TIMELAPSE_TAKE_FRAME]
description = Take Timelapse shoot
variable_enable = False
variable_takingframe = False
variable_park = {'enable': False,
	'pos'   : 'center',
	'time'  : 0.1,
	'custom': {'x': 0, 'y': 0, 'dz': 0},
	'coord' : {'x': 0, 'y': 0, 'dz': 0}}
variable_extruder = {'fw_retract': False,
	'retract': 1.0,
	'extrude': 1.0}
variable_speed = {'travel': 100,
	'retract': 15,
	'extrude': 15}
variable_verbose = True
variable_restore = {'absolute': {'coordinates': True, 'extrude': True}, 'speed': 1500, 'e':0, 'factor': {'speed': 1.0, 'extrude': 1.0}}
variable_macro = {'pause': 'PAUSE', 'resume': 'RESUME'}
variable_is_paused = False
gcode = 
	{% set hyperlapse = True if params.HYPERLAPSE and params.HYPERLAPSE|lower =='true' else False %}
	{% if enable %}
	{% if (hyperlapse and printer['gcode_macro HYPERLAPSE'].run) or
	(not hyperlapse and not printer['gcode_macro HYPERLAPSE'].run) %}
	{% if park.enable %}
	{% set pos = {'x': 'X' + park.coord.x|string if park.pos != 'y_only' else '',
	'y': 'Y' + park.coord.y|string if park.pos != 'x_only' else '',
	'z': 'Z'+ [printer.gcode_move.gcode_position.z + park.coord.dz, printer.toolhead.axis_maximum.z]|min|string} %}
	{% set restore = {'absolute': {'coordinates': printer.gcode_move.absolute_coordinates,
	'extrude'    : printer.gcode_move.absolute_extrude},
	'speed'   : printer.gcode_move.speed,
	'e'       : printer.gcode_move.gcode_position.e,
	'factor'  : {'speed'  : printer.gcode_move.speed_factor,
	'extrude': printer.gcode_move.extrude_factor}} %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=restore VALUE="{restore}"
	{% if not printer[printer.toolhead.extruder].can_extrude %}
	{% if verbose %}{action_respond_info("Timelapse: Warning, minimum extruder temperature not reached!")}{% endif %}
	{% else %}
	{% if extruder.fw_retract %}
	G10
	{% else %}
	M83
	G0 E-{extruder.retract} F{speed.retract * 60}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=is_paused VALUE=True
	{macro.pause}
	SET_GCODE_OFFSET X=0 Y=0
	G90
	{% if "xyz" not in printer.toolhead.homed_axes %}
	{% if verbose %}{action_respond_info("Timelapse: Warning, axis not homed yet!")}{% endif %}
	{% else %}
	G0 {pos.x} {pos.y} {pos.z} F{speed.travel * 60}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=takingframe VALUE=True
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_TAKE_FRAME DURATION=0.5
	M400
	{% endif %}
	_TIMELAPSE_NEW_FRAME HYPERLAPSE={hyperlapse}
	{% endif %}
	{% else %}
	{% if verbose %}{action_respond_info("Timelapse: disabled, take frame ignored")}{% endif %}
	{% endif %}

[gcode_macro _TIMELAPSE_NEW_FRAME]
description = action call for timelapse shoot. must be a seperate macro
gcode = 
	{action_call_remote_method("timelapse_newframe",
	macropark=printer['gcode_macro TIMELAPSE_TAKE_FRAME'].park,
	hyperlapse=params.HYPERLAPSE)}

[delayed_gcode _WAIT_TIMELAPSE_TAKE_FRAME]
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% set factor = {'speed': printer.gcode_move.speed_factor, 'extrude': printer.gcode_move.extrude_factor} %}
	{% if tl.takingframe %}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_TAKE_FRAME DURATION=0.5
	{% else %}
	{tl.macro.resume} VELOCITY={tl.speed.travel}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=is_paused VALUE=False
	{% if not printer[printer.toolhead.extruder].can_extrude %}
	{action_respond_info("Timelapse: Warning minimum extruder temperature not reached!")}
	{% else %}
	{% if tl.extruder.fw_retract %}
	G11
	{% else %}
	G0 E{tl.extruder.extrude} F{tl.speed.extrude * 60}
	G0 F{tl.restore.speed}
	{% if tl.restore.absolute.extrude %}
	M82
	G92 E{tl.restore.e}
	{% endif %}
	{% endif %}
	{% endif %}
	{% if tl.restore.factor.speed   != factor.speed   %} M220 S{(factor.speed*100)|round(0)}   {% endif %}
	{% if tl.restore.factor.extrude != factor.extrude %} M221 S{(factor.extrude*100)|round(0)} {% endif %}
	{% if not tl.restore.absolute.coordinates %} G91 {% endif %}
	{% endif %}

[gcode_macro HYPERLAPSE]
description = Start/Stop a hyperlapse recording
variable_cycle = 0
variable_run = False
gcode = 
	{% set cycle = params.CYCLE|default(30)|int %}
	{% if params.ACTION and params.ACTION|lower == 'start' %}
	{action_respond_info("Hyperlapse: frames started (Cycle %d sec)" % cycle)}
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=run VALUE=True
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=cycle VALUE={cycle}
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION={cycle}
	TIMELAPSE_TAKE_FRAME HYPERLAPSE=True
	{% elif params.ACTION and params.ACTION|lower == 'stop' %}
	{% if run %}{action_respond_info("Hyperlapse: frames stopped")}{% endif %}
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=run VALUE=False
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION=0
	{% else %}
	{action_raise_error("Hyperlapse: No valid input parameter
	Use:
	- HYPERLAPSE ACTION=START [CYCLE=time]
	- HYPERLAPSE ACTION=STOP")}
	{% endif %}

[delayed_gcode _HYPERLAPSE_LOOP]
gcode = 
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION={printer["gcode_macro HYPERLAPSE"].cycle}
	TIMELAPSE_TAKE_FRAME HYPERLAPSE=True

[gcode_macro TIMELAPSE_RENDER]
description = Render Timelapse video and wait for the result
variable_render = False
variable_run_identifier = 0
gcode = 
	{action_respond_info("Timelapse: Rendering started")}
	{action_call_remote_method("timelapse_render", byrendermacro="True")}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_RENDER VARIABLE=render VALUE=True
	{printer.configfile.settings['gcode_macro pause'].rename_existing}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_RENDER DURATION=0.5

[delayed_gcode _WAIT_TIMELAPSE_RENDER]
gcode = 
	{% set ri = printer['gcode_macro TIMELAPSE_RENDER'].run_identifier % 4 %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_RENDER VARIABLE=run_identifier VALUE={ri + 1}
	{% if printer['gcode_macro TIMELAPSE_RENDER'].render %}
	M117 Rendering {['-','\\','|','/'][ri]}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_RENDER DURATION=0.5
	{% else %}
	{action_respond_info("Timelapse: Rendering finished")}
	M117
	{printer.configfile.settings['gcode_macro resume'].rename_existing}
	{% endif %}

[gcode_macro TEST_STREAM_DELAY]
description = Helper macro to find stream and park delay
gcode = 
	{% set min = printer.toolhead.axis_minimum %}
	{% set max = printer.toolhead.axis_maximum %}
	{% set act = printer.toolhead.position %}
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% if act.z > 5.0 %}
	G0 X{min.x + 5.0} F{tl.speed.travel|int * 60}
	G0 X{(max.x-min.x)/2}
	G4 P{tl.park.time|float * 1000}
	_TIMELAPSE_NEW_FRAME HYPERLAPSE=FALSE
	G0 X{max.x - 5.0}
	{% else %}
	{action_raise_error("Toolhead z %.3f to low. Please place head above z = 5.0" % act.z)}
	{% endif %}

[force_move]
enable_force_move = True

[mcu head0]
canbus_uuid = 20195bac64c4

[temperature_sensor CANBOARD]
sensor_type = temperature_mcu
sensor_mcu = head0

[idle_timeout]
timeout = 100000

[mcu]
serial = /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00

[adc_scaled vref_scaled]
vref_pin = PB5
vssa_pin = PB4

[temperature_sensor pi_cpu]
sensor_type = temperature_host
gcode_id = P

[printer]
kinematics = corexy
max_velocity = 600
max_accel = 15000
max_accel_to_decel = 10000
square_corner_velocity = 10
max_z_velocity = 50
max_z_accel = 180

[stepper_x]
step_pin = PC25
dir_pin = !PB29
enable_pin = !PC28
rotation_distance = 40
microsteps = 32
endstop_pin = ^!head0:PB12
position_endstop = 303
position_max = 303
position_min = 0
homing_speed = 100

[tmc2209 stepper_x]
uart_pin = PA1
tx_pin = PA0
select_pins = PD0
uart_address = 1
run_current = 1
sense_resistor = 0.056

[stepper_y]
step_pin = PC24
dir_pin = !PB28
enable_pin = !PC28
rotation_distance = 40
microsteps = 32
endstop_pin = ^PC4
position_endstop = 308
position_max = 308
position_min = -3
homing_speed = 100
homing_retract_dist = 30

[tmc2209 stepper_y]
uart_pin = PA1
tx_pin = PA0
select_pins = PD0
uart_address = 2
run_current = 1
sense_resistor = 0.056

[stepper_z3]
step_pin = PC26
dir_pin = PB3
enable_pin = !PC28
rotation_distance = 8
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PA1
tx_pin = PA0
select_pins = PD0
uart_address = 0
run_current = 1.1
sense_resistor = 0.056
driver_tbl = 2
driver_hend = 3
driver_hstrt = 4
driver_toff = 4

[stepper_z]
step_pin = PC19
dir_pin = !PD20
enable_pin = !PC28
rotation_distance = 8
microsteps = 32
endstop_pin = probe:z_virtual_endstop
position_max = 390
position_min = -15
homing_speed = 20

[tmc2209 stepper_z]
uart_pin = PA1
tx_pin = PA0
uart_address = 3
select_pins = PD0
run_current = 1.1
sense_resistor = 0.056
driver_tbl = 2
driver_hend = 3
driver_hstrt = 4
driver_toff = 4

[stepper_z1]
step_pin = PC16
dir_pin = PD21
enable_pin = !PC28
rotation_distance = 8
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PA1
tx_pin = PA0
uart_address = 0
select_pins = !PD0
run_current = 1.1
sense_resistor = 0.056
driver_tbl = 2
driver_hend = 3
driver_hstrt = 4
driver_toff = 4

[stepper_z2]
step_pin = PC30
dir_pin = !PB0
enable_pin = !PC28
rotation_distance = 8
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PA1
tx_pin = PA0
uart_address = 1
select_pins = !PD0
run_current = 1.1
sense_resistor = 0.056
driver_tbl = 2
driver_hend = 3
driver_hstrt = 4
driver_toff = 4

[extruder]
step_pin = head0:PB3
dir_pin = head0:PB4
enable_pin = !head0:PB5
heater_pin = head0:PA6
microsteps = 16
full_steps_per_rotation = 200
rotation_distance = 22.67895
gear_ratio = 50:8
nozzle_diameter = 0.500
filament_diameter = 1.750
sensor_type = ATC Semitec 104GT-2
sensor_pin = head0:PA0
pullup_resistor = 2200
min_extrude_temp = 170
max_extrude_cross_section = 5
min_temp = -100
max_temp = 325
control = pid
pid_kp = 24.502
pid_ki = 1.027
pid_kd = 146.095

[tmc2209 extruder]
uart_pin = head0:PA9
interpolate = True
run_current = .3
sense_resistor = 0.110
driver_tbl = 2
driver_hend = 3
driver_hstrt = 5
driver_toff = 6

[heater_bed]
heater_pin = PB17
sensor_type = EPCOS 100K B57560G104F
sensor_pin = vref_scaled:PC2
pullup_resistor = 2200
min_temp = -100
max_temp = 130
max_power = 0.8
control = pid
pid_kp = 20.846
pid_ki = 1.241
pid_kd = 87.555

[fan]
pin = PC10
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend]
pin = head0:PA7
heater = extruder
heater_temp = 45
fan_speed = 1

[controller_fan drivers]
pin = PA11
heater = extruder,heater_bed
fan_speed = 1

[fan_generic chamber]
pin = PB11

[bltouch]
sensor_pin = PC31
control_pin = PB1
stow_on_each_sample = false
probe_with_touch_mode = True
x_offset = 21.765
y_offset = 0
speed = 7
lift_speed = 20
samples = 2
samples_result = average
sample_retract_dist = 5.0
samples_tolerance = 0.01
samples_tolerance_retries = 3
z_offset = 1.265

[safe_z_home]
home_xy_position = 150,150
speed = 350
z_hop = 6
z_hop_speed = 15

[quad_gantry_level]
gantry_corners = 
	-68,-16
	368,355
points = 
	50,50
	50,250
	250,250
	250,50
speed = 350
horizontal_move_z = 10
retries = 8
retry_tolerance = 0.015
max_adjust = 16

[bed_mesh]
mesh_min = 25,25
mesh_max = 275,275
probe_count = 7,7
algorithm = bicubic
speed = 350

[output_pin led]
pin = PB13
shutdown_value = 0
value = 1

[filament_switch_sensor fsensor]
pause_on_runout = True
runout_gcode = 
	M118 Filament Runout Detected
	M600
insert_gcode = 
	M118 Filament Load Detected
	LOAD_FILAMENT
event_delay = 3.0
pause_delay = 0.5
switch_pin = PB30

[gcode_macro LOAD_FILAMENT]
gcode = 
	M117 Loading Filament...
	G92 E0.0
	G91
	G1 E40 F400
	G1 E30 F400
	G1 E60 F200
	G90
	G92 E0.0
	M400
	M117 Load Complete
	UPDATE_DELAYED_GCODE ID=clear_display DURATION=5

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	G90
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	G28
	
	{% if printer.configfile.settings.quad_gantry_level %}
	{% if printer.quad_gantry_level.applied == False %}
	QUAD_GANTRY_LEVEL
	G28 Z
	{% endif %}
	{% endif %}
	G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F{30 * 60}
	G4 P1000
	GET_POSITION
	
	
	G0 X{x_min} Y{y_min} Z{bound + 10} F{speed * 60}
	
	{% for i in range(iterations) %}
	
	G0 X{x_min} Y{y_min} F{speed * 60}
	G0 X{x_max} Y{y_max} F{speed * 60}
	G0 X{x_min} Y{y_min} F{speed * 60}
	G0 X{x_max} Y{y_min} F{speed * 60}
	G0 X{x_min} Y{y_max} F{speed * 60}
	G0 X{x_max} Y{y_min} F{speed * 60}
	
	
	G0 X{x_min} Y{y_min} F{speed * 60}
	G0 X{x_min} Y{y_max} F{speed * 60}
	G0 X{x_max} Y{y_max} F{speed * 60}
	G0 X{x_max} Y{y_min} F{speed * 60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
	
	
	G28 X Y
	
	G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F{30 * 60}
	G4 P1000
	GET_POSITION
	
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 83.8
shaper_type_y = mzv
shaper_freq_y = 75.0

[bed_mesh default]
version = 1
points = 
	1.182277, 1.034152, 1.155402, 1.162277, 1.141027, 1.093527
	1.229777, 1.204777, 1.190402, 1.179777, 1.174777, 1.147902
	1.217277, 1.220402, 1.201027, 1.206027, 1.180402, 1.282277
	1.222277, 1.189777, 1.182277, 1.167277, 1.164152, 1.143527
	1.146027, 1.152277, 1.134777, 1.151027, 1.206652, 1.117277
	1.100402, 1.102277, 1.112902, 1.132277, 1.133527, 1.107277
x_count = 6
y_count = 6
mesh_x_pps = 2
mesh_y_pps = 2
algo = lagrange
tension = 0.2
min_x = 40.715
max_x = 259.265
min_y = 38.99
max_y = 261.19
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
webhooks client 1963901808: New connection
webhooks client 1963901808: Client info {'program': 'Moonraker', 'version': 'v0.7.1-885-g4550664'}
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Starting Klippy...
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/klipper_config/printer.cfg', '-l', '/home/pi/klipper_logs/klippy.log', '-a', '/tmp/klippy_uds']
Git version: 'v0.11.0-114-g0a645e49-dirty'
CPU: 4 core ARMv7 Processor rev 4 (v7l)
Python: '3.7.3 (default, Jan 22 2021, 20:04:44) \n[GCC 8.3.0]'
Start printer at Mon Apr 24 23:06:11 2023 (1682402771.4 49.0)
===== Config file =====
[gcode_macro BED_MESH_CALIBRATE]
rename_existing = _BED_MESH_CALIBRATE
variable_led_enable = False
variable_status_macro = 'status_meshing'
variable_fuzz_enable = False
variable_fuzz_min = 0
variable_fuzz_max = 4
variable_probe_dock_enable = False
variable_attach_macro = 'Attach_Probe'
variable_detach_macro = 'Dock_Probe'
gcode = 
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}
	{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}
	{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (printer.configfile.settings.bed_mesh.probe_count[0]-2)  %}
	{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (printer.configfile.settings.bed_mesh.probe_count[1]-2)  %}
	{% set x_min = bed_mesh_min[0] %}
	{% set y_min = bed_mesh_min[1] %}
	{% set x_max = bed_mesh_max[0] %}
	{% set y_max = bed_mesh_max[1] %}
	
	{ action_respond_info("{} points, clamping to mesh [{!r} {!r}]".format(
	all_points | count,
	bed_mesh_min,
	bed_mesh_max,
	)) }
	
	{% if fuzz_enable == True %}
	{% if all_points %}
	{% set fuzz_range = range(fuzz_min * 100 | int, fuzz_max * 100 | int) %}
	{% set x_min = ( bed_mesh_min[0], ((all_points | map(attribute=0) | min - (fuzz_range | random / 100.0)) | default(bed_mesh_min[0])) ) | max %}
	{% set y_min = ( bed_mesh_min[1], ((all_points | map(attribute=1) | min - (fuzz_range | random / 100.0)) | default(bed_mesh_min[1])) ) | max %}
	{% set x_max = ( bed_mesh_max[0], ((all_points | map(attribute=0) | max + (fuzz_range | random / 100.0)) | default(bed_mesh_max[0])) ) | min %}
	{% set y_max = ( bed_mesh_max[1], ((all_points | map(attribute=1) | max + (fuzz_range | random / 100.0)) | default(bed_mesh_max[1])) ) | min %}
	{% endif %}
	{% else %}
	{% set x_min = [ bed_mesh_min[0], (all_points | map(attribute=0) | min | default(bed_mesh_min[0])) ] | max %}
	{% set y_min = [ bed_mesh_min[1], (all_points | map(attribute=1) | min | default(bed_mesh_min[1])) ] | max %}
	{% set x_max = [ bed_mesh_max[0], (all_points | map(attribute=0) | max | default(bed_mesh_max[0])) ] | min %}
	{% set y_max = [ bed_mesh_max[1], (all_points | map(attribute=1) | max | default(bed_mesh_max[1])) ] | min %}
	{% endif %}
	
	{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(
	(x_min, y_min),
	(x_max, y_max),
	)) }
	
	{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | int) + 2 %}
	{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | int) + 2 %}
	
	{% if (([points_x, points_y]|max) > 6) %}
	{% set algorithm = "bicubic" %}
	{% set min_points = 4 %}
	{% else %}
	{% set algorithm = "lagrange" %}
	{% set min_points = 3 %}
	{% endif %}
	{ action_respond_info( "Algorithm: {}".format(algorithm)) }
	
	{% set points_x = [points_x, min_points]|max  %}
	{% set points_y = [points_y, min_points]|max  %}
	{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }
	
	{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}
	{% set ref_index = (points_x * points_y / 2) | int %}
	{ action_respond_info( "Reference index: {}".format(ref_index) ) }
	{% else %}
	{% set ref_index = -1 %}
	{% endif %}
	
	{% if probe_dock_enable == True %}
	{attach_macro}
	{% endif %}
	
	{% if led_enable == True %}
	{status_macro}
	{% endif %}
	
	_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}
	
	{% if probe_dock_enable == True %}
	{detach_macro}
	{% endif %}

[gcode_macro ADAPTIVE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
variable_adaptive_enable = True
variable_z_height = 0.3
variable_tip_distance = 10
variable_purge_amount = 25
variable_flow_rate = 10
variable_x_default = 10
variable_y_default = 10
variable_size = 10
variable_distance_to_object_x = 15
variable_distance_to_object_y = 0
variable_travel_speed = 300
gcode = 
	{% if adaptive_enable == True %}
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set x_origin = (all_points | map(attribute=0) | min | default(x_default + distance_to_object_x + size)) - distance_to_object_x - size %}
	{% set y_origin = (all_points | map(attribute=1) | min | default(y_default + distance_to_object_y + size)) - distance_to_object_y - size %}
	{% set x_origin = ([x_origin, 0] | max) %}
	{% set y_origin = ([y_origin, 0] | max) %}
	{% else %}
	{% set x_origin = x_default | float %}
	{% set y_origin = y_default | float %}
	{% endif %}
	{% set purge_move_speed = 2.31 * size * flow_rate / (purge_amount * 2.405) %}
	{% set prepurge_speed = flow_rate / 2.405 %}
	{ action_respond_info( "x: " + x_origin|string + " y: " + y_origin|string + " purge_move_speed: " + purge_move_speed|string + " prepurge_speed: " + prepurge_speed|string ) }
	
	G92 E0
	G0 F{travel_speed*60}
	G90
	G0 X{x_origin} Y{y_origin+size/2}
	G0 Z{z_height}
	M83
	G1 E{tip_distance} F{prepurge_speed*60}
	G1 X{x_origin+size*0.289} Y{y_origin+size} E{purge_amount/4} F{purge_move_speed*60}
	G1 E-.5 F2100
	G0 Z{z_height*2}
	G0 X{x_origin+size*0.789} Y{y_origin+size}
	G0 Z{z_height}
	G1 E.5 F2100
	G1 X{x_origin+size*0.211} Y{y_origin} E{purge_amount/2} F{purge_move_speed*60}
	G1 E-.5 F2100
	G0 Z{z_height*2}
	G0 X{x_origin+size*0.711} Y{y_origin}
	G0 Z{z_height}
	G1 E.5 F2100
	G1 X{x_origin+size} Y{y_origin+size/2}  E{purge_amount/4} F{purge_move_speed*60}
	G1 E-.5 F2100
	G92 E0
	G0 Z{z_height*2}

[virtual_sdcard]
path = /home/pi/gcode_files

[pause_resume]

[gcode_macro PRINT_START]
variable_parameter_area_start = 0,0
variable_parameter_area_end = 0,0
gcode = 
	SET_FAN_SPEED FAN=chamber SPEED=.5
	SET_FAN_SPEED FAN=drivers SPEED=1
	{% set BED = params.BED|default(55)|int %}
	{% set EXTRUDER = params.EXTRUDER|default(205)|int %}
	G28 X Y
	
	M104 S170
	M140 S{BED}
	RESPOND PREFIX= MSG="Waiting for temperatures..."
	M117  Waiting for temperatures...
	M190 S{BED}
	RESPOND PREFIX= MSG="Waiting for thermal expansion..."
	M117 Waiting for thermal expansion...
	G4 P30000
	RESPOND PREFIX= MSG="Creating a mesh..."
	M117 Creating a mesh...
	G28
	QUAD_GANTRY_LEVEL
	BED_MESH_CALIBRATE
	
	M104 S{EXTRUDER}
	
	
	RESPOND PREFIX= MSG="Moving to prime position"
	M117 Moving to prime position
	G1 X25 Y-2 Z10 F5000.0
	{% if printer.extruder.temperature < params.EXTRUDER|float*0.98 %}
	M109 S{params.EXTRUDER|float*0.98}
	{% endif %}
	M104 S{EXTRUDER}
	G4 P30000
	ADAPTIVE_PURGE
	RESPOND PREFIX= MSG="Printing..."
	M117 Printing...
	M117

[gcode_macro PID_TUNE]
gcode = 
	G28
	G1 Z10 F7800
	M106 S64
	PID_CALIBRATE HEATER=extruder TARGET=245
	
	
	RESPOND PREFIX= MSG="Moving to prime position"
	M117 Moving to prime position
	G1 X25 Y-3 Z10 F5000.0
	{% if printer.extruder.temperature < params.EXTRUDER|float*0.98 %}
	M109 S{params.EXTRUDER|float*0.98}
	{% endif %}
	M104 S{EXTRUDER}
	
	RESPOND PREFIX= MSG="Priming the nozzle"
	M117 Priming the nozzle
	G92 E0
	G0 Z0.15
	G0 X55 Y-2 Z0.28 F1500.0
	G92 E0
	G1 X195 Y-2 Z0.28 F1500.0 E15
	G92 E0
	G10
	G1 Z2.0 F3000
	
	RESPOND PREFIX= MSG="Printing..."
	M117 Printing...
	M117

[display_status]

[gcode_macro END_PRINT]
gcode = 
	
	G91
	G1 E-2
	
	G90
	
	TURN_OFF_HEATERS
	
	G28 X Y

[gcode_macro PAUSE]
rename_existing = BASE_PAUSE
gcode = 
	
	SAVE_GCODE_STATE NAME=PAUSE_state
	BASE_PAUSE
	G91
	G1 E-{2} F2100
	G1 Z{10}
	G90
	G1 X{230} Y{230} F6000
	G91

[gcode_macro RESUME]
rename_existing = BASE_RESUME
gcode = 
	G91
	G1 E{s} F2100
	G90
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
	BASE_RESUME

[gcode_macro CANCEL_PRINT]
rename_existing = BASE_CANCEL_PRINT
gcode = 
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	SDCARD_RESET_FILE
	BASE_CANCEL_PRINT
	
	G91
	G1 Z10 F8000
	G90
	G1 X0 Y222 E-3 F8000
	DISABLE_MOTORS
	M106 S0
	M117 Print Canceled

[exclude_object]

[gcode_macro M486]
gcode = 
	
	
	
	
	
	
	
	
	
	
	
	{% if 'exclude_object' not in printer %}
	{action_raise_error("[exclude_object] is not enabled")}
	{% endif %}
	
	{% if 'T' in params %}
	EXCLUDE_OBJECT RESET=1
	
	{% for i in range(params.T | int) %}
	EXCLUDE_OBJECT_DEFINE NAME={i}
	{% endfor %}
	{% endif %}
	
	{% if 'C' in params %}
	EXCLUDE_OBJECT CURRENT=1
	{% endif %}
	
	{% if 'P' in params %}
	EXCLUDE_OBJECT NAME={params.P}
	{% endif %}
	
	{% if 'S' in params %}
	{% if params.S == '-1' %}
	{% if printer.exclude_object.current_object %}
	EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
	{% endif %}
	{% else %}
	EXCLUDE_OBJECT_START NAME={params.S}
	{% endif %}
	{% endif %}
	
	{% if 'U' in params %}
	EXCLUDE_OBJECT RESET=1 NAME={params.U}
	{% endif %}

[gcode_macro GET_TIMELAPSE_SETUP]
description = Print the Timelapse setup
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% set output_txt = ["Timelapse Setup:"] %}
	{% set _dummy = output_txt.append("enable: %s" % tl.enable) %}
	{% set _dummy = output_txt.append("park: %s" % tl.park.enable) %}
	{% if tl.park.enable %}
	{% set _dummy = output_txt.append("park position: %s time: %s s" % (tl.park.pos, tl.park.time)) %}
	{% set _dummy = output_txt.append("park cord x:%s y:%s dz:%s" % (tl.park.coord.x, tl.park.coord.y, tl.park.coord.dz)) %}
	{% set _dummy = output_txt.append("travel speed: %s mm/s" % tl.speed.travel) %}
	{% endif %}
	{% set _dummy = output_txt.append("fw_retract: %s" % tl.extruder.fw_retract) %}
	{% if not tl.extruder.fw_retract %}
	{% set _dummy = output_txt.append("retract: %s mm speed: %s mm/s" % (tl.extruder.retract, tl.speed.retract)) %}
	{% set _dummy = output_txt.append("extrude: %s mm speed: %s mm/s" % (tl.extruder.extrude, tl.speed.extrude)) %}
	{% endif %}
	{% set _dummy = output_txt.append("verbose: %s" % tl.verbose) %}
	{action_respond_info(output_txt|join("\n"))}

[gcode_macro _SET_TIMELAPSE_SETUP]
description = Set user parameters for timelapse
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	
	{% set min = printer.toolhead.axis_minimum %}
	{% set max = printer.toolhead.axis_maximum %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	{% set park = {'min'   : {'x': (min.x / 1.42)|round(3) if round_bed else min.x|round(3),
	'y': (min.y / 1.42)|round(3) if round_bed else min.y|round(3)},
	'max'   : {'x': (max.x / 1.42)|round(3) if round_bed else max.x|round(3),
	'y': (max.y / 1.42)|round(3) if round_bed else max.y|round(3)},
	'center': {'x': (max.x-(max.x-min.x)/2)|round(3),
	'y': (max.y-(max.y-min.y)/2)|round(3)}} %}
	
	{% if params.ENABLE %}
	{% if params.ENABLE|lower is in ['true', 'false'] %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=enable VALUE={True if params.ENABLE|lower == 'true' else False}
	{% else %}
	{action_raise_error("ENABLE=%s not supported. Allowed values are [True, False]" % params.ENABLE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.VERBOSE %}
	{% if params.VERBOSE|lower is in ['true', 'false'] %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=verbose VALUE={True if params.VERBOSE|lower == 'true' else False}
	{% else %}
	{action_raise_error("VERBOSE=%s not supported. Allowed values are [True, False]" % params.VERBOSE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_X %}
	{% if params.CUSTOM_POS_X|float >= min.x and params.CUSTOM_POS_X|float <= max.x %}
	{% set _dummy = tl.park.custom.update({'x':params.CUSTOM_POS_X|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_X=%s must be within [%s - %s]" % (params.CUSTOM_POS_X, min.x, max.x))}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_Y %}
	{% if params.CUSTOM_POS_Y|float >= min.y and params.CUSTOM_POS_Y|float <= max.y %}
	{% set _dummy = tl.park.custom.update({'y':params.CUSTOM_POS_Y|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_Y=%s must be within [%s - %s]" % (params.CUSTOM_POS_Y, min.y, max.y))}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_DZ %}
	{% if params.CUSTOM_POS_DZ|float >= min.z and params.CUSTOM_POS_DZ|float <= max.z %}
	{% set _dummy = tl.park.custom.update({'dz':params.CUSTOM_POS_DZ|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_DZ=%s must be within [%s - %s]" % (params.CUSTOM_POS_DZ, min.z, max.z))}
	{% endif %}
	{% endif %}
	{% if params.PARK_ENABLE %}
	{% if params.PARK_ENABLE|lower is in ['true', 'false'] %}
	{% set _dummy = tl.park.update({'enable':True if params.PARK_ENABLE|lower == 'true' else False}) %}
	{% else %}
	{action_raise_error("PARK_ENABLE=%s not supported. Allowed values are [True, False]" % params.PARK_ENABLE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.PARK_POS %}
	{% if params.PARK_POS|lower is in ['center','front_left','front_right','back_left','back_right','custom','x_only','y_only'] %}
	{% set dic = {'center'      : {'x': park.center.x   , 'y': park.center.y   , 'dz': 1                },
	'front_left'  : {'x': park.min.x      , 'y': park.min.y      , 'dz': 0                },
	'front_right' : {'x': park.max.x      , 'y': park.min.y      , 'dz': 0                },
	'back_left'   : {'x': park.min.x      , 'y': park.max.y      , 'dz': 0                },
	'back_right'  : {'x': park.max.x      , 'y': park.max.y      , 'dz': 0                },
	'custom'      : {'x': tl.park.custom.x, 'y': tl.park.custom.y, 'dz': tl.park.custom.dz},
	'x_only'      : {'x': tl.park.custom.x, 'y': 'none'          , 'dz': tl.park.custom.dz},
	'y_only'      : {'x': 'none'          , 'y': tl.park.custom.y, 'dz': tl.park.custom.dz}} %}
	{% set _dummy = tl.park.update({'pos':params.PARK_POS|lower}) %}
	{% set _dummy = tl.park.update({'coord':dic[tl.park.pos]}) %}
	{% else %}
	{action_raise_error("PARK_POS=%s not supported. Allowed values are [CENTER, FRONT_LEFT, FRONT_RIGHT, BACK_LEFT, BACK_RIGHT, CUSTOM, X_ONLY, Y_ONLY]"
	% params.PARK_POS|upper)}
	{% endif %}
	{% endif %}
	{% if params.PARK_TIME %}
	{% if params.PARK_TIME|float >= 0.0 %}
	{% set _dummy = tl.park.update({'time':params.PARK_TIME|float|round(3)}) %}
	{% else %}
	{action_raise_error("PARK_TIME=%s must be a positive number" % params.PARK_TIME)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=park VALUE="{tl.park}"
	{% if params.TRAVEL_SPEED %}
	{% if params.TRAVEL_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'travel':params.TRAVEL_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("TRAVEL_SPEED=%s must be larger than 0" % params.TRAVEL_SPEED)}
	{% endif %}
	{% endif %}
	{% if params.RETRACT_SPEED %}
	{% if params.RETRACT_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'retract':params.RETRACT_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("RETRACT_SPEED=%s must be larger than 0" % params.RETRACT_SPEED)}
	{% endif %}
	{% endif %}
	{% if params.EXTRUDE_SPEED %}
	{% if params.EXTRUDE_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'extrude':params.EXTRUDE_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("EXTRUDE_SPEED=%s must be larger than 0" % params.EXTRUDE_SPEED)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=speed VALUE="{tl.speed}"
	{% if params.EXTRUDE_DISTANCE %}
	{% if params.EXTRUDE_DISTANCE|float >= 0.0 %}
	{% set _dummy = tl.extruder.update({'extrude':params.EXTRUDE_DISTANCE|float|round(3)}) %}
	{% else %}
	{action_raise_error("EXTRUDE_DISTANCE=%s must be specified as positiv number" % params.EXTRUDE_DISTANCE)}
	{% endif %}
	{% endif %}
	{% if params.RETRACT_DISTANCE %}
	{% if params.RETRACT_DISTANCE|float >= 0.0 %}
	{% set _dummy = tl.extruder.update({'retract':params.RETRACT_DISTANCE|float|round(3)}) %}
	{% else %}
	{action_raise_error("RETRACT_DISTANCE=%s must be specified as positiv number" % params.RETRACT_DISTANCE)}
	{% endif %}
	{% endif %}
	{% if params.FW_RETRACT %}
	{% if params.FW_RETRACT|lower is in ['true', 'false'] %}
	{% if 'firmware_retraction' in printer.configfile.settings %}
	{% set _dummy = tl.extruder.update({'fw_retract': True if params.FW_RETRACT|lower == 'true' else False}) %}
	{% else %}
	{% set _dummy = tl.extruder.update({'fw_retract':False}) %}
	{% if params.FW_RETRACT|capitalize == 'True' %}
	{action_raise_error("[firmware_retraction] not defined in printer.cfg. Can not enable fw_retract")}
	{% endif %}
	{% endif %}
	{% else %}
	{action_raise_error("FW_RETRACT=%s not supported. Allowed values are [True, False]" % params.FW_RETRACT|capitalize)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=extruder VALUE="{tl.extruder}"
	{% if printer.configfile.settings['gcode_macro pause'] is defined %}
	{% set _dummy = tl.macro.update({'pause': printer.configfile.settings['gcode_macro pause'].rename_existing}) %}
	{% endif %}
	{% if printer.configfile.settings['gcode_macro resume'] is defined %}
	{% set _dummy = tl.macro.update({'resume': printer.configfile.settings['gcode_macro resume'].rename_existing}) %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=macro VALUE="{tl.macro}"

[gcode_macro TIMELAPSE_TAKE_FRAME]
description = Take Timelapse shoot
variable_enable = False
variable_takingframe = False
variable_park = {'enable': False,
	'pos'   : 'center',
	'time'  : 0.1,
	'custom': {'x': 0, 'y': 0, 'dz': 0},
	'coord' : {'x': 0, 'y': 0, 'dz': 0}}
variable_extruder = {'fw_retract': False,
	'retract': 1.0,
	'extrude': 1.0}
variable_speed = {'travel': 100,
	'retract': 15,
	'extrude': 15}
variable_verbose = True
variable_restore = {'absolute': {'coordinates': True, 'extrude': True}, 'speed': 1500, 'e':0, 'factor': {'speed': 1.0, 'extrude': 1.0}}
variable_macro = {'pause': 'PAUSE', 'resume': 'RESUME'}
variable_is_paused = False
gcode = 
	{% set hyperlapse = True if params.HYPERLAPSE and params.HYPERLAPSE|lower =='true' else False %}
	{% if enable %}
	{% if (hyperlapse and printer['gcode_macro HYPERLAPSE'].run) or
	(not hyperlapse and not printer['gcode_macro HYPERLAPSE'].run) %}
	{% if park.enable %}
	{% set pos = {'x': 'X' + park.coord.x|string if park.pos != 'y_only' else '',
	'y': 'Y' + park.coord.y|string if park.pos != 'x_only' else '',
	'z': 'Z'+ [printer.gcode_move.gcode_position.z + park.coord.dz, printer.toolhead.axis_maximum.z]|min|string} %}
	{% set restore = {'absolute': {'coordinates': printer.gcode_move.absolute_coordinates,
	'extrude'    : printer.gcode_move.absolute_extrude},
	'speed'   : printer.gcode_move.speed,
	'e'       : printer.gcode_move.gcode_position.e,
	'factor'  : {'speed'  : printer.gcode_move.speed_factor,
	'extrude': printer.gcode_move.extrude_factor}} %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=restore VALUE="{restore}"
	{% if not printer[printer.toolhead.extruder].can_extrude %}
	{% if verbose %}{action_respond_info("Timelapse: Warning, minimum extruder temperature not reached!")}{% endif %}
	{% else %}
	{% if extruder.fw_retract %}
	G10
	{% else %}
	M83
	G0 E-{extruder.retract} F{speed.retract * 60}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=is_paused VALUE=True
	{macro.pause}
	SET_GCODE_OFFSET X=0 Y=0
	G90
	{% if "xyz" not in printer.toolhead.homed_axes %}
	{% if verbose %}{action_respond_info("Timelapse: Warning, axis not homed yet!")}{% endif %}
	{% else %}
	G0 {pos.x} {pos.y} {pos.z} F{speed.travel * 60}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=takingframe VALUE=True
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_TAKE_FRAME DURATION=0.5
	M400
	{% endif %}
	_TIMELAPSE_NEW_FRAME HYPERLAPSE={hyperlapse}
	{% endif %}
	{% else %}
	{% if verbose %}{action_respond_info("Timelapse: disabled, take frame ignored")}{% endif %}
	{% endif %}

[gcode_macro _TIMELAPSE_NEW_FRAME]
description = action call for timelapse shoot. must be a seperate macro
gcode = 
	{action_call_remote_method("timelapse_newframe",
	macropark=printer['gcode_macro TIMELAPSE_TAKE_FRAME'].park,
	hyperlapse=params.HYPERLAPSE)}

[delayed_gcode _WAIT_TIMELAPSE_TAKE_FRAME]
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% set factor = {'speed': printer.gcode_move.speed_factor, 'extrude': printer.gcode_move.extrude_factor} %}
	{% if tl.takingframe %}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_TAKE_FRAME DURATION=0.5
	{% else %}
	{tl.macro.resume} VELOCITY={tl.speed.travel}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=is_paused VALUE=False
	{% if not printer[printer.toolhead.extruder].can_extrude %}
	{action_respond_info("Timelapse: Warning minimum extruder temperature not reached!")}
	{% else %}
	{% if tl.extruder.fw_retract %}
	G11
	{% else %}
	G0 E{tl.extruder.extrude} F{tl.speed.extrude * 60}
	G0 F{tl.restore.speed}
	{% if tl.restore.absolute.extrude %}
	M82
	G92 E{tl.restore.e}
	{% endif %}
	{% endif %}
	{% endif %}
	{% if tl.restore.factor.speed   != factor.speed   %} M220 S{(factor.speed*100)|round(0)}   {% endif %}
	{% if tl.restore.factor.extrude != factor.extrude %} M221 S{(factor.extrude*100)|round(0)} {% endif %}
	{% if not tl.restore.absolute.coordinates %} G91 {% endif %}
	{% endif %}

[gcode_macro HYPERLAPSE]
description = Start/Stop a hyperlapse recording
variable_cycle = 0
variable_run = False
gcode = 
	{% set cycle = params.CYCLE|default(30)|int %}
	{% if params.ACTION and params.ACTION|lower == 'start' %}
	{action_respond_info("Hyperlapse: frames started (Cycle %d sec)" % cycle)}
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=run VALUE=True
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=cycle VALUE={cycle}
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION={cycle}
	TIMELAPSE_TAKE_FRAME HYPERLAPSE=True
	{% elif params.ACTION and params.ACTION|lower == 'stop' %}
	{% if run %}{action_respond_info("Hyperlapse: frames stopped")}{% endif %}
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=run VALUE=False
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION=0
	{% else %}
	{action_raise_error("Hyperlapse: No valid input parameter
	Use:
	- HYPERLAPSE ACTION=START [CYCLE=time]
	- HYPERLAPSE ACTION=STOP")}
	{% endif %}

[delayed_gcode _HYPERLAPSE_LOOP]
gcode = 
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION={printer["gcode_macro HYPERLAPSE"].cycle}
	TIMELAPSE_TAKE_FRAME HYPERLAPSE=True

[gcode_macro TIMELAPSE_RENDER]
description = Render Timelapse video and wait for the result
variable_render = False
variable_run_identifier = 0
gcode = 
	{action_respond_info("Timelapse: Rendering started")}
	{action_call_remote_method("timelapse_render", byrendermacro="True")}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_RENDER VARIABLE=render VALUE=True
	{printer.configfile.settings['gcode_macro pause'].rename_existing}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_RENDER DURATION=0.5

[delayed_gcode _WAIT_TIMELAPSE_RENDER]
gcode = 
	{% set ri = printer['gcode_macro TIMELAPSE_RENDER'].run_identifier % 4 %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_RENDER VARIABLE=run_identifier VALUE={ri + 1}
	{% if printer['gcode_macro TIMELAPSE_RENDER'].render %}
	M117 Rendering {['-','\\','|','/'][ri]}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_RENDER DURATION=0.5
	{% else %}
	{action_respond_info("Timelapse: Rendering finished")}
	M117
	{printer.configfile.settings['gcode_macro resume'].rename_existing}
	{% endif %}

[gcode_macro TEST_STREAM_DELAY]
description = Helper macro to find stream and park delay
gcode = 
	{% set min = printer.toolhead.axis_minimum %}
	{% set max = printer.toolhead.axis_maximum %}
	{% set act = printer.toolhead.position %}
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% if act.z > 5.0 %}
	G0 X{min.x + 5.0} F{tl.speed.travel|int * 60}
	G0 X{(max.x-min.x)/2}
	G4 P{tl.park.time|float * 1000}
	_TIMELAPSE_NEW_FRAME HYPERLAPSE=FALSE
	G0 X{max.x - 5.0}
	{% else %}
	{action_raise_error("Toolhead z %.3f to low. Please place head above z = 5.0" % act.z)}
	{% endif %}

[force_move]
enable_force_move = True

[mcu head0]
canbus_uuid = 20195bac64c4

[temperature_sensor CANBOARD]
sensor_type = temperature_mcu
sensor_mcu = head0

[idle_timeout]
timeout = 100000

[mcu]
serial = /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00

[adc_scaled vref_scaled]
vref_pin = PB5
vssa_pin = PB4

[temperature_sensor pi_cpu]
sensor_type = temperature_host
gcode_id = P

[printer]
kinematics = corexy
max_velocity = 600
max_accel = 15000
max_accel_to_decel = 10000
square_corner_velocity = 10
max_z_velocity = 50
max_z_accel = 180

[stepper_x]
step_pin = PC25
dir_pin = !PB29
enable_pin = !PC28
rotation_distance = 40
microsteps = 32
endstop_pin = ^!head0:PB12
position_endstop = 303
position_max = 303
position_min = 0
homing_speed = 100

[tmc2209 stepper_x]
uart_pin = PA1
tx_pin = PA0
select_pins = PD0
uart_address = 1
run_current = 1
sense_resistor = 0.056

[stepper_y]
step_pin = PC24
dir_pin = !PB28
enable_pin = !PC28
rotation_distance = 40
microsteps = 32
endstop_pin = ^PC4
position_endstop = 308
position_max = 308
position_min = -3
homing_speed = 100
homing_retract_dist = 30

[tmc2209 stepper_y]
uart_pin = PA1
tx_pin = PA0
select_pins = PD0
uart_address = 2
run_current = 1
sense_resistor = 0.056

[stepper_z3]
step_pin = PC26
dir_pin = PB3
enable_pin = !PC28
rotation_distance = 8
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PA1
tx_pin = PA0
select_pins = PD0
uart_address = 0
run_current = 1.1
sense_resistor = 0.056
driver_tbl = 2
driver_hend = 3
driver_hstrt = 4
driver_toff = 4

[stepper_z]
step_pin = PC19
dir_pin = !PD20
enable_pin = !PC28
rotation_distance = 8
microsteps = 32
endstop_pin = probe:z_virtual_endstop
position_max = 390
position_min = -15
homing_speed = 20

[tmc2209 stepper_z]
uart_pin = PA1
tx_pin = PA0
uart_address = 3
select_pins = PD0
run_current = 1.1
sense_resistor = 0.056
driver_tbl = 2
driver_hend = 3
driver_hstrt = 4
driver_toff = 4

[stepper_z1]
step_pin = PC16
dir_pin = PD21
enable_pin = !PC28
rotation_distance = 8
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PA1
tx_pin = PA0
uart_address = 0
select_pins = !PD0
run_current = 1.1
sense_resistor = 0.056
driver_tbl = 2
driver_hend = 3
driver_hstrt = 4
driver_toff = 4

[stepper_z2]
step_pin = PC30
dir_pin = !PB0
enable_pin = !PC28
rotation_distance = 8
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PA1
tx_pin = PA0
uart_address = 1
select_pins = !PD0
run_current = 1.1
sense_resistor = 0.056
driver_tbl = 2
driver_hend = 3
driver_hstrt = 4
driver_toff = 4

[extruder]
step_pin = head0:PB3
dir_pin = head0:PB4
enable_pin = !head0:PB5
heater_pin = head0:PA6
microsteps = 16
full_steps_per_rotation = 200
rotation_distance = 22.67895
gear_ratio = 50:8
nozzle_diameter = 0.500
filament_diameter = 1.750
sensor_type = ATC Semitec 104GT-2
sensor_pin = head0:PA0
pullup_resistor = 2200
min_extrude_temp = 170
max_extrude_cross_section = 5
min_temp = -100
max_temp = 325
control = pid
pid_kp = 24.502
pid_ki = 1.027
pid_kd = 146.095

[tmc2209 extruder]
uart_pin = head0:PA9
interpolate = True
run_current = .3
sense_resistor = 0.110
driver_tbl = 2
driver_hend = 3
driver_hstrt = 5
driver_toff = 6

[heater_bed]
heater_pin = PB17
sensor_type = EPCOS 100K B57560G104F
sensor_pin = vref_scaled:PC2
pullup_resistor = 2200
min_temp = -100
max_temp = 130
max_power = 0.8
control = pid
pid_kp = 20.846
pid_ki = 1.241
pid_kd = 87.555

[fan]
pin = PC10
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend]
pin = head0:PA7
heater = extruder
heater_temp = 45
fan_speed = 1

[controller_fan drivers]
pin = PA11
heater = extruder,heater_bed
fan_speed = 1

[fan_generic chamber]
pin = PB11

[bltouch]
sensor_pin = PC31
control_pin = PB1
stow_on_each_sample = false
probe_with_touch_mode = True
x_offset = 21.765
y_offset = 0
speed = 7
lift_speed = 20
samples = 2
samples_result = average
sample_retract_dist = 5.0
samples_tolerance = 0.01
samples_tolerance_retries = 3
z_offset = 1.265

[safe_z_home]
home_xy_position = 150,150
speed = 350
z_hop = 6
z_hop_speed = 15

[quad_gantry_level]
gantry_corners = 
	-68,-16
	368,355
points = 
	50,50
	50,250
	250,250
	250,50
speed = 350
horizontal_move_z = 10
retries = 8
retry_tolerance = 0.015
max_adjust = 16

[bed_mesh]
mesh_min = 25,25
mesh_max = 275,275
probe_count = 7,7
algorithm = bicubic
speed = 350

[output_pin led]
pin = PB13
shutdown_value = 0
value = 1

[filament_switch_sensor fsensor]
pause_on_runout = True
runout_gcode = 
	M118 Filament Runout Detected
	M600
insert_gcode = 
	M118 Filament Load Detected
	LOAD_FILAMENT
event_delay = 3.0
pause_delay = 0.5
switch_pin = PB30

[gcode_macro LOAD_FILAMENT]
gcode = 
	M117 Loading Filament...
	G92 E0.0
	G91
	G1 E40 F400
	G1 E30 F400
	G1 E60 F200
	G90
	G92 E0.0
	M400
	M117 Load Complete
	UPDATE_DELAYED_GCODE ID=clear_display DURATION=5

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	G90
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	G28
	
	{% if printer.configfile.settings.quad_gantry_level %}
	{% if printer.quad_gantry_level.applied == False %}
	QUAD_GANTRY_LEVEL
	G28 Z
	{% endif %}
	{% endif %}
	G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F{30 * 60}
	G4 P1000
	GET_POSITION
	
	
	G0 X{x_min} Y{y_min} Z{bound + 10} F{speed * 60}
	
	{% for i in range(iterations) %}
	
	G0 X{x_min} Y{y_min} F{speed * 60}
	G0 X{x_max} Y{y_max} F{speed * 60}
	G0 X{x_min} Y{y_min} F{speed * 60}
	G0 X{x_max} Y{y_min} F{speed * 60}
	G0 X{x_min} Y{y_max} F{speed * 60}
	G0 X{x_max} Y{y_min} F{speed * 60}
	
	
	G0 X{x_min} Y{y_min} F{speed * 60}
	G0 X{x_min} Y{y_max} F{speed * 60}
	G0 X{x_max} Y{y_max} F{speed * 60}
	G0 X{x_max} Y{y_min} F{speed * 60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
	
	
	G28 X Y
	
	G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F{30 * 60}
	G4 P1000
	GET_POSITION
	
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 83.8
shaper_type_y = mzv
shaper_freq_y = 75.0

[bed_mesh default]
version = 1
points = 
	1.182277, 1.034152, 1.155402, 1.162277, 1.141027, 1.093527
	1.229777, 1.204777, 1.190402, 1.179777, 1.174777, 1.147902
	1.217277, 1.220402, 1.201027, 1.206027, 1.180402, 1.282277
	1.222277, 1.189777, 1.182277, 1.167277, 1.164152, 1.143527
	1.146027, 1.152277, 1.134777, 1.151027, 1.206652, 1.117277
	1.100402, 1.102277, 1.112902, 1.132277, 1.133527, 1.107277
x_count = 6
y_count = 6
mesh_x_pps = 2
mesh_y_pps = 2
algo = lagrange
tension = 0.2
min_x = 40.715
max_x = 259.265
min_y = 38.99
max_y = 261.19
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
webhooks client 1964482928: New connection
webhooks client 1964482928: Client info {'program': 'Moonraker', 'version': 'v0.7.1-885-g4550664'}
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
Attempting MCU 'mcu' reset
Unhandled exception during post run
Traceback (most recent call last):
  File "/home/pi/klippy-env/lib/python3.7/site-packages/serial/serialposix.py", line 265, in open
    self.fd = os.open(self.portstr, os.O_RDWR | os.O_NOCTTY | os.O_NONBLOCK)
FileNotFoundError: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/pi/klipper/klippy/klippy.py", line 234, in run
    self.send_event("klippy:firmware_restart")
  File "/home/pi/klipper/klippy/klippy.py", line 263, in send_event
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/klippy.py", line 263, in <listcomp>
    return [cb(*params) for cb in self.event_handlers.get(event, [])]
  File "/home/pi/klipper/klippy/mcu.py", line 931, in _firmware_restart
    self._restart_arduino()
  File "/home/pi/klipper/klippy/mcu.py", line 891, in _restart_arduino
    serialhdl.arduino_reset(self._serialport, self._reactor)
  File "/home/pi/klipper/klippy/serialhdl.py", line 379, in arduino_reset
    ser = serial.Serial(serialport, 2400, timeout=0, exclusive=True)
  File "/home/pi/klippy-env/lib/python3.7/site-packages/serial/serialutil.py", line 240, in __init__
    self.open()
  File "/home/pi/klippy-env/lib/python3.7/site-packages/serial/serialposix.py", line 268, in open
    raise SerialException(msg.errno, "could not open port {}: {}".format(self._port, msg))
serial.serialutil.SerialException: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
Restarting printer
Start printer at Mon Apr 24 23:07:41 2023 (1682402861.4 139.1)
===== Config file =====
[gcode_macro BED_MESH_CALIBRATE]
rename_existing = _BED_MESH_CALIBRATE
variable_led_enable = False
variable_status_macro = 'status_meshing'
variable_fuzz_enable = False
variable_fuzz_min = 0
variable_fuzz_max = 4
variable_probe_dock_enable = False
variable_attach_macro = 'Attach_Probe'
variable_detach_macro = 'Dock_Probe'
gcode = 
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}
	{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}
	{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (printer.configfile.settings.bed_mesh.probe_count[0]-2)  %}
	{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (printer.configfile.settings.bed_mesh.probe_count[1]-2)  %}
	{% set x_min = bed_mesh_min[0] %}
	{% set y_min = bed_mesh_min[1] %}
	{% set x_max = bed_mesh_max[0] %}
	{% set y_max = bed_mesh_max[1] %}
	
	{ action_respond_info("{} points, clamping to mesh [{!r} {!r}]".format(
	all_points | count,
	bed_mesh_min,
	bed_mesh_max,
	)) }
	
	{% if fuzz_enable == True %}
	{% if all_points %}
	{% set fuzz_range = range(fuzz_min * 100 | int, fuzz_max * 100 | int) %}
	{% set x_min = ( bed_mesh_min[0], ((all_points | map(attribute=0) | min - (fuzz_range | random / 100.0)) | default(bed_mesh_min[0])) ) | max %}
	{% set y_min = ( bed_mesh_min[1], ((all_points | map(attribute=1) | min - (fuzz_range | random / 100.0)) | default(bed_mesh_min[1])) ) | max %}
	{% set x_max = ( bed_mesh_max[0], ((all_points | map(attribute=0) | max + (fuzz_range | random / 100.0)) | default(bed_mesh_max[0])) ) | min %}
	{% set y_max = ( bed_mesh_max[1], ((all_points | map(attribute=1) | max + (fuzz_range | random / 100.0)) | default(bed_mesh_max[1])) ) | min %}
	{% endif %}
	{% else %}
	{% set x_min = [ bed_mesh_min[0], (all_points | map(attribute=0) | min | default(bed_mesh_min[0])) ] | max %}
	{% set y_min = [ bed_mesh_min[1], (all_points | map(attribute=1) | min | default(bed_mesh_min[1])) ] | max %}
	{% set x_max = [ bed_mesh_max[0], (all_points | map(attribute=0) | max | default(bed_mesh_max[0])) ] | min %}
	{% set y_max = [ bed_mesh_max[1], (all_points | map(attribute=1) | max | default(bed_mesh_max[1])) ] | min %}
	{% endif %}
	
	{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(
	(x_min, y_min),
	(x_max, y_max),
	)) }
	
	{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | int) + 2 %}
	{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | int) + 2 %}
	
	{% if (([points_x, points_y]|max) > 6) %}
	{% set algorithm = "bicubic" %}
	{% set min_points = 4 %}
	{% else %}
	{% set algorithm = "lagrange" %}
	{% set min_points = 3 %}
	{% endif %}
	{ action_respond_info( "Algorithm: {}".format(algorithm)) }
	
	{% set points_x = [points_x, min_points]|max  %}
	{% set points_y = [points_y, min_points]|max  %}
	{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }
	
	{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}
	{% set ref_index = (points_x * points_y / 2) | int %}
	{ action_respond_info( "Reference index: {}".format(ref_index) ) }
	{% else %}
	{% set ref_index = -1 %}
	{% endif %}
	
	{% if probe_dock_enable == True %}
	{attach_macro}
	{% endif %}
	
	{% if led_enable == True %}
	{status_macro}
	{% endif %}
	
	_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}
	
	{% if probe_dock_enable == True %}
	{detach_macro}
	{% endif %}

[gcode_macro ADAPTIVE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
variable_adaptive_enable = True
variable_z_height = 0.3
variable_tip_distance = 10
variable_purge_amount = 25
variable_flow_rate = 10
variable_x_default = 10
variable_y_default = 10
variable_size = 10
variable_distance_to_object_x = 15
variable_distance_to_object_y = 0
variable_travel_speed = 300
gcode = 
	{% if adaptive_enable == True %}
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set x_origin = (all_points | map(attribute=0) | min | default(x_default + distance_to_object_x + size)) - distance_to_object_x - size %}
	{% set y_origin = (all_points | map(attribute=1) | min | default(y_default + distance_to_object_y + size)) - distance_to_object_y - size %}
	{% set x_origin = ([x_origin, 0] | max) %}
	{% set y_origin = ([y_origin, 0] | max) %}
	{% else %}
	{% set x_origin = x_default | float %}
	{% set y_origin = y_default | float %}
	{% endif %}
	{% set purge_move_speed = 2.31 * size * flow_rate / (purge_amount * 2.405) %}
	{% set prepurge_speed = flow_rate / 2.405 %}
	{ action_respond_info( "x: " + x_origin|string + " y: " + y_origin|string + " purge_move_speed: " + purge_move_speed|string + " prepurge_speed: " + prepurge_speed|string ) }
	
	G92 E0
	G0 F{travel_speed*60}
	G90
	G0 X{x_origin} Y{y_origin+size/2}
	G0 Z{z_height}
	M83
	G1 E{tip_distance} F{prepurge_speed*60}
	G1 X{x_origin+size*0.289} Y{y_origin+size} E{purge_amount/4} F{purge_move_speed*60}
	G1 E-.5 F2100
	G0 Z{z_height*2}
	G0 X{x_origin+size*0.789} Y{y_origin+size}
	G0 Z{z_height}
	G1 E.5 F2100
	G1 X{x_origin+size*0.211} Y{y_origin} E{purge_amount/2} F{purge_move_speed*60}
	G1 E-.5 F2100
	G0 Z{z_height*2}
	G0 X{x_origin+size*0.711} Y{y_origin}
	G0 Z{z_height}
	G1 E.5 F2100
	G1 X{x_origin+size} Y{y_origin+size/2}  E{purge_amount/4} F{purge_move_speed*60}
	G1 E-.5 F2100
	G92 E0
	G0 Z{z_height*2}

[virtual_sdcard]
path = /home/pi/gcode_files

[pause_resume]

[gcode_macro PRINT_START]
variable_parameter_area_start = 0,0
variable_parameter_area_end = 0,0
gcode = 
	SET_FAN_SPEED FAN=chamber SPEED=.5
	SET_FAN_SPEED FAN=drivers SPEED=1
	{% set BED = params.BED|default(55)|int %}
	{% set EXTRUDER = params.EXTRUDER|default(205)|int %}
	G28 X Y
	
	M104 S170
	M140 S{BED}
	RESPOND PREFIX= MSG="Waiting for temperatures..."
	M117  Waiting for temperatures...
	M190 S{BED}
	RESPOND PREFIX= MSG="Waiting for thermal expansion..."
	M117 Waiting for thermal expansion...
	G4 P30000
	RESPOND PREFIX= MSG="Creating a mesh..."
	M117 Creating a mesh...
	G28
	QUAD_GANTRY_LEVEL
	BED_MESH_CALIBRATE
	
	M104 S{EXTRUDER}
	
	
	RESPOND PREFIX= MSG="Moving to prime position"
	M117 Moving to prime position
	G1 X25 Y-2 Z10 F5000.0
	{% if printer.extruder.temperature < params.EXTRUDER|float*0.98 %}
	M109 S{params.EXTRUDER|float*0.98}
	{% endif %}
	M104 S{EXTRUDER}
	G4 P30000
	ADAPTIVE_PURGE
	RESPOND PREFIX= MSG="Printing..."
	M117 Printing...
	M117

[gcode_macro PID_TUNE]
gcode = 
	G28
	G1 Z10 F7800
	M106 S64
	PID_CALIBRATE HEATER=extruder TARGET=245
	
	
	RESPOND PREFIX= MSG="Moving to prime position"
	M117 Moving to prime position
	G1 X25 Y-3 Z10 F5000.0
	{% if printer.extruder.temperature < params.EXTRUDER|float*0.98 %}
	M109 S{params.EXTRUDER|float*0.98}
	{% endif %}
	M104 S{EXTRUDER}
	
	RESPOND PREFIX= MSG="Priming the nozzle"
	M117 Priming the nozzle
	G92 E0
	G0 Z0.15
	G0 X55 Y-2 Z0.28 F1500.0
	G92 E0
	G1 X195 Y-2 Z0.28 F1500.0 E15
	G92 E0
	G10
	G1 Z2.0 F3000
	
	RESPOND PREFIX= MSG="Printing..."
	M117 Printing...
	M117

[display_status]

[gcode_macro END_PRINT]
gcode = 
	
	G91
	G1 E-2
	
	G90
	
	TURN_OFF_HEATERS
	
	G28 X Y

[gcode_macro PAUSE]
rename_existing = BASE_PAUSE
gcode = 
	
	SAVE_GCODE_STATE NAME=PAUSE_state
	BASE_PAUSE
	G91
	G1 E-{2} F2100
	G1 Z{10}
	G90
	G1 X{230} Y{230} F6000
	G91

[gcode_macro RESUME]
rename_existing = BASE_RESUME
gcode = 
	G91
	G1 E{s} F2100
	G90
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
	BASE_RESUME

[gcode_macro CANCEL_PRINT]
rename_existing = BASE_CANCEL_PRINT
gcode = 
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	SDCARD_RESET_FILE
	BASE_CANCEL_PRINT
	
	G91
	G1 Z10 F8000
	G90
	G1 X0 Y222 E-3 F8000
	DISABLE_MOTORS
	M106 S0
	M117 Print Canceled

[exclude_object]

[gcode_macro M486]
gcode = 
	
	
	
	
	
	
	
	
	
	
	
	{% if 'exclude_object' not in printer %}
	{action_raise_error("[exclude_object] is not enabled")}
	{% endif %}
	
	{% if 'T' in params %}
	EXCLUDE_OBJECT RESET=1
	
	{% for i in range(params.T | int) %}
	EXCLUDE_OBJECT_DEFINE NAME={i}
	{% endfor %}
	{% endif %}
	
	{% if 'C' in params %}
	EXCLUDE_OBJECT CURRENT=1
	{% endif %}
	
	{% if 'P' in params %}
	EXCLUDE_OBJECT NAME={params.P}
	{% endif %}
	
	{% if 'S' in params %}
	{% if params.S == '-1' %}
	{% if printer.exclude_object.current_object %}
	EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
	{% endif %}
	{% else %}
	EXCLUDE_OBJECT_START NAME={params.S}
	{% endif %}
	{% endif %}
	
	{% if 'U' in params %}
	EXCLUDE_OBJECT RESET=1 NAME={params.U}
	{% endif %}

[gcode_macro GET_TIMELAPSE_SETUP]
description = Print the Timelapse setup
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% set output_txt = ["Timelapse Setup:"] %}
	{% set _dummy = output_txt.append("enable: %s" % tl.enable) %}
	{% set _dummy = output_txt.append("park: %s" % tl.park.enable) %}
	{% if tl.park.enable %}
	{% set _dummy = output_txt.append("park position: %s time: %s s" % (tl.park.pos, tl.park.time)) %}
	{% set _dummy = output_txt.append("park cord x:%s y:%s dz:%s" % (tl.park.coord.x, tl.park.coord.y, tl.park.coord.dz)) %}
	{% set _dummy = output_txt.append("travel speed: %s mm/s" % tl.speed.travel) %}
	{% endif %}
	{% set _dummy = output_txt.append("fw_retract: %s" % tl.extruder.fw_retract) %}
	{% if not tl.extruder.fw_retract %}
	{% set _dummy = output_txt.append("retract: %s mm speed: %s mm/s" % (tl.extruder.retract, tl.speed.retract)) %}
	{% set _dummy = output_txt.append("extrude: %s mm speed: %s mm/s" % (tl.extruder.extrude, tl.speed.extrude)) %}
	{% endif %}
	{% set _dummy = output_txt.append("verbose: %s" % tl.verbose) %}
	{action_respond_info(output_txt|join("\n"))}

[gcode_macro _SET_TIMELAPSE_SETUP]
description = Set user parameters for timelapse
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	
	{% set min = printer.toolhead.axis_minimum %}
	{% set max = printer.toolhead.axis_maximum %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	{% set park = {'min'   : {'x': (min.x / 1.42)|round(3) if round_bed else min.x|round(3),
	'y': (min.y / 1.42)|round(3) if round_bed else min.y|round(3)},
	'max'   : {'x': (max.x / 1.42)|round(3) if round_bed else max.x|round(3),
	'y': (max.y / 1.42)|round(3) if round_bed else max.y|round(3)},
	'center': {'x': (max.x-(max.x-min.x)/2)|round(3),
	'y': (max.y-(max.y-min.y)/2)|round(3)}} %}
	
	{% if params.ENABLE %}
	{% if params.ENABLE|lower is in ['true', 'false'] %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=enable VALUE={True if params.ENABLE|lower == 'true' else False}
	{% else %}
	{action_raise_error("ENABLE=%s not supported. Allowed values are [True, False]" % params.ENABLE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.VERBOSE %}
	{% if params.VERBOSE|lower is in ['true', 'false'] %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=verbose VALUE={True if params.VERBOSE|lower == 'true' else False}
	{% else %}
	{action_raise_error("VERBOSE=%s not supported. Allowed values are [True, False]" % params.VERBOSE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_X %}
	{% if params.CUSTOM_POS_X|float >= min.x and params.CUSTOM_POS_X|float <= max.x %}
	{% set _dummy = tl.park.custom.update({'x':params.CUSTOM_POS_X|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_X=%s must be within [%s - %s]" % (params.CUSTOM_POS_X, min.x, max.x))}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_Y %}
	{% if params.CUSTOM_POS_Y|float >= min.y and params.CUSTOM_POS_Y|float <= max.y %}
	{% set _dummy = tl.park.custom.update({'y':params.CUSTOM_POS_Y|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_Y=%s must be within [%s - %s]" % (params.CUSTOM_POS_Y, min.y, max.y))}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_DZ %}
	{% if params.CUSTOM_POS_DZ|float >= min.z and params.CUSTOM_POS_DZ|float <= max.z %}
	{% set _dummy = tl.park.custom.update({'dz':params.CUSTOM_POS_DZ|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_DZ=%s must be within [%s - %s]" % (params.CUSTOM_POS_DZ, min.z, max.z))}
	{% endif %}
	{% endif %}
	{% if params.PARK_ENABLE %}
	{% if params.PARK_ENABLE|lower is in ['true', 'false'] %}
	{% set _dummy = tl.park.update({'enable':True if params.PARK_ENABLE|lower == 'true' else False}) %}
	{% else %}
	{action_raise_error("PARK_ENABLE=%s not supported. Allowed values are [True, False]" % params.PARK_ENABLE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.PARK_POS %}
	{% if params.PARK_POS|lower is in ['center','front_left','front_right','back_left','back_right','custom','x_only','y_only'] %}
	{% set dic = {'center'      : {'x': park.center.x   , 'y': park.center.y   , 'dz': 1                },
	'front_left'  : {'x': park.min.x      , 'y': park.min.y      , 'dz': 0                },
	'front_right' : {'x': park.max.x      , 'y': park.min.y      , 'dz': 0                },
	'back_left'   : {'x': park.min.x      , 'y': park.max.y      , 'dz': 0                },
	'back_right'  : {'x': park.max.x      , 'y': park.max.y      , 'dz': 0                },
	'custom'      : {'x': tl.park.custom.x, 'y': tl.park.custom.y, 'dz': tl.park.custom.dz},
	'x_only'      : {'x': tl.park.custom.x, 'y': 'none'          , 'dz': tl.park.custom.dz},
	'y_only'      : {'x': 'none'          , 'y': tl.park.custom.y, 'dz': tl.park.custom.dz}} %}
	{% set _dummy = tl.park.update({'pos':params.PARK_POS|lower}) %}
	{% set _dummy = tl.park.update({'coord':dic[tl.park.pos]}) %}
	{% else %}
	{action_raise_error("PARK_POS=%s not supported. Allowed values are [CENTER, FRONT_LEFT, FRONT_RIGHT, BACK_LEFT, BACK_RIGHT, CUSTOM, X_ONLY, Y_ONLY]"
	% params.PARK_POS|upper)}
	{% endif %}
	{% endif %}
	{% if params.PARK_TIME %}
	{% if params.PARK_TIME|float >= 0.0 %}
	{% set _dummy = tl.park.update({'time':params.PARK_TIME|float|round(3)}) %}
	{% else %}
	{action_raise_error("PARK_TIME=%s must be a positive number" % params.PARK_TIME)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=park VALUE="{tl.park}"
	{% if params.TRAVEL_SPEED %}
	{% if params.TRAVEL_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'travel':params.TRAVEL_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("TRAVEL_SPEED=%s must be larger than 0" % params.TRAVEL_SPEED)}
	{% endif %}
	{% endif %}
	{% if params.RETRACT_SPEED %}
	{% if params.RETRACT_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'retract':params.RETRACT_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("RETRACT_SPEED=%s must be larger than 0" % params.RETRACT_SPEED)}
	{% endif %}
	{% endif %}
	{% if params.EXTRUDE_SPEED %}
	{% if params.EXTRUDE_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'extrude':params.EXTRUDE_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("EXTRUDE_SPEED=%s must be larger than 0" % params.EXTRUDE_SPEED)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=speed VALUE="{tl.speed}"
	{% if params.EXTRUDE_DISTANCE %}
	{% if params.EXTRUDE_DISTANCE|float >= 0.0 %}
	{% set _dummy = tl.extruder.update({'extrude':params.EXTRUDE_DISTANCE|float|round(3)}) %}
	{% else %}
	{action_raise_error("EXTRUDE_DISTANCE=%s must be specified as positiv number" % params.EXTRUDE_DISTANCE)}
	{% endif %}
	{% endif %}
	{% if params.RETRACT_DISTANCE %}
	{% if params.RETRACT_DISTANCE|float >= 0.0 %}
	{% set _dummy = tl.extruder.update({'retract':params.RETRACT_DISTANCE|float|round(3)}) %}
	{% else %}
	{action_raise_error("RETRACT_DISTANCE=%s must be specified as positiv number" % params.RETRACT_DISTANCE)}
	{% endif %}
	{% endif %}
	{% if params.FW_RETRACT %}
	{% if params.FW_RETRACT|lower is in ['true', 'false'] %}
	{% if 'firmware_retraction' in printer.configfile.settings %}
	{% set _dummy = tl.extruder.update({'fw_retract': True if params.FW_RETRACT|lower == 'true' else False}) %}
	{% else %}
	{% set _dummy = tl.extruder.update({'fw_retract':False}) %}
	{% if params.FW_RETRACT|capitalize == 'True' %}
	{action_raise_error("[firmware_retraction] not defined in printer.cfg. Can not enable fw_retract")}
	{% endif %}
	{% endif %}
	{% else %}
	{action_raise_error("FW_RETRACT=%s not supported. Allowed values are [True, False]" % params.FW_RETRACT|capitalize)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=extruder VALUE="{tl.extruder}"
	{% if printer.configfile.settings['gcode_macro pause'] is defined %}
	{% set _dummy = tl.macro.update({'pause': printer.configfile.settings['gcode_macro pause'].rename_existing}) %}
	{% endif %}
	{% if printer.configfile.settings['gcode_macro resume'] is defined %}
	{% set _dummy = tl.macro.update({'resume': printer.configfile.settings['gcode_macro resume'].rename_existing}) %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=macro VALUE="{tl.macro}"

[gcode_macro TIMELAPSE_TAKE_FRAME]
description = Take Timelapse shoot
variable_enable = False
variable_takingframe = False
variable_park = {'enable': False,
	'pos'   : 'center',
	'time'  : 0.1,
	'custom': {'x': 0, 'y': 0, 'dz': 0},
	'coord' : {'x': 0, 'y': 0, 'dz': 0}}
variable_extruder = {'fw_retract': False,
	'retract': 1.0,
	'extrude': 1.0}
variable_speed = {'travel': 100,
	'retract': 15,
	'extrude': 15}
variable_verbose = True
variable_restore = {'absolute': {'coordinates': True, 'extrude': True}, 'speed': 1500, 'e':0, 'factor': {'speed': 1.0, 'extrude': 1.0}}
variable_macro = {'pause': 'PAUSE', 'resume': 'RESUME'}
variable_is_paused = False
gcode = 
	{% set hyperlapse = True if params.HYPERLAPSE and params.HYPERLAPSE|lower =='true' else False %}
	{% if enable %}
	{% if (hyperlapse and printer['gcode_macro HYPERLAPSE'].run) or
	(not hyperlapse and not printer['gcode_macro HYPERLAPSE'].run) %}
	{% if park.enable %}
	{% set pos = {'x': 'X' + park.coord.x|string if park.pos != 'y_only' else '',
	'y': 'Y' + park.coord.y|string if park.pos != 'x_only' else '',
	'z': 'Z'+ [printer.gcode_move.gcode_position.z + park.coord.dz, printer.toolhead.axis_maximum.z]|min|string} %}
	{% set restore = {'absolute': {'coordinates': printer.gcode_move.absolute_coordinates,
	'extrude'    : printer.gcode_move.absolute_extrude},
	'speed'   : printer.gcode_move.speed,
	'e'       : printer.gcode_move.gcode_position.e,
	'factor'  : {'speed'  : printer.gcode_move.speed_factor,
	'extrude': printer.gcode_move.extrude_factor}} %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=restore VALUE="{restore}"
	{% if not printer[printer.toolhead.extruder].can_extrude %}
	{% if verbose %}{action_respond_info("Timelapse: Warning, minimum extruder temperature not reached!")}{% endif %}
	{% else %}
	{% if extruder.fw_retract %}
	G10
	{% else %}
	M83
	G0 E-{extruder.retract} F{speed.retract * 60}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=is_paused VALUE=True
	{macro.pause}
	SET_GCODE_OFFSET X=0 Y=0
	G90
	{% if "xyz" not in printer.toolhead.homed_axes %}
	{% if verbose %}{action_respond_info("Timelapse: Warning, axis not homed yet!")}{% endif %}
	{% else %}
	G0 {pos.x} {pos.y} {pos.z} F{speed.travel * 60}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=takingframe VALUE=True
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_TAKE_FRAME DURATION=0.5
	M400
	{% endif %}
	_TIMELAPSE_NEW_FRAME HYPERLAPSE={hyperlapse}
	{% endif %}
	{% else %}
	{% if verbose %}{action_respond_info("Timelapse: disabled, take frame ignored")}{% endif %}
	{% endif %}

[gcode_macro _TIMELAPSE_NEW_FRAME]
description = action call for timelapse shoot. must be a seperate macro
gcode = 
	{action_call_remote_method("timelapse_newframe",
	macropark=printer['gcode_macro TIMELAPSE_TAKE_FRAME'].park,
	hyperlapse=params.HYPERLAPSE)}

[delayed_gcode _WAIT_TIMELAPSE_TAKE_FRAME]
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% set factor = {'speed': printer.gcode_move.speed_factor, 'extrude': printer.gcode_move.extrude_factor} %}
	{% if tl.takingframe %}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_TAKE_FRAME DURATION=0.5
	{% else %}
	{tl.macro.resume} VELOCITY={tl.speed.travel}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=is_paused VALUE=False
	{% if not printer[printer.toolhead.extruder].can_extrude %}
	{action_respond_info("Timelapse: Warning minimum extruder temperature not reached!")}
	{% else %}
	{% if tl.extruder.fw_retract %}
	G11
	{% else %}
	G0 E{tl.extruder.extrude} F{tl.speed.extrude * 60}
	G0 F{tl.restore.speed}
	{% if tl.restore.absolute.extrude %}
	M82
	G92 E{tl.restore.e}
	{% endif %}
	{% endif %}
	{% endif %}
	{% if tl.restore.factor.speed   != factor.speed   %} M220 S{(factor.speed*100)|round(0)}   {% endif %}
	{% if tl.restore.factor.extrude != factor.extrude %} M221 S{(factor.extrude*100)|round(0)} {% endif %}
	{% if not tl.restore.absolute.coordinates %} G91 {% endif %}
	{% endif %}

[gcode_macro HYPERLAPSE]
description = Start/Stop a hyperlapse recording
variable_cycle = 0
variable_run = False
gcode = 
	{% set cycle = params.CYCLE|default(30)|int %}
	{% if params.ACTION and params.ACTION|lower == 'start' %}
	{action_respond_info("Hyperlapse: frames started (Cycle %d sec)" % cycle)}
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=run VALUE=True
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=cycle VALUE={cycle}
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION={cycle}
	TIMELAPSE_TAKE_FRAME HYPERLAPSE=True
	{% elif params.ACTION and params.ACTION|lower == 'stop' %}
	{% if run %}{action_respond_info("Hyperlapse: frames stopped")}{% endif %}
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=run VALUE=False
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION=0
	{% else %}
	{action_raise_error("Hyperlapse: No valid input parameter
	Use:
	- HYPERLAPSE ACTION=START [CYCLE=time]
	- HYPERLAPSE ACTION=STOP")}
	{% endif %}

[delayed_gcode _HYPERLAPSE_LOOP]
gcode = 
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION={printer["gcode_macro HYPERLAPSE"].cycle}
	TIMELAPSE_TAKE_FRAME HYPERLAPSE=True

[gcode_macro TIMELAPSE_RENDER]
description = Render Timelapse video and wait for the result
variable_render = False
variable_run_identifier = 0
gcode = 
	{action_respond_info("Timelapse: Rendering started")}
	{action_call_remote_method("timelapse_render", byrendermacro="True")}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_RENDER VARIABLE=render VALUE=True
	{printer.configfile.settings['gcode_macro pause'].rename_existing}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_RENDER DURATION=0.5

[delayed_gcode _WAIT_TIMELAPSE_RENDER]
gcode = 
	{% set ri = printer['gcode_macro TIMELAPSE_RENDER'].run_identifier % 4 %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_RENDER VARIABLE=run_identifier VALUE={ri + 1}
	{% if printer['gcode_macro TIMELAPSE_RENDER'].render %}
	M117 Rendering {['-','\\','|','/'][ri]}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_RENDER DURATION=0.5
	{% else %}
	{action_respond_info("Timelapse: Rendering finished")}
	M117
	{printer.configfile.settings['gcode_macro resume'].rename_existing}
	{% endif %}

[gcode_macro TEST_STREAM_DELAY]
description = Helper macro to find stream and park delay
gcode = 
	{% set min = printer.toolhead.axis_minimum %}
	{% set max = printer.toolhead.axis_maximum %}
	{% set act = printer.toolhead.position %}
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% if act.z > 5.0 %}
	G0 X{min.x + 5.0} F{tl.speed.travel|int * 60}
	G0 X{(max.x-min.x)/2}
	G4 P{tl.park.time|float * 1000}
	_TIMELAPSE_NEW_FRAME HYPERLAPSE=FALSE
	G0 X{max.x - 5.0}
	{% else %}
	{action_raise_error("Toolhead z %.3f to low. Please place head above z = 5.0" % act.z)}
	{% endif %}

[force_move]
enable_force_move = True

[mcu head0]
canbus_uuid = 20195bac64c4

[temperature_sensor CANBOARD]
sensor_type = temperature_mcu
sensor_mcu = head0

[idle_timeout]
timeout = 100000

[mcu]
serial = /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00

[adc_scaled vref_scaled]
vref_pin = PB5
vssa_pin = PB4

[temperature_sensor pi_cpu]
sensor_type = temperature_host
gcode_id = P

[printer]
kinematics = corexy
max_velocity = 600
max_accel = 15000
max_accel_to_decel = 10000
square_corner_velocity = 10
max_z_velocity = 50
max_z_accel = 180

[stepper_x]
step_pin = PC25
dir_pin = !PB29
enable_pin = !PC28
rotation_distance = 40
microsteps = 32
endstop_pin = ^!head0:PB12
position_endstop = 303
position_max = 303
position_min = 0
homing_speed = 100

[tmc2209 stepper_x]
uart_pin = PA1
tx_pin = PA0
select_pins = PD0
uart_address = 1
run_current = 1
sense_resistor = 0.056

[stepper_y]
step_pin = PC24
dir_pin = !PB28
enable_pin = !PC28
rotation_distance = 40
microsteps = 32
endstop_pin = ^PC4
position_endstop = 308
position_max = 308
position_min = -3
homing_speed = 100
homing_retract_dist = 30

[tmc2209 stepper_y]
uart_pin = PA1
tx_pin = PA0
select_pins = PD0
uart_address = 2
run_current = 1
sense_resistor = 0.056

[stepper_z3]
step_pin = PC26
dir_pin = PB3
enable_pin = !PC28
rotation_distance = 8
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PA1
tx_pin = PA0
select_pins = PD0
uart_address = 0
run_current = 1.1
sense_resistor = 0.056
driver_tbl = 2
driver_hend = 3
driver_hstrt = 4
driver_toff = 4

[stepper_z]
step_pin = PC19
dir_pin = !PD20
enable_pin = !PC28
rotation_distance = 8
microsteps = 32
endstop_pin = probe:z_virtual_endstop
position_max = 390
position_min = -15
homing_speed = 20

[tmc2209 stepper_z]
uart_pin = PA1
tx_pin = PA0
uart_address = 3
select_pins = PD0
run_current = 1.1
sense_resistor = 0.056
driver_tbl = 2
driver_hend = 3
driver_hstrt = 4
driver_toff = 4

[stepper_z1]
step_pin = PC16
dir_pin = PD21
enable_pin = !PC28
rotation_distance = 8
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PA1
tx_pin = PA0
uart_address = 0
select_pins = !PD0
run_current = 1.1
sense_resistor = 0.056
driver_tbl = 2
driver_hend = 3
driver_hstrt = 4
driver_toff = 4

[stepper_z2]
step_pin = PC30
dir_pin = !PB0
enable_pin = !PC28
rotation_distance = 8
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PA1
tx_pin = PA0
uart_address = 1
select_pins = !PD0
run_current = 1.1
sense_resistor = 0.056
driver_tbl = 2
driver_hend = 3
driver_hstrt = 4
driver_toff = 4

[extruder]
step_pin = head0:PB3
dir_pin = head0:PB4
enable_pin = !head0:PB5
heater_pin = head0:PA6
microsteps = 16
full_steps_per_rotation = 200
rotation_distance = 22.67895
gear_ratio = 50:8
nozzle_diameter = 0.500
filament_diameter = 1.750
sensor_type = ATC Semitec 104GT-2
sensor_pin = head0:PA0
pullup_resistor = 2200
min_extrude_temp = 170
max_extrude_cross_section = 5
min_temp = -100
max_temp = 325
control = pid
pid_kp = 24.502
pid_ki = 1.027
pid_kd = 146.095

[tmc2209 extruder]
uart_pin = head0:PA9
interpolate = True
run_current = .3
sense_resistor = 0.110
driver_tbl = 2
driver_hend = 3
driver_hstrt = 5
driver_toff = 6

[heater_bed]
heater_pin = PB17
sensor_type = EPCOS 100K B57560G104F
sensor_pin = vref_scaled:PC2
pullup_resistor = 2200
min_temp = -100
max_temp = 130
max_power = 0.8
control = pid
pid_kp = 20.846
pid_ki = 1.241
pid_kd = 87.555

[fan]
pin = PC10
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend]
pin = head0:PA7
heater = extruder
heater_temp = 45
fan_speed = 1

[controller_fan drivers]
pin = PA11
heater = extruder,heater_bed
fan_speed = 1

[fan_generic chamber]
pin = PB11

[bltouch]
sensor_pin = PC31
control_pin = PB1
stow_on_each_sample = false
probe_with_touch_mode = True
x_offset = 21.765
y_offset = 0
speed = 7
lift_speed = 20
samples = 2
samples_result = average
sample_retract_dist = 5.0
samples_tolerance = 0.01
samples_tolerance_retries = 3
z_offset = 1.265

[safe_z_home]
home_xy_position = 150,150
speed = 350
z_hop = 6
z_hop_speed = 15

[quad_gantry_level]
gantry_corners = 
	-68,-16
	368,355
points = 
	50,50
	50,250
	250,250
	250,50
speed = 350
horizontal_move_z = 10
retries = 8
retry_tolerance = 0.015
max_adjust = 16

[bed_mesh]
mesh_min = 25,25
mesh_max = 275,275
probe_count = 7,7
algorithm = bicubic
speed = 350

[output_pin led]
pin = PB13
shutdown_value = 0
value = 1

[filament_switch_sensor fsensor]
pause_on_runout = True
runout_gcode = 
	M118 Filament Runout Detected
	M600
insert_gcode = 
	M118 Filament Load Detected
	LOAD_FILAMENT
event_delay = 3.0
pause_delay = 0.5
switch_pin = PB30

[gcode_macro LOAD_FILAMENT]
gcode = 
	M117 Loading Filament...
	G92 E0.0
	G91
	G1 E40 F400
	G1 E30 F400
	G1 E60 F200
	G90
	G92 E0.0
	M400
	M117 Load Complete
	UPDATE_DELAYED_GCODE ID=clear_display DURATION=5

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	G90
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	G28
	
	{% if printer.configfile.settings.quad_gantry_level %}
	{% if printer.quad_gantry_level.applied == False %}
	QUAD_GANTRY_LEVEL
	G28 Z
	{% endif %}
	{% endif %}
	G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F{30 * 60}
	G4 P1000
	GET_POSITION
	
	
	G0 X{x_min} Y{y_min} Z{bound + 10} F{speed * 60}
	
	{% for i in range(iterations) %}
	
	G0 X{x_min} Y{y_min} F{speed * 60}
	G0 X{x_max} Y{y_max} F{speed * 60}
	G0 X{x_min} Y{y_min} F{speed * 60}
	G0 X{x_max} Y{y_min} F{speed * 60}
	G0 X{x_min} Y{y_max} F{speed * 60}
	G0 X{x_max} Y{y_min} F{speed * 60}
	
	
	G0 X{x_min} Y{y_min} F{speed * 60}
	G0 X{x_min} Y{y_max} F{speed * 60}
	G0 X{x_max} Y{y_max} F{speed * 60}
	G0 X{x_max} Y{y_min} F{speed * 60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
	
	
	G28 X Y
	
	G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F{30 * 60}
	G4 P1000
	GET_POSITION
	
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 83.8
shaper_type_y = mzv
shaper_freq_y = 75.0

[bed_mesh default]
version = 1
points = 
	1.182277, 1.034152, 1.155402, 1.162277, 1.141027, 1.093527
	1.229777, 1.204777, 1.190402, 1.179777, 1.174777, 1.147902
	1.217277, 1.220402, 1.201027, 1.206027, 1.180402, 1.282277
	1.222277, 1.189777, 1.182277, 1.167277, 1.164152, 1.143527
	1.146027, 1.152277, 1.134777, 1.151027, 1.206652, 1.117277
	1.100402, 1.102277, 1.112902, 1.132277, 1.133527, 1.107277
x_count = 6
y_count = 6
mesh_x_pps = 2
mesh_y_pps = 2
algo = lagrange
tension = 0.2
min_x = 40.715
max_x = 259.265
min_y = 38.99
max_y = 261.19
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
webhooks client 1970562288: New connection
webhooks client 1970562288: Client info {'program': 'Moonraker', 'version': 'v0.7.1-885-g4550664'}
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            Starting Klippy...
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/klipper_config/printer.cfg', '-l', '/home/pi/klipper_logs/klippy.log', '-a', '/tmp/klippy_uds']
Git version: 'v0.11.0-114-g0a645e49-dirty'
CPU: 4 core ARMv7 Processor rev 4 (v7l)
Python: '3.7.3 (default, Jan 22 2021, 20:04:44) \n[GCC 8.3.0]'
Start printer at Mon Apr 24 23:06:11 2023 (1682402771.0 47.8)
===== Config file =====
[gcode_macro BED_MESH_CALIBRATE]
rename_existing = _BED_MESH_CALIBRATE
variable_led_enable = False
variable_status_macro = 'status_meshing'
variable_fuzz_enable = False
variable_fuzz_min = 0
variable_fuzz_max = 4
variable_probe_dock_enable = False
variable_attach_macro = 'Attach_Probe'
variable_detach_macro = 'Dock_Probe'
gcode = 
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set bed_mesh_min = printer.configfile.settings.bed_mesh.mesh_min %}
	{% set bed_mesh_max = printer.configfile.settings.bed_mesh.mesh_max %}
	{% set max_probe_point_distance_x = ( bed_mesh_max[0] - bed_mesh_min[0] ) / (printer.configfile.settings.bed_mesh.probe_count[0]-2)  %}
	{% set max_probe_point_distance_y = ( bed_mesh_max[1] - bed_mesh_min[1] ) / (printer.configfile.settings.bed_mesh.probe_count[1]-2)  %}
	{% set x_min = bed_mesh_min[0] %}
	{% set y_min = bed_mesh_min[1] %}
	{% set x_max = bed_mesh_max[0] %}
	{% set y_max = bed_mesh_max[1] %}
	
	{ action_respond_info("{} points, clamping to mesh [{!r} {!r}]".format(
	all_points | count,
	bed_mesh_min,
	bed_mesh_max,
	)) }
	
	{% if fuzz_enable == True %}
	{% if all_points %}
	{% set fuzz_range = range(fuzz_min * 100 | int, fuzz_max * 100 | int) %}
	{% set x_min = ( bed_mesh_min[0], ((all_points | map(attribute=0) | min - (fuzz_range | random / 100.0)) | default(bed_mesh_min[0])) ) | max %}
	{% set y_min = ( bed_mesh_min[1], ((all_points | map(attribute=1) | min - (fuzz_range | random / 100.0)) | default(bed_mesh_min[1])) ) | max %}
	{% set x_max = ( bed_mesh_max[0], ((all_points | map(attribute=0) | max + (fuzz_range | random / 100.0)) | default(bed_mesh_max[0])) ) | min %}
	{% set y_max = ( bed_mesh_max[1], ((all_points | map(attribute=1) | max + (fuzz_range | random / 100.0)) | default(bed_mesh_max[1])) ) | min %}
	{% endif %}
	{% else %}
	{% set x_min = [ bed_mesh_min[0], (all_points | map(attribute=0) | min | default(bed_mesh_min[0])) ] | max %}
	{% set y_min = [ bed_mesh_min[1], (all_points | map(attribute=1) | min | default(bed_mesh_min[1])) ] | max %}
	{% set x_max = [ bed_mesh_max[0], (all_points | map(attribute=0) | max | default(bed_mesh_max[0])) ] | min %}
	{% set y_max = [ bed_mesh_max[1], (all_points | map(attribute=1) | max | default(bed_mesh_max[1])) ] | min %}
	{% endif %}
	
	{ action_respond_info("Object bounds, clamped to the bed_mesh: {!r}, {!r}".format(
	(x_min, y_min),
	(x_max, y_max),
	)) }
	
	{% set points_x = (((x_max - x_min) / max_probe_point_distance_x) | int) + 2 %}
	{% set points_y = (((y_max - y_min) / max_probe_point_distance_y) | int) + 2 %}
	
	{% if (([points_x, points_y]|max) > 6) %}
	{% set algorithm = "bicubic" %}
	{% set min_points = 4 %}
	{% else %}
	{% set algorithm = "lagrange" %}
	{% set min_points = 3 %}
	{% endif %}
	{ action_respond_info( "Algorithm: {}".format(algorithm)) }
	
	{% set points_x = [points_x, min_points]|max  %}
	{% set points_y = [points_y, min_points]|max  %}
	{ action_respond_info( "Points: x: {}, y: {}".format(points_x, points_y) ) }
	
	{% if printer.configfile.settings.bed_mesh.relative_reference_index is defined %}
	{% set ref_index = (points_x * points_y / 2) | int %}
	{ action_respond_info( "Reference index: {}".format(ref_index) ) }
	{% else %}
	{% set ref_index = -1 %}
	{% endif %}
	
	{% if probe_dock_enable == True %}
	{attach_macro}
	{% endif %}
	
	{% if led_enable == True %}
	{status_macro}
	{% endif %}
	
	_BED_MESH_CALIBRATE mesh_min={x_min},{y_min} mesh_max={x_max},{y_max} ALGORITHM={algorithm} PROBE_COUNT={points_x},{points_y} RELATIVE_REFERENCE_INDEX={ref_index}
	
	{% if probe_dock_enable == True %}
	{detach_macro}
	{% endif %}

[gcode_macro ADAPTIVE_PURGE]
description = A purge macro that adapts to be near your actual printed objects
variable_adaptive_enable = True
variable_z_height = 0.3
variable_tip_distance = 10
variable_purge_amount = 25
variable_flow_rate = 10
variable_x_default = 10
variable_y_default = 10
variable_size = 10
variable_distance_to_object_x = 15
variable_distance_to_object_y = 0
variable_travel_speed = 300
gcode = 
	{% if adaptive_enable == True %}
	{% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
	{% set x_origin = (all_points | map(attribute=0) | min | default(x_default + distance_to_object_x + size)) - distance_to_object_x - size %}
	{% set y_origin = (all_points | map(attribute=1) | min | default(y_default + distance_to_object_y + size)) - distance_to_object_y - size %}
	{% set x_origin = ([x_origin, 0] | max) %}
	{% set y_origin = ([y_origin, 0] | max) %}
	{% else %}
	{% set x_origin = x_default | float %}
	{% set y_origin = y_default | float %}
	{% endif %}
	{% set purge_move_speed = 2.31 * size * flow_rate / (purge_amount * 2.405) %}
	{% set prepurge_speed = flow_rate / 2.405 %}
	{ action_respond_info( "x: " + x_origin|string + " y: " + y_origin|string + " purge_move_speed: " + purge_move_speed|string + " prepurge_speed: " + prepurge_speed|string ) }
	
	G92 E0
	G0 F{travel_speed*60}
	G90
	G0 X{x_origin} Y{y_origin+size/2}
	G0 Z{z_height}
	M83
	G1 E{tip_distance} F{prepurge_speed*60}
	G1 X{x_origin+size*0.289} Y{y_origin+size} E{purge_amount/4} F{purge_move_speed*60}
	G1 E-.5 F2100
	G0 Z{z_height*2}
	G0 X{x_origin+size*0.789} Y{y_origin+size}
	G0 Z{z_height}
	G1 E.5 F2100
	G1 X{x_origin+size*0.211} Y{y_origin} E{purge_amount/2} F{purge_move_speed*60}
	G1 E-.5 F2100
	G0 Z{z_height*2}
	G0 X{x_origin+size*0.711} Y{y_origin}
	G0 Z{z_height}
	G1 E.5 F2100
	G1 X{x_origin+size} Y{y_origin+size/2}  E{purge_amount/4} F{purge_move_speed*60}
	G1 E-.5 F2100
	G92 E0
	G0 Z{z_height*2}

[virtual_sdcard]
path = /home/pi/gcode_files

[pause_resume]

[gcode_macro PRINT_START]
variable_parameter_area_start = 0,0
variable_parameter_area_end = 0,0
gcode = 
	SET_FAN_SPEED FAN=chamber SPEED=.5
	SET_FAN_SPEED FAN=drivers SPEED=1
	{% set BED = params.BED|default(55)|int %}
	{% set EXTRUDER = params.EXTRUDER|default(205)|int %}
	G28 X Y
	
	M104 S170
	M140 S{BED}
	RESPOND PREFIX= MSG="Waiting for temperatures..."
	M117  Waiting for temperatures...
	M190 S{BED}
	RESPOND PREFIX= MSG="Waiting for thermal expansion..."
	M117 Waiting for thermal expansion...
	G4 P30000
	RESPOND PREFIX= MSG="Creating a mesh..."
	M117 Creating a mesh...
	G28
	QUAD_GANTRY_LEVEL
	BED_MESH_CALIBRATE
	
	M104 S{EXTRUDER}
	
	
	RESPOND PREFIX= MSG="Moving to prime position"
	M117 Moving to prime position
	G1 X25 Y-2 Z10 F5000.0
	{% if printer.extruder.temperature < params.EXTRUDER|float*0.98 %}
	M109 S{params.EXTRUDER|float*0.98}
	{% endif %}
	M104 S{EXTRUDER}
	G4 P30000
	ADAPTIVE_PURGE
	RESPOND PREFIX= MSG="Printing..."
	M117 Printing...
	M117

[gcode_macro PID_TUNE]
gcode = 
	G28
	G1 Z10 F7800
	M106 S64
	PID_CALIBRATE HEATER=extruder TARGET=245
	
	
	RESPOND PREFIX= MSG="Moving to prime position"
	M117 Moving to prime position
	G1 X25 Y-3 Z10 F5000.0
	{% if printer.extruder.temperature < params.EXTRUDER|float*0.98 %}
	M109 S{params.EXTRUDER|float*0.98}
	{% endif %}
	M104 S{EXTRUDER}
	
	RESPOND PREFIX= MSG="Priming the nozzle"
	M117 Priming the nozzle
	G92 E0
	G0 Z0.15
	G0 X55 Y-2 Z0.28 F1500.0
	G92 E0
	G1 X195 Y-2 Z0.28 F1500.0 E15
	G92 E0
	G10
	G1 Z2.0 F3000
	
	RESPOND PREFIX= MSG="Printing..."
	M117 Printing...
	M117

[display_status]

[gcode_macro END_PRINT]
gcode = 
	
	G91
	G1 E-2
	
	G90
	
	TURN_OFF_HEATERS
	
	G28 X Y

[gcode_macro PAUSE]
rename_existing = BASE_PAUSE
gcode = 
	
	SAVE_GCODE_STATE NAME=PAUSE_state
	BASE_PAUSE
	G91
	G1 E-{2} F2100
	G1 Z{10}
	G90
	G1 X{230} Y{230} F6000
	G91

[gcode_macro RESUME]
rename_existing = BASE_RESUME
gcode = 
	G91
	G1 E{s} F2100
	G90
	RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
	BASE_RESUME

[gcode_macro CANCEL_PRINT]
rename_existing = BASE_CANCEL_PRINT
gcode = 
	TURN_OFF_HEATERS
	CLEAR_PAUSE
	SDCARD_RESET_FILE
	BASE_CANCEL_PRINT
	
	G91
	G1 Z10 F8000
	G90
	G1 X0 Y222 E-3 F8000
	DISABLE_MOTORS
	M106 S0
	M117 Print Canceled

[exclude_object]

[gcode_macro M486]
gcode = 
	
	
	
	
	
	
	
	
	
	
	
	{% if 'exclude_object' not in printer %}
	{action_raise_error("[exclude_object] is not enabled")}
	{% endif %}
	
	{% if 'T' in params %}
	EXCLUDE_OBJECT RESET=1
	
	{% for i in range(params.T | int) %}
	EXCLUDE_OBJECT_DEFINE NAME={i}
	{% endfor %}
	{% endif %}
	
	{% if 'C' in params %}
	EXCLUDE_OBJECT CURRENT=1
	{% endif %}
	
	{% if 'P' in params %}
	EXCLUDE_OBJECT NAME={params.P}
	{% endif %}
	
	{% if 'S' in params %}
	{% if params.S == '-1' %}
	{% if printer.exclude_object.current_object %}
	EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
	{% endif %}
	{% else %}
	EXCLUDE_OBJECT_START NAME={params.S}
	{% endif %}
	{% endif %}
	
	{% if 'U' in params %}
	EXCLUDE_OBJECT RESET=1 NAME={params.U}
	{% endif %}

[gcode_macro GET_TIMELAPSE_SETUP]
description = Print the Timelapse setup
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% set output_txt = ["Timelapse Setup:"] %}
	{% set _dummy = output_txt.append("enable: %s" % tl.enable) %}
	{% set _dummy = output_txt.append("park: %s" % tl.park.enable) %}
	{% if tl.park.enable %}
	{% set _dummy = output_txt.append("park position: %s time: %s s" % (tl.park.pos, tl.park.time)) %}
	{% set _dummy = output_txt.append("park cord x:%s y:%s dz:%s" % (tl.park.coord.x, tl.park.coord.y, tl.park.coord.dz)) %}
	{% set _dummy = output_txt.append("travel speed: %s mm/s" % tl.speed.travel) %}
	{% endif %}
	{% set _dummy = output_txt.append("fw_retract: %s" % tl.extruder.fw_retract) %}
	{% if not tl.extruder.fw_retract %}
	{% set _dummy = output_txt.append("retract: %s mm speed: %s mm/s" % (tl.extruder.retract, tl.speed.retract)) %}
	{% set _dummy = output_txt.append("extrude: %s mm speed: %s mm/s" % (tl.extruder.extrude, tl.speed.extrude)) %}
	{% endif %}
	{% set _dummy = output_txt.append("verbose: %s" % tl.verbose) %}
	{action_respond_info(output_txt|join("\n"))}

[gcode_macro _SET_TIMELAPSE_SETUP]
description = Set user parameters for timelapse
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	
	{% set min = printer.toolhead.axis_minimum %}
	{% set max = printer.toolhead.axis_maximum %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	{% set park = {'min'   : {'x': (min.x / 1.42)|round(3) if round_bed else min.x|round(3),
	'y': (min.y / 1.42)|round(3) if round_bed else min.y|round(3)},
	'max'   : {'x': (max.x / 1.42)|round(3) if round_bed else max.x|round(3),
	'y': (max.y / 1.42)|round(3) if round_bed else max.y|round(3)},
	'center': {'x': (max.x-(max.x-min.x)/2)|round(3),
	'y': (max.y-(max.y-min.y)/2)|round(3)}} %}
	
	{% if params.ENABLE %}
	{% if params.ENABLE|lower is in ['true', 'false'] %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=enable VALUE={True if params.ENABLE|lower == 'true' else False}
	{% else %}
	{action_raise_error("ENABLE=%s not supported. Allowed values are [True, False]" % params.ENABLE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.VERBOSE %}
	{% if params.VERBOSE|lower is in ['true', 'false'] %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=verbose VALUE={True if params.VERBOSE|lower == 'true' else False}
	{% else %}
	{action_raise_error("VERBOSE=%s not supported. Allowed values are [True, False]" % params.VERBOSE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_X %}
	{% if params.CUSTOM_POS_X|float >= min.x and params.CUSTOM_POS_X|float <= max.x %}
	{% set _dummy = tl.park.custom.update({'x':params.CUSTOM_POS_X|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_X=%s must be within [%s - %s]" % (params.CUSTOM_POS_X, min.x, max.x))}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_Y %}
	{% if params.CUSTOM_POS_Y|float >= min.y and params.CUSTOM_POS_Y|float <= max.y %}
	{% set _dummy = tl.park.custom.update({'y':params.CUSTOM_POS_Y|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_Y=%s must be within [%s - %s]" % (params.CUSTOM_POS_Y, min.y, max.y))}
	{% endif %}
	{% endif %}
	{% if params.CUSTOM_POS_DZ %}
	{% if params.CUSTOM_POS_DZ|float >= min.z and params.CUSTOM_POS_DZ|float <= max.z %}
	{% set _dummy = tl.park.custom.update({'dz':params.CUSTOM_POS_DZ|float|round(3)}) %}
	{% else %}
	{action_raise_error("CUSTOM_POS_DZ=%s must be within [%s - %s]" % (params.CUSTOM_POS_DZ, min.z, max.z))}
	{% endif %}
	{% endif %}
	{% if params.PARK_ENABLE %}
	{% if params.PARK_ENABLE|lower is in ['true', 'false'] %}
	{% set _dummy = tl.park.update({'enable':True if params.PARK_ENABLE|lower == 'true' else False}) %}
	{% else %}
	{action_raise_error("PARK_ENABLE=%s not supported. Allowed values are [True, False]" % params.PARK_ENABLE|capitalize)}
	{% endif %}
	{% endif %}
	{% if params.PARK_POS %}
	{% if params.PARK_POS|lower is in ['center','front_left','front_right','back_left','back_right','custom','x_only','y_only'] %}
	{% set dic = {'center'      : {'x': park.center.x   , 'y': park.center.y   , 'dz': 1                },
	'front_left'  : {'x': park.min.x      , 'y': park.min.y      , 'dz': 0                },
	'front_right' : {'x': park.max.x      , 'y': park.min.y      , 'dz': 0                },
	'back_left'   : {'x': park.min.x      , 'y': park.max.y      , 'dz': 0                },
	'back_right'  : {'x': park.max.x      , 'y': park.max.y      , 'dz': 0                },
	'custom'      : {'x': tl.park.custom.x, 'y': tl.park.custom.y, 'dz': tl.park.custom.dz},
	'x_only'      : {'x': tl.park.custom.x, 'y': 'none'          , 'dz': tl.park.custom.dz},
	'y_only'      : {'x': 'none'          , 'y': tl.park.custom.y, 'dz': tl.park.custom.dz}} %}
	{% set _dummy = tl.park.update({'pos':params.PARK_POS|lower}) %}
	{% set _dummy = tl.park.update({'coord':dic[tl.park.pos]}) %}
	{% else %}
	{action_raise_error("PARK_POS=%s not supported. Allowed values are [CENTER, FRONT_LEFT, FRONT_RIGHT, BACK_LEFT, BACK_RIGHT, CUSTOM, X_ONLY, Y_ONLY]"
	% params.PARK_POS|upper)}
	{% endif %}
	{% endif %}
	{% if params.PARK_TIME %}
	{% if params.PARK_TIME|float >= 0.0 %}
	{% set _dummy = tl.park.update({'time':params.PARK_TIME|float|round(3)}) %}
	{% else %}
	{action_raise_error("PARK_TIME=%s must be a positive number" % params.PARK_TIME)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=park VALUE="{tl.park}"
	{% if params.TRAVEL_SPEED %}
	{% if params.TRAVEL_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'travel':params.TRAVEL_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("TRAVEL_SPEED=%s must be larger than 0" % params.TRAVEL_SPEED)}
	{% endif %}
	{% endif %}
	{% if params.RETRACT_SPEED %}
	{% if params.RETRACT_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'retract':params.RETRACT_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("RETRACT_SPEED=%s must be larger than 0" % params.RETRACT_SPEED)}
	{% endif %}
	{% endif %}
	{% if params.EXTRUDE_SPEED %}
	{% if params.EXTRUDE_SPEED|float > 0.0 %}
	{% set _dummy = tl.speed.update({'extrude':params.EXTRUDE_SPEED|float|round(3)}) %}
	{% else %}
	{action_raise_error("EXTRUDE_SPEED=%s must be larger than 0" % params.EXTRUDE_SPEED)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=speed VALUE="{tl.speed}"
	{% if params.EXTRUDE_DISTANCE %}
	{% if params.EXTRUDE_DISTANCE|float >= 0.0 %}
	{% set _dummy = tl.extruder.update({'extrude':params.EXTRUDE_DISTANCE|float|round(3)}) %}
	{% else %}
	{action_raise_error("EXTRUDE_DISTANCE=%s must be specified as positiv number" % params.EXTRUDE_DISTANCE)}
	{% endif %}
	{% endif %}
	{% if params.RETRACT_DISTANCE %}
	{% if params.RETRACT_DISTANCE|float >= 0.0 %}
	{% set _dummy = tl.extruder.update({'retract':params.RETRACT_DISTANCE|float|round(3)}) %}
	{% else %}
	{action_raise_error("RETRACT_DISTANCE=%s must be specified as positiv number" % params.RETRACT_DISTANCE)}
	{% endif %}
	{% endif %}
	{% if params.FW_RETRACT %}
	{% if params.FW_RETRACT|lower is in ['true', 'false'] %}
	{% if 'firmware_retraction' in printer.configfile.settings %}
	{% set _dummy = tl.extruder.update({'fw_retract': True if params.FW_RETRACT|lower == 'true' else False}) %}
	{% else %}
	{% set _dummy = tl.extruder.update({'fw_retract':False}) %}
	{% if params.FW_RETRACT|capitalize == 'True' %}
	{action_raise_error("[firmware_retraction] not defined in printer.cfg. Can not enable fw_retract")}
	{% endif %}
	{% endif %}
	{% else %}
	{action_raise_error("FW_RETRACT=%s not supported. Allowed values are [True, False]" % params.FW_RETRACT|capitalize)}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=extruder VALUE="{tl.extruder}"
	{% if printer.configfile.settings['gcode_macro pause'] is defined %}
	{% set _dummy = tl.macro.update({'pause': printer.configfile.settings['gcode_macro pause'].rename_existing}) %}
	{% endif %}
	{% if printer.configfile.settings['gcode_macro resume'] is defined %}
	{% set _dummy = tl.macro.update({'resume': printer.configfile.settings['gcode_macro resume'].rename_existing}) %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=macro VALUE="{tl.macro}"

[gcode_macro TIMELAPSE_TAKE_FRAME]
description = Take Timelapse shoot
variable_enable = False
variable_takingframe = False
variable_park = {'enable': False,
	'pos'   : 'center',
	'time'  : 0.1,
	'custom': {'x': 0, 'y': 0, 'dz': 0},
	'coord' : {'x': 0, 'y': 0, 'dz': 0}}
variable_extruder = {'fw_retract': False,
	'retract': 1.0,
	'extrude': 1.0}
variable_speed = {'travel': 100,
	'retract': 15,
	'extrude': 15}
variable_verbose = True
variable_restore = {'absolute': {'coordinates': True, 'extrude': True}, 'speed': 1500, 'e':0, 'factor': {'speed': 1.0, 'extrude': 1.0}}
variable_macro = {'pause': 'PAUSE', 'resume': 'RESUME'}
variable_is_paused = False
gcode = 
	{% set hyperlapse = True if params.HYPERLAPSE and params.HYPERLAPSE|lower =='true' else False %}
	{% if enable %}
	{% if (hyperlapse and printer['gcode_macro HYPERLAPSE'].run) or
	(not hyperlapse and not printer['gcode_macro HYPERLAPSE'].run) %}
	{% if park.enable %}
	{% set pos = {'x': 'X' + park.coord.x|string if park.pos != 'y_only' else '',
	'y': 'Y' + park.coord.y|string if park.pos != 'x_only' else '',
	'z': 'Z'+ [printer.gcode_move.gcode_position.z + park.coord.dz, printer.toolhead.axis_maximum.z]|min|string} %}
	{% set restore = {'absolute': {'coordinates': printer.gcode_move.absolute_coordinates,
	'extrude'    : printer.gcode_move.absolute_extrude},
	'speed'   : printer.gcode_move.speed,
	'e'       : printer.gcode_move.gcode_position.e,
	'factor'  : {'speed'  : printer.gcode_move.speed_factor,
	'extrude': printer.gcode_move.extrude_factor}} %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=restore VALUE="{restore}"
	{% if not printer[printer.toolhead.extruder].can_extrude %}
	{% if verbose %}{action_respond_info("Timelapse: Warning, minimum extruder temperature not reached!")}{% endif %}
	{% else %}
	{% if extruder.fw_retract %}
	G10
	{% else %}
	M83
	G0 E-{extruder.retract} F{speed.retract * 60}
	{% endif %}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=is_paused VALUE=True
	{macro.pause}
	SET_GCODE_OFFSET X=0 Y=0
	G90
	{% if "xyz" not in printer.toolhead.homed_axes %}
	{% if verbose %}{action_respond_info("Timelapse: Warning, axis not homed yet!")}{% endif %}
	{% else %}
	G0 {pos.x} {pos.y} {pos.z} F{speed.travel * 60}
	{% endif %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=takingframe VALUE=True
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_TAKE_FRAME DURATION=0.5
	M400
	{% endif %}
	_TIMELAPSE_NEW_FRAME HYPERLAPSE={hyperlapse}
	{% endif %}
	{% else %}
	{% if verbose %}{action_respond_info("Timelapse: disabled, take frame ignored")}{% endif %}
	{% endif %}

[gcode_macro _TIMELAPSE_NEW_FRAME]
description = action call for timelapse shoot. must be a seperate macro
gcode = 
	{action_call_remote_method("timelapse_newframe",
	macropark=printer['gcode_macro TIMELAPSE_TAKE_FRAME'].park,
	hyperlapse=params.HYPERLAPSE)}

[delayed_gcode _WAIT_TIMELAPSE_TAKE_FRAME]
gcode = 
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% set factor = {'speed': printer.gcode_move.speed_factor, 'extrude': printer.gcode_move.extrude_factor} %}
	{% if tl.takingframe %}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_TAKE_FRAME DURATION=0.5
	{% else %}
	{tl.macro.resume} VELOCITY={tl.speed.travel}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_TAKE_FRAME VARIABLE=is_paused VALUE=False
	{% if not printer[printer.toolhead.extruder].can_extrude %}
	{action_respond_info("Timelapse: Warning minimum extruder temperature not reached!")}
	{% else %}
	{% if tl.extruder.fw_retract %}
	G11
	{% else %}
	G0 E{tl.extruder.extrude} F{tl.speed.extrude * 60}
	G0 F{tl.restore.speed}
	{% if tl.restore.absolute.extrude %}
	M82
	G92 E{tl.restore.e}
	{% endif %}
	{% endif %}
	{% endif %}
	{% if tl.restore.factor.speed   != factor.speed   %} M220 S{(factor.speed*100)|round(0)}   {% endif %}
	{% if tl.restore.factor.extrude != factor.extrude %} M221 S{(factor.extrude*100)|round(0)} {% endif %}
	{% if not tl.restore.absolute.coordinates %} G91 {% endif %}
	{% endif %}

[gcode_macro HYPERLAPSE]
description = Start/Stop a hyperlapse recording
variable_cycle = 0
variable_run = False
gcode = 
	{% set cycle = params.CYCLE|default(30)|int %}
	{% if params.ACTION and params.ACTION|lower == 'start' %}
	{action_respond_info("Hyperlapse: frames started (Cycle %d sec)" % cycle)}
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=run VALUE=True
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=cycle VALUE={cycle}
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION={cycle}
	TIMELAPSE_TAKE_FRAME HYPERLAPSE=True
	{% elif params.ACTION and params.ACTION|lower == 'stop' %}
	{% if run %}{action_respond_info("Hyperlapse: frames stopped")}{% endif %}
	SET_GCODE_VARIABLE MACRO=HYPERLAPSE VARIABLE=run VALUE=False
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION=0
	{% else %}
	{action_raise_error("Hyperlapse: No valid input parameter
	Use:
	- HYPERLAPSE ACTION=START [CYCLE=time]
	- HYPERLAPSE ACTION=STOP")}
	{% endif %}

[delayed_gcode _HYPERLAPSE_LOOP]
gcode = 
	UPDATE_DELAYED_GCODE ID=_HYPERLAPSE_LOOP DURATION={printer["gcode_macro HYPERLAPSE"].cycle}
	TIMELAPSE_TAKE_FRAME HYPERLAPSE=True

[gcode_macro TIMELAPSE_RENDER]
description = Render Timelapse video and wait for the result
variable_render = False
variable_run_identifier = 0
gcode = 
	{action_respond_info("Timelapse: Rendering started")}
	{action_call_remote_method("timelapse_render", byrendermacro="True")}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_RENDER VARIABLE=render VALUE=True
	{printer.configfile.settings['gcode_macro pause'].rename_existing}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_RENDER DURATION=0.5

[delayed_gcode _WAIT_TIMELAPSE_RENDER]
gcode = 
	{% set ri = printer['gcode_macro TIMELAPSE_RENDER'].run_identifier % 4 %}
	SET_GCODE_VARIABLE MACRO=TIMELAPSE_RENDER VARIABLE=run_identifier VALUE={ri + 1}
	{% if printer['gcode_macro TIMELAPSE_RENDER'].render %}
	M117 Rendering {['-','\\','|','/'][ri]}
	UPDATE_DELAYED_GCODE ID=_WAIT_TIMELAPSE_RENDER DURATION=0.5
	{% else %}
	{action_respond_info("Timelapse: Rendering finished")}
	M117
	{printer.configfile.settings['gcode_macro resume'].rename_existing}
	{% endif %}

[gcode_macro TEST_STREAM_DELAY]
description = Helper macro to find stream and park delay
gcode = 
	{% set min = printer.toolhead.axis_minimum %}
	{% set max = printer.toolhead.axis_maximum %}
	{% set act = printer.toolhead.position %}
	{% set tl = printer['gcode_macro TIMELAPSE_TAKE_FRAME'] %}
	{% if act.z > 5.0 %}
	G0 X{min.x + 5.0} F{tl.speed.travel|int * 60}
	G0 X{(max.x-min.x)/2}
	G4 P{tl.park.time|float * 1000}
	_TIMELAPSE_NEW_FRAME HYPERLAPSE=FALSE
	G0 X{max.x - 5.0}
	{% else %}
	{action_raise_error("Toolhead z %.3f to low. Please place head above z = 5.0" % act.z)}
	{% endif %}

[force_move]
enable_force_move = True

[mcu head0]
canbus_uuid = 20195bac64c4

[temperature_sensor CANBOARD]
sensor_type = temperature_mcu
sensor_mcu = head0

[idle_timeout]
timeout = 100000

[mcu]
serial = /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00

[adc_scaled vref_scaled]
vref_pin = PB5
vssa_pin = PB4

[temperature_sensor pi_cpu]
sensor_type = temperature_host
gcode_id = P

[printer]
kinematics = corexy
max_velocity = 600
max_accel = 15000
max_accel_to_decel = 10000
square_corner_velocity = 10
max_z_velocity = 50
max_z_accel = 180

[stepper_x]
step_pin = PC25
dir_pin = !PB29
enable_pin = !PC28
rotation_distance = 40
microsteps = 32
endstop_pin = ^!head0:PB12
position_endstop = 303
position_max = 303
position_min = 0
homing_speed = 100

[tmc2209 stepper_x]
uart_pin = PA1
tx_pin = PA0
select_pins = PD0
uart_address = 1
run_current = 1
sense_resistor = 0.056

[stepper_y]
step_pin = PC24
dir_pin = !PB28
enable_pin = !PC28
rotation_distance = 40
microsteps = 32
endstop_pin = ^PC4
position_endstop = 308
position_max = 308
position_min = -3
homing_speed = 100
homing_retract_dist = 30

[tmc2209 stepper_y]
uart_pin = PA1
tx_pin = PA0
select_pins = PD0
uart_address = 2
run_current = 1
sense_resistor = 0.056

[stepper_z3]
step_pin = PC26
dir_pin = PB3
enable_pin = !PC28
rotation_distance = 8
microsteps = 32

[tmc2209 stepper_z3]
uart_pin = PA1
tx_pin = PA0
select_pins = PD0
uart_address = 0
run_current = 1.1
sense_resistor = 0.056
driver_tbl = 2
driver_hend = 3
driver_hstrt = 4
driver_toff = 4

[stepper_z]
step_pin = PC19
dir_pin = !PD20
enable_pin = !PC28
rotation_distance = 8
microsteps = 32
endstop_pin = probe:z_virtual_endstop
position_max = 390
position_min = -15
homing_speed = 20

[tmc2209 stepper_z]
uart_pin = PA1
tx_pin = PA0
uart_address = 3
select_pins = PD0
run_current = 1.1
sense_resistor = 0.056
driver_tbl = 2
driver_hend = 3
driver_hstrt = 4
driver_toff = 4

[stepper_z1]
step_pin = PC16
dir_pin = PD21
enable_pin = !PC28
rotation_distance = 8
microsteps = 32

[tmc2209 stepper_z1]
uart_pin = PA1
tx_pin = PA0
uart_address = 0
select_pins = !PD0
run_current = 1.1
sense_resistor = 0.056
driver_tbl = 2
driver_hend = 3
driver_hstrt = 4
driver_toff = 4

[stepper_z2]
step_pin = PC30
dir_pin = !PB0
enable_pin = !PC28
rotation_distance = 8
microsteps = 32

[tmc2209 stepper_z2]
uart_pin = PA1
tx_pin = PA0
uart_address = 1
select_pins = !PD0
run_current = 1.1
sense_resistor = 0.056
driver_tbl = 2
driver_hend = 3
driver_hstrt = 4
driver_toff = 4

[extruder]
step_pin = head0:PB3
dir_pin = head0:PB4
enable_pin = !head0:PB5
heater_pin = head0:PA6
microsteps = 16
full_steps_per_rotation = 200
rotation_distance = 22.67895
gear_ratio = 50:8
nozzle_diameter = 0.500
filament_diameter = 1.750
sensor_type = ATC Semitec 104GT-2
sensor_pin = head0:PA0
pullup_resistor = 2200
min_extrude_temp = 170
max_extrude_cross_section = 5
min_temp = -100
max_temp = 325
control = pid
pid_kp = 24.502
pid_ki = 1.027
pid_kd = 146.095

[tmc2209 extruder]
uart_pin = head0:PA9
interpolate = True
run_current = .3
sense_resistor = 0.110
driver_tbl = 2
driver_hend = 3
driver_hstrt = 5
driver_toff = 6

[heater_bed]
heater_pin = PB17
sensor_type = EPCOS 100K B57560G104F
sensor_pin = vref_scaled:PC2
pullup_resistor = 2200
min_temp = -100
max_temp = 130
max_power = 0.8
control = pid
pid_kp = 20.846
pid_ki = 1.241
pid_kd = 87.555

[fan]
pin = PC10
kick_start_time = 0.5
off_below = 0.10

[heater_fan hotend]
pin = head0:PA7
heater = extruder
heater_temp = 45
fan_speed = 1

[controller_fan drivers]
pin = PA11
heater = extruder,heater_bed
fan_speed = 1

[fan_generic chamber]
pin = PB11

[bltouch]
sensor_pin = PC31
control_pin = PB1
stow_on_each_sample = false
probe_with_touch_mode = True
x_offset = 21.765
y_offset = 0
speed = 7
lift_speed = 20
samples = 2
samples_result = average
sample_retract_dist = 5.0
samples_tolerance = 0.01
samples_tolerance_retries = 3
z_offset = 1.265

[safe_z_home]
home_xy_position = 150,150
speed = 350
z_hop = 6
z_hop_speed = 15

[quad_gantry_level]
gantry_corners = 
	-68,-16
	368,355
points = 
	50,50
	50,250
	250,250
	250,50
speed = 350
horizontal_move_z = 10
retries = 8
retry_tolerance = 0.015
max_adjust = 16

[bed_mesh]
mesh_min = 25,25
mesh_max = 275,275
probe_count = 7,7
algorithm = bicubic
speed = 350

[output_pin led]
pin = PB13
shutdown_value = 0
value = 1

[filament_switch_sensor fsensor]
pause_on_runout = True
runout_gcode = 
	M118 Filament Runout Detected
	M600
insert_gcode = 
	M118 Filament Load Detected
	LOAD_FILAMENT
event_delay = 3.0
pause_delay = 0.5
switch_pin = PB30

[gcode_macro LOAD_FILAMENT]
gcode = 
	M117 Loading Filament...
	G92 E0.0
	G91
	G1 E40 F400
	G1 E30 F400
	G1 E60 F200
	G90
	G92 E0.0
	M400
	M117 Load Complete
	UPDATE_DELAYED_GCODE ID=clear_display DURATION=5

[gcode_macro TEST_SPEED]
gcode = 
	
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	
	{% set iterations = params.ITERATIONS|default(5)|int %}
	
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	
	{% set bound = params.BOUND|default(20)|int %}
	
	
	{% set x_min = printer.toolhead.axis_minimum.x + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = printer.toolhead.axis_minimum.y + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	
	G90
	
	
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	
	
	G28
	
	{% if printer.configfile.settings.quad_gantry_level %}
	{% if printer.quad_gantry_level.applied == False %}
	QUAD_GANTRY_LEVEL
	G28 Z
	{% endif %}
	{% endif %}
	G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F{30 * 60}
	G4 P1000
	GET_POSITION
	
	
	G0 X{x_min} Y{y_min} Z{bound + 10} F{speed * 60}
	
	{% for i in range(iterations) %}
	
	G0 X{x_min} Y{y_min} F{speed * 60}
	G0 X{x_max} Y{y_max} F{speed * 60}
	G0 X{x_min} Y{y_min} F{speed * 60}
	G0 X{x_max} Y{y_min} F{speed * 60}
	G0 X{x_min} Y{y_max} F{speed * 60}
	G0 X{x_max} Y{y_min} F{speed * 60}
	
	
	G0 X{x_min} Y{y_min} F{speed * 60}
	G0 X{x_min} Y{y_max} F{speed * 60}
	G0 X{x_max} Y{y_max} F{speed * 60}
	G0 X{x_max} Y{y_min} F{speed * 60}
	{% endfor %}
	
	
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
	
	
	G28 X Y
	
	G0 X{printer.toolhead.axis_maximum.x} Y{printer.toolhead.axis_maximum.y} F{30 * 60}
	G4 P1000
	GET_POSITION
	
	
	RESTORE_GCODE_STATE NAME=TEST_SPEED

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 83.8
shaper_type_y = mzv
shaper_freq_y = 75.0

[bed_mesh default]
version = 1
points = 
	1.182277, 1.034152, 1.155402, 1.162277, 1.141027, 1.093527
	1.229777, 1.204777, 1.190402, 1.179777, 1.174777, 1.147902
	1.217277, 1.220402, 1.201027, 1.206027, 1.180402, 1.282277
	1.222277, 1.189777, 1.182277, 1.167277, 1.164152, 1.143527
	1.146027, 1.152277, 1.134777, 1.151027, 1.206652, 1.117277
	1.100402, 1.102277, 1.112902, 1.132277, 1.133527, 1.107277
x_count = 6
y_count = 6
mesh_x_pps = 2
mesh_y_pps = 2
algo = lagrange
tension = 0.2
min_x = 40.715
max_x = 259.265
min_y = 38.99
max_y = 261.19
=======================
Extruder max_extrude_ratio=2.078758
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
webhooks client 1964179376: New connection
webhooks client 1964179376: Client info {'program': 'Moonraker', 'version': 'v0.7.1-885-g4550664'}
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_samd51p20a_FF95F917484633532020204E260E18FF-if00'
